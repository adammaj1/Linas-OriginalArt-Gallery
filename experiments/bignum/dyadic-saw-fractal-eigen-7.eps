%!PS-Adobe-2.0 EPSF-2.0
%%Title: dyadic-saw-fractal-eigen-7.eps
%%Creator: gnuplot 4.2 patchlevel 4 
%%CreationDate: Sun Sep 19 14:13:20 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (dyadic-saw-fractal-eigen-7.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 4 )
  /Author (Linas Vepstas)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Sep 19 14:13:20 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
658 280 M
63 0 V
6325 0 R
-63 0 V
574 280 M
(-25) Rshow
1.000 UL
LTb
658 714 M
63 0 V
6325 0 R
-63 0 V
574 714 M
(-20) Rshow
1.000 UL
LTb
658 1148 M
63 0 V
6325 0 R
-63 0 V
-6409 0 R
(-15) Rshow
1.000 UL
LTb
658 1582 M
63 0 V
6325 0 R
-63 0 V
-6409 0 R
(-10) Rshow
1.000 UL
LTb
658 2016 M
63 0 V
6325 0 R
-63 0 V
-6409 0 R
(-5) Rshow
1.000 UL
LTb
658 2450 M
63 0 V
6325 0 R
-63 0 V
-6409 0 R
( 0) Rshow
1.000 UL
LTb
658 2884 M
63 0 V
6325 0 R
-63 0 V
-6409 0 R
( 5) Rshow
1.000 UL
LTb
658 3318 M
63 0 V
6325 0 R
-63 0 V
-6409 0 R
( 10) Rshow
1.000 UL
LTb
658 3752 M
63 0 V
6325 0 R
-63 0 V
-6409 0 R
( 15) Rshow
1.000 UL
LTb
658 4186 M
63 0 V
6325 0 R
-63 0 V
-6409 0 R
( 20) Rshow
1.000 UL
LTb
658 4620 M
63 0 V
6325 0 R
-63 0 V
-6409 0 R
( 25) Rshow
1.000 UL
LTb
658 280 M
0 63 V
0 4277 R
0 -63 V
658 140 M
( 0) Cshow
1.000 UL
LTb
1297 280 M
0 63 V
0 4277 R
0 -63 V
0 -4417 R
( 0.1) Cshow
1.000 UL
LTb
1936 280 M
0 63 V
0 4277 R
0 -63 V
0 -4417 R
( 0.2) Cshow
1.000 UL
LTb
2574 280 M
0 63 V
0 4277 R
0 -63 V
0 -4417 R
( 0.3) Cshow
1.000 UL
LTb
3213 280 M
0 63 V
0 4277 R
0 -63 V
0 -4417 R
( 0.4) Cshow
1.000 UL
LTb
3852 280 M
0 63 V
0 4277 R
0 -63 V
0 -4417 R
( 0.5) Cshow
1.000 UL
LTb
4491 280 M
0 63 V
0 4277 R
0 -63 V
0 -4417 R
( 0.6) Cshow
1.000 UL
LTb
5130 280 M
0 63 V
0 4277 R
0 -63 V
0 -4417 R
( 0.7) Cshow
1.000 UL
LTb
5768 280 M
0 63 V
0 4277 R
0 -63 V
0 -4417 R
( 0.8) Cshow
1.000 UL
LTb
6407 280 M
0 63 V
0 4277 R
0 -63 V
0 -4417 R
( 0.9) Cshow
1.000 UL
LTb
7046 280 M
0 63 V
0 4277 R
0 -63 V
0 -4417 R
( 1) Cshow
1.000 UL
LTb
1.000 UL
LTb
658 4620 N
658 280 L
6388 0 V
0 4340 V
-6388 0 V
Z stroke
3852 4830 M
(Dyadic Sawtooth Eigenfunction v_7) Cshow
1.000 UP
1.000 UL
LTb
3.000 UL
LT0
658 2450 M
5 1300 V
5 -610 V
6 -286 V
5 165 V
5 284 V
5 -1210 V
5 692 V
5 102 V
6 671 V
5 -971 V
5 -457 V
5 -132 V
5 70 V
6 1146 V
5 -262 V
5 -451 V
5 1244 V
5 -920 V
5 -272 V
6 -153 V
5 -314 V
5 17 V
5 -407 V
5 578 V
6 -424 V
5 385 V
5 642 V
5 242 V
5 -440 V
5 201 V
6 -479 V
5 6 V
5 1098 V
5 -128 V
5 -1134 V
6 862 V
5 -835 V
5 355 V
5 -331 V
5 51 V
5 139 V
6 -850 V
5 855 V
5 -833 V
5 -563 V
5 1280 V
5 108 V
6 -532 V
5 21 V
5 -217 V
5 127 V
5 606 V
6 403 V
5 -343 V
5 410 V
5 -74 V
5 -281 V
5 -97 V
6 464 V
5 -496 V
5 -754 V
5 1205 V
5 -506 V
6 -183 V
5 969 V
5 76 V
5 110 V
5 -511 V
5 -1014 V
6 650 V
5 -5 V
5 796 V
5 -1092 V
5 -3 V
6 524 V
5 -454 V
5 -641 V
5 1185 V
5 -430 V
5 -239 V
6 69 V
5 331 V
5 -1185 V
5 622 V
5 119 V
6 567 V
5 -631 V
5 -694 V
5 -161 V
5 77 V
5 1207 V
6 -357 V
5 -272 V
5 1081 V
5 -919 V
5 -129 V
6 274 V
5 -384 V
5 346 V
5 -670 V
5 717 V
5 -553 V
6 475 V
5 613 V
stroke 1197 2698 M
5 260 V
5 -462 V
5 258 V
6 -625 V
5 291 V
5 726 V
5 152 V
5 -1152 V
5 741 V
6 -798 V
5 513 V
5 -391 V
5 578 V
5 8 V
6 -917 V
5 1000 V
5 -681 V
5 -894 V
5 1421 V
5 59 V
6 -456 V
5 10 V
5 -258 V
5 202 V
5 511 V
6 390 V
5 -350 V
5 436 V
5 20 V
5 -291 V
5 -268 V
6 -25 V
5 -464 V
5 -737 V
5 997 V
5 -174 V
5 -396 V
6 957 V
5 36 V
5 299 V
5 -683 V
5 -754 V
6 326 V
5 97 V
5 939 V
5 -1101 V
5 -294 V
5 932 V
6 -736 V
5 -528 V
5 1332 V
5 -162 V
5 -321 V
6 88 V
5 326 V
5 -1138 V
5 404 V
5 445 V
5 299 V
6 -491 V
5 -533 V
5 -419 V
5 7 V
5 1442 V
6 -540 V
5 -163 V
5 1024 V
5 -941 V
5 -44 V
5 -23 V
6 -809 V
5 485 V
5 -745 V
5 736 V
5 -487 V
6 367 V
5 680 V
5 285 V
5 -593 V
5 306 V
5 -531 V
6 302 V
5 565 V
5 370 V
5 -1301 V
5 700 V
6 -630 V
5 345 V
5 -247 V
5 606 V
5 -185 V
5 -876 V
6 1072 V
5 -692 V
5 -856 V
5 1289 V
5 89 V
6 -273 V
5 -149 V
5 -351 V
5 509 V
5 125 V
5 647 V
6 -399 V
stroke 1736 2368 M
5 359 V
5 116 V
5 -232 V
5 -422 V
6 680 V
5 -507 V
5 -561 V
5 587 V
5 204 V
5 -511 V
6 886 V
5 -50 V
5 628 V
5 -953 V
5 -585 V
6 203 V
5 63 V
5 905 V
5 -742 V
5 -751 V
5 1175 V
6 -743 V
5 -530 V
5 1151 V
5 55 V
5 -298 V
6 -49 V
5 410 V
5 -1165 V
5 391 V
5 576 V
5 124 V
6 -351 V
5 -557 V
5 -506 V
5 78 V
5 1352 V
5 -412 V
6 -170 V
5 849 V
5 -888 V
5 167 V
5 91 V
6 -332 V
5 388 V
5 -874 V
5 852 V
5 -493 V
5 190 V
6 965 V
5 92 V
5 -500 V
5 183 V
5 -449 V
6 277 V
5 622 V
5 297 V
5 -1182 V
5 635 V
5 -573 V
6 152 V
5 -179 V
5 216 V
5 -295 V
5 -835 V
6 1192 V
5 -868 V
5 -684 V
5 1109 V
5 127 V
5 -220 V
6 23 V
5 -643 V
5 604 V
5 162 V
5 668 V
6 -531 V
5 453 V
5 159 V
5 -273 V
5 -565 V
5 264 V
6 -604 V
5 -313 V
5 228 V
5 402 V
5 -477 V
6 712 V
5 84 V
5 685 V
5 -1035 V
5 -449 V
5 -71 V
6 101 V
5 1076 V
5 -699 V
5 -917 V
5 1306 V
6 -914 V
5 -358 V
5 1135 V
5 55 V
5 -13 V
5 -336 V
stroke 2274 2167 M
6 501 V
5 -1201 V
5 343 V
5 663 V
5 162 V
6 -445 V
5 -483 V
5 -486 V
5 -18 V
5 1197 V
5 28 V
6 -513 V
5 927 V
5 -843 V
5 251 V
5 -476 V
6 -300 V
5 188 V
5 -913 V
5 940 V
5 -354 V
5 -221 V
6 1296 V
5 32 V
5 -458 V
5 -16 V
5 -204 V
5 152 V
6 562 V
5 431 V
5 -1201 V
5 403 V
5 -148 V
6 -181 V
5 -125 V
5 393 V
5 -474 V
5 -793 V
5 1259 V
6 -917 V
5 -657 V
5 990 V
5 97 V
5 42 V
6 -45 V
5 -763 V
5 666 V
5 42 V
5 785 V
5 -479 V
6 291 V
5 372 V
5 -347 V
5 -665 V
5 800 V
6 -427 V
5 -299 V
5 141 V
5 423 V
5 -483 V
5 654 V
6 116 V
5 636 V
5 -770 V
5 -622 V
5 -155 V
6 85 V
5 1150 V
5 -723 V
5 -753 V
5 1093 V
5 -858 V
6 -176 V
5 798 V
5 -55 V
5 322 V
5 -631 V
6 632 V
5 -1206 V
5 321 V
5 579 V
5 307 V
5 -539 V
6 -383 V
5 -663 V
5 283 V
5 822 V
5 221 V
6 -423 V
5 774 V
5 -856 V
5 483 V
5 -493 V
5 255 V
6 40 V
5 -921 V
5 964 V
5 -159 V
5 -547 V
6 1462 V
5 60 V
5 -503 V
5 34 V
5 -230 V
stroke 2813 2034 M
5 161 V
6 505 V
5 435 V
5 -1180 V
5 392 V
5 9 V
6 -344 V
5 -26 V
5 819 V
5 -479 V
5 -681 V
5 997 V
6 -508 V
5 -916 V
5 914 V
5 66 V
5 243 V
5 -211 V
6 -526 V
5 412 V
5 71 V
5 921 V
5 -543 V
6 81 V
5 853 V
5 -739 V
5 -481 V
5 112 V
5 -381 V
6 -325 V
5 133 V
5 397 V
5 -416 V
5 541 V
6 300 V
5 368 V
5 -502 V
5 -601 V
5 -305 V
5 -42 V
6 1442 V
5 -883 V
5 -727 V
5 1099 V
5 -936 V
6 -110 V
5 1065 V
5 -102 V
5 468 V
5 -742 V
5 723 V
6 -1202 V
5 251 V
5 619 V
5 333 V
5 -601 V
6 -385 V
5 -571 V
5 321 V
5 580 V
5 435 V
5 -489 V
6 685 V
5 -676 V
5 409 V
5 -726 V
5 7 V
6 -215 V
5 -860 V
5 1090 V
5 -262 V
5 -435 V
5 1327 V
6 34 V
5 -305 V
5 -112 V
5 -277 V
5 384 V
6 215 V
5 601 V
5 -1182 V
5 283 V
5 116 V
5 -236 V
6 -355 V
5 1097 V
5 -504 V
5 -642 V
5 679 V
6 -70 V
5 -1117 V
5 847 V
5 41 V
5 491 V
5 -537 V
6 -239 V
5 216 V
5 125 V
5 844 V
5 -206 V
6 -363 V
5 1087 V
5 -701 V
5 -519 V
stroke 3352 2185 M
5 468 V
5 -112 V
6 -320 V
5 3 V
5 383 V
5 -307 V
5 394 V
5 556 V
6 144 V
5 -350 V
5 -539 V
5 -541 V
5 94 V
6 1410 V
5 -818 V
5 -729 V
5 955 V
5 -927 V
5 109 V
6 412 V
5 -277 V
5 501 V
5 -934 V
5 875 V
6 -1118 V
5 -30 V
5 932 V
5 152 V
5 -564 V
5 -470 V
6 -498 V
5 326 V
5 564 V
5 395 V
5 -417 V
6 650 V
5 -629 V
5 241 V
5 -194 V
5 186 V
5 -205 V
6 -847 V
5 1137 V
5 -421 V
5 -243 V
5 1176 V
6 51 V
5 -165 V
5 -89 V
5 -542 V
5 583 V
5 132 V
6 720 V
5 -1307 V
5 372 V
5 107 V
5 -272 V
6 -503 V
5 779 V
5 -615 V
5 -344 V
5 297 V
5 168 V
6 -1156 V
5 739 V
5 59 V
5 689 V
5 -769 V
6 -7 V
5 -11 V
5 77 V
5 1044 V
5 -172 V
5 -560 V
6 1263 V
5 -824 V
5 -424 V
5 -54 V
5 -273 V
6 -147 V
5 -176 V
5 379 V
5 -311 V
5 412 V
5 593 V
6 195 V
5 -412 V
5 -535 V
5 -521 V
5 48 V
6 1260 V
5 -391 V
5 -1037 V
5 941 V
5 -867 V
5 197 V
6 926 V
5 927 V
5 197 V
5 -867 V
5 941 V
5 -1037 V
6 -391 V
5 1260 V
stroke 3891 3335 M
5 48 V
5 -521 V
5 -535 V
6 -412 V
5 195 V
5 593 V
5 411 V
5 -310 V
5 378 V
6 -175 V
5 -147 V
5 -273 V
5 -54 V
5 -424 V
6 -824 V
5 1263 V
5 -561 V
5 -172 V
5 1045 V
5 77 V
6 -11 V
5 -8 V
5 -768 V
5 689 V
5 59 V
6 738 V
5 -1155 V
5 168 V
5 297 V
5 -344 V
5 -615 V
6 779 V
5 -503 V
5 -272 V
5 106 V
5 373 V
6 -1308 V
5 721 V
5 132 V
5 583 V
5 -542 V
5 -89 V
6 -166 V
5 51 V
5 1177 V
5 -243 V
5 -421 V
6 1137 V
5 -847 V
5 -205 V
5 186 V
5 -194 V
5 241 V
6 -629 V
5 650 V
5 -417 V
5 394 V
5 565 V
6 326 V
5 -499 V
5 -469 V
5 -565 V
5 152 V
5 933 V
6 -30 V
5 -1119 V
5 875 V
5 -934 V
5 501 V
6 -276 V
5 412 V
5 109 V
5 -928 V
5 955 V
5 -728 V
6 -819 V
5 1411 V
5 94 V
5 -541 V
5 -539 V
6 -351 V
5 145 V
5 555 V
5 395 V
5 -308 V
5 383 V
6 3 V
5 -319 V
5 -112 V
5 468 V
5 -519 V
5 -701 V
6 1087 V
5 -363 V
5 -206 V
5 844 V
5 125 V
6 215 V
5 -238 V
5 -537 V
5 490 V
5 41 V
5 848 V
6 -1118 V
stroke 4430 2394 M
5 -69 V
5 679 V
5 -642 V
5 -504 V
6 1096 V
5 -354 V
5 -236 V
5 115 V
5 284 V
5 -1182 V
6 601 V
5 215 V
5 384 V
5 -278 V
5 -111 V
6 -305 V
5 33 V
5 1328 V
5 -435 V
5 -263 V
5 1091 V
6 -860 V
5 -215 V
5 6 V
5 -725 V
5 409 V
6 -677 V
5 686 V
5 -490 V
5 436 V
5 580 V
5 321 V
6 -572 V
5 -384 V
5 -601 V
5 332 V
5 620 V
6 251 V
5 -1203 V
5 724 V
5 -743 V
5 469 V
5 -102 V
6 1065 V
5 -110 V
5 -936 V
5 1099 V
5 -727 V
6 -883 V
5 1442 V
5 -43 V
5 -304 V
5 -601 V
5 -502 V
6 368 V
5 300 V
5 541 V
5 -417 V
5 398 V
6 133 V
5 -325 V
5 -382 V
5 113 V
5 -481 V
5 -739 V
6 852 V
5 82 V
5 -543 V
5 921 V
5 71 V
6 412 V
5 -526 V
5 -212 V
5 244 V
5 66 V
5 914 V
6 -916 V
5 -508 V
5 997 V
5 -681 V
5 -480 V
5 819 V
6 -25 V
5 -344 V
5 9 V
5 392 V
5 -1180 V
6 434 V
5 505 V
5 161 V
5 -229 V
5 34 V
5 -503 V
6 60 V
5 1461 V
5 -547 V
5 -158 V
5 964 V
6 -921 V
5 40 V
5 254 V
5 -492 V
5 482 V
5 -855 V
stroke 4968 2166 M
6 774 V
5 -424 V
5 222 V
5 822 V
5 283 V
6 -664 V
5 -382 V
5 -539 V
5 307 V
5 579 V
5 321 V
6 -1206 V
5 632 V
5 -631 V
5 321 V
5 -54 V
6 798 V
5 -177 V
5 -858 V
5 1093 V
5 -752 V
5 -723 V
6 1149 V
5 86 V
5 -155 V
5 -622 V
5 -770 V
6 635 V
5 117 V
5 654 V
5 -483 V
5 423 V
5 141 V
6 -300 V
5 -426 V
5 800 V
5 -665 V
5 -347 V
6 371 V
5 291 V
5 -479 V
5 786 V
5 42 V
5 665 V
6 -762 V
5 -45 V
5 41 V
5 98 V
5 990 V
6 -658 V
5 -916 V
5 1258 V
5 -792 V
5 -475 V
5 394 V
6 -125 V
5 -182 V
5 -147 V
5 403 V
5 -1201 V
6 430 V
5 563 V
5 152 V
5 -204 V
5 -17 V
5 -457 V
6 31 V
5 1297 V
5 -221 V
5 -355 V
5 941 V
5 -913 V
6 188 V
5 -300 V
5 -477 V
5 251 V
5 -842 V
6 927 V
5 -513 V
5 28 V
5 1196 V
5 -18 V
5 -485 V
6 -483 V
5 -446 V
5 163 V
5 663 V
5 343 V
6 -1202 V
5 501 V
5 -335 V
5 -14 V
5 200 V
5 1569 V
6 -357 V
5 -915 V
5 1306 V
5 -917 V
5 -698 V
6 1075 V
5 102 V
5 -72 V
5 -449 V
5 -1035 V
stroke 5507 1903 M
5 685 V
6 84 V
5 712 V
5 -476 V
5 401 V
5 228 V
6 -313 V
5 -604 V
5 264 V
5 -564 V
5 -274 V
5 159 V
6 454 V
5 -531 V
5 668 V
5 161 V
5 604 V
6 -643 V
5 24 V
5 -221 V
5 127 V
5 1109 V
5 -684 V
6 -868 V
5 1193 V
5 -836 V
5 -295 V
5 216 V
6 -179 V
5 153 V
5 -573 V
5 635 V
5 -1182 V
5 296 V
6 622 V
5 277 V
5 -449 V
5 183 V
5 -500 V
6 93 V
5 964 V
5 191 V
5 -493 V
5 852 V
5 -875 V
6 388 V
5 -332 V
5 91 V
5 167 V
5 -887 V
6 848 V
5 -169 V
5 -413 V
5 1352 V
5 78 V
5 -506 V
6 -557 V
5 -350 V
5 123 V
5 577 V
5 390 V
5 -1164 V
6 409 V
5 -48 V
5 -299 V
5 55 V
5 1151 V
6 -529 V
5 -743 V
5 1175 V
5 -752 V
5 -742 V
5 905 V
6 64 V
5 203 V
5 -585 V
5 -953 V
5 628 V
6 -50 V
5 885 V
5 -511 V
5 205 V
5 587 V
5 -561 V
6 -507 V
5 679 V
5 -422 V
5 -232 V
5 116 V
6 359 V
5 -399 V
5 647 V
5 126 V
5 509 V
5 -352 V
6 -149 V
5 -273 V
5 89 V
5 1290 V
5 -856 V
6 -693 V
5 1072 V
5 -875 V
5 -185 V
stroke 6046 2772 M
5 606 V
5 -248 V
6 346 V
5 -630 V
5 699 V
5 -1301 V
5 370 V
6 565 V
5 303 V
5 -531 V
5 305 V
5 -592 V
5 284 V
6 681 V
5 366 V
5 -487 V
5 736 V
5 -744 V
6 484 V
5 -809 V
5 -22 V
5 -44 V
5 -941 V
5 1024 V
6 -164 V
5 -540 V
5 1442 V
5 7 V
5 -419 V
6 -533 V
5 -490 V
5 299 V
5 444 V
5 405 V
5 -1138 V
6 325 V
5 89 V
5 -321 V
5 -163 V
5 1332 V
6 -528 V
5 -736 V
5 933 V
5 -295 V
5 -1100 V
5 939 V
6 96 V
5 327 V
5 -754 V
5 -683 V
5 299 V
6 35 V
5 957 V
5 -395 V
5 -174 V
5 996 V
5 -736 V
6 -464 V
5 -25 V
5 -269 V
5 -291 V
5 20 V
5 436 V
6 -350 V
5 390 V
5 512 V
5 202 V
5 -259 V
6 10 V
5 -455 V
5 58 V
5 1422 V
5 -895 V
5 -681 V
6 1001 V
5 -918 V
5 8 V
5 578 V
5 -391 V
6 514 V
5 -799 V
5 742 V
5 -1153 V
5 152 V
5 726 V
6 291 V
5 -625 V
5 258 V
5 -462 V
5 261 V
6 612 V
5 475 V
5 -553 V
5 717 V
5 -669 V
5 345 V
6 -383 V
5 273 V
5 -129 V
5 -919 V
5 1082 V
6 -273 V
5 -357 V
5 1207 V
stroke 6585 3920 M
5 77 V
5 -161 V
5 -693 V
6 -631 V
5 566 V
5 119 V
5 622 V
5 -1185 V
6 331 V
5 70 V
5 -240 V
5 -429 V
5 1184 V
5 -641 V
6 -454 V
5 525 V
5 -3 V
5 -1093 V
5 796 V
6 -4 V
5 649 V
5 -1014 V
5 -511 V
5 111 V
5 75 V
6 969 V
5 -183 V
5 -505 V
5 1204 V
5 -754 V
6 -495 V
5 463 V
5 -97 V
5 -281 V
5 -74 V
5 410 V
6 -343 V
5 404 V
5 605 V
5 127 V
5 -217 V
6 21 V
5 -532 V
5 108 V
5 1281 V
5 -564 V
5 -833 V
6 856 V
5 -850 V
5 138 V
5 51 V
5 -330 V
5 355 V
6 -835 V
5 862 V
5 -1134 V
5 -129 V
5 1099 V
6 6 V
5 -480 V
5 201 V
5 -440 V
5 242 V
5 642 V
6 385 V
5 -424 V
5 579 V
5 -408 V
5 17 V
6 -313 V
5 -153 V
5 -272 V
5 -921 V
5 1245 V
5 -451 V
6 -262 V
5 1146 V
5 69 V
5 -132 V
5 -457 V
6 -970 V
5 670 V
5 102 V
5 692 V
5 -1210 V
5 284 V
6 166 V
5 -287 V
stroke
1.000 UL
LTb
658 4620 N
658 280 L
6388 0 V
0 4340 V
-6388 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
