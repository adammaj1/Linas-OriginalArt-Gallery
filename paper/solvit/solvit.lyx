#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{url} 
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman "times" "default"
\font_sans "helvet" "default"
\font_typewriter "courier" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks true
\pdf_pdfborder true
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry false
\use_package amsmath 2
\use_package amssymb 2
\use_package cancel 1
\use_package esint 0
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 0
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Exactly Solvable Iteration
\end_layout

\begin_layout Author
Linas Vepstas
\end_layout

\begin_layout Date
December 2017
\end_layout

\begin_layout Abstract
This is a brief note on some exactly solvable models of iteration.
 This is a sequence of explorations that attempt to develop ideas and tools
 for analyzing and understanding diverse systems such as the Feigenbaum
 map and the iterated circle map (aka Arnold tongues).
 We don't quite get there, but do explore systems that can be understood
 through formal manipulations.
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
This is an exploration of iterated maps on the unit interval of the real
 number line.
 That is, maps 
\begin_inset Formula 
\[
f:[0,1]\to[0,1]
\]

\end_inset

together with the consequence of iterating them by composing: 
\begin_inset Formula 
\[
f^{n}(x)=(f\circ f\circ\cdots\circ f)(x)=f(f(\cdots f(x)\cdots))
\]

\end_inset

Such iterated maps are often ergodic and sometimes chaotic.
 The below is concerned with some very simple, exactly solvable iterated
 maps.
 The goal is to approach more complex and chaotic maps, armed with this
 tool set.
\end_layout

\begin_layout Subsection
Bernoulli shift
\end_layout

\begin_layout Standard
Consider the classic Bernoulli shift.
 This is the iterated map on the unit interval, given by iteration the function
\begin_inset Formula 
\[
b(x)=\begin{cases}
2x & \mbox{ for }0\le x<\frac{1}{2}\\
2x-1 & \mbox{ for }\frac{1}{2}\le x\le1
\end{cases}
\]

\end_inset

The symbolic dynamics of this map gives the binary digit expansion of 
\begin_inset Formula $x$
\end_inset

.
 That is, write 
\begin_inset Formula 
\[
b^{n}(x)=(b\circ b\circ\cdots\circ b)(x)=b(b(\cdots b(x)\cdots))
\]

\end_inset

to denote the 
\begin_inset Formula $n$
\end_inset

-fold iteration of 
\begin_inset Formula $b$
\end_inset

 and let 
\begin_inset Formula $b^{0}(x)=x$
\end_inset

.
 The symbolic dynamics is given by the bit-sequence
\begin_inset Formula 
\[
b_{n}=\begin{cases}
0 & \mbox{ if }0\le b^{n}(x)<\frac{1}{2}\\
1 & \mbox{ if }\frac{1}{2}\le b^{n}(x)\le1
\end{cases}
\]

\end_inset

Of course, the symbolic dynamics recreates the initial real number:
\begin_inset Formula 
\[
x=\sum_{n=0}^{\infty}b_{n}2^{-n-1}
\]

\end_inset


\end_layout

\begin_layout Standard
It is well known that the Bernoulli shift is ergodic.
 The corresponding transfer operator is exactly solvable, and has both discrete
 and continuous spectra, depending on functional space on which it acts.
\end_layout

\begin_layout Subsection
Downshift
\end_layout

\begin_layout Standard
Consider a similar shift process; I don't know if it has a commonly used
 name, so I will call it a 
\begin_inset Quotes eld
\end_inset

downshift
\begin_inset Quotes erd
\end_inset

.
 Give a constant 
\begin_inset Formula $K$
\end_inset

 fixed so that 
\begin_inset Formula $0\le K\le1$
\end_inset

 the downshift is given by iterating on
\begin_inset Formula 
\[
b_{K}(x)=\begin{cases}
2Kx & \mbox{ for }0\le x<\frac{1}{2}\\
2K\left(x-\frac{1}{2}\right) & \mbox{ for }\frac{1}{2}\le x\le1
\end{cases}
\]

\end_inset

It also generates a symbolic dynamics, defined in the same way as above:
 write
\begin_inset Formula 
\begin{equation}
k_{n}=\begin{cases}
0 & \mbox{ if }0\le b_{K}^{n}(x)<\frac{1}{2}\\
1 & \mbox{ if }\frac{1}{2}\le b_{K}^{n}(x)\le1
\end{cases}\label{eq:down-bits}
\end{equation}

\end_inset

Given the symbolic dynamics, one can reconstruct the original value whenever
 
\begin_inset Formula $1/2<K$
\end_inset

 as
\begin_inset Formula 
\[
x=\frac{k_{0}}{2}+\frac{1}{2K}\left(\frac{k_{1}}{2}+\frac{1}{2K}\left(\frac{k_{2}}{2}+\frac{1}{2K}\left(\frac{k_{3}}{2}+\frac{1}{2K}\left(\cdots\right)\right)\right)\right)
\]

\end_inset

That is, one clearly sees that 
\begin_inset Formula $b_{K}(x)$
\end_inset

 acts as a shift on this sequence:
\begin_inset Formula 
\[
b_{K}(x)=\frac{k_{1}}{2}+\frac{1}{2K}\left(\frac{k_{2}}{2}+\frac{1}{2K}\left(\frac{k_{3}}{2}+\frac{1}{2K}\left(\frac{k_{4}}{2}+\frac{1}{2K}\left(\cdots\right)\right)\right)\right)
\]

\end_inset

In this sense, this shift is 
\begin_inset Quotes eld
\end_inset

exactly solvable
\begin_inset Quotes erd
\end_inset

: the above provides a closed-form solution for iterating and un-iterating
 the sequence.
\end_layout

\begin_layout Standard
Multiplying out the above sequence, one obtains the series
\begin_inset Formula 
\begin{equation}
x=\frac{1}{2}\,\sum_{n=0}^{\infty}\frac{k_{n}}{\left(2K\right)^{n}}\label{eq:shift series}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Note that the Bernoulli shift is re-obtained for 
\begin_inset Formula $K=1$
\end_inset

.
\end_layout

\begin_layout Subsection
Density Visualizations
\end_layout

\begin_layout Standard
Why is this interesting to explore? This is best illustrated with some graphs.
 Shown in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Undershift-Bifurcation-Diagram"

\end_inset

 is the 
\begin_inset Quotes eld
\end_inset

bifurcation diagram
\begin_inset Quotes erd
\end_inset

 for the downshift.
 It visualizes the long-term dynamics of the downshift.
 
\end_layout

\begin_layout Standard
This is done by generating a histogram, and then taking the limit, as follows.
 One divides the unit interval into a fixed sequence of equal-sized bins;
 say a total of 
\begin_inset Formula $N$
\end_inset

 bins, so that each is 
\begin_inset Formula $1/N$
\end_inset

 in width.
 Pick a starting 
\begin_inset Formula $x$
\end_inset

, and then iterate: if, at the 
\begin_inset Formula $n$
\end_inset

'th iteration, one has that 
\begin_inset Formula $j/N\le b_{K}^{n}(x)<(j+1)/N$
\end_inset

, then increment the count for the 
\begin_inset Formula $j$
\end_inset

'th bin.
 After a total of 
\begin_inset Formula $M$
\end_inset

 iterations, let 
\begin_inset Formula $c(j;M)$
\end_inset

 be the count in the 
\begin_inset Formula $j$
\end_inset

'th bin.
 This count is the histogram.
 In the limit of a large number of iterations, as well as small bin sizes,
 one obtains a distribution: 
\begin_inset Formula 
\[
\rho(y;x)=\lim_{N\to\infty}\lim_{M\to\infty}\frac{c(j;M)}{M}\mbox{ for }\frac{j}{N}\le y<\frac{j+1}{N}
\]

\end_inset

This distribution depends on the initial value 
\begin_inset Formula $x$
\end_inset

 chosen for the point to be iterated; a 
\begin_inset Quotes eld
\end_inset

nice
\begin_inset Quotes erd
\end_inset

 distribution results when one averages over all starting points:
\begin_inset Formula 
\[
\rho(y)=\int_{0}^{1}\rho(y;x)\,dx
\]

\end_inset

Numerically, this integration can be achieved by randomly sampling a large
 number of starting points.
 Observe that 
\begin_inset Formula $\rho(y)$
\end_inset

 is a probability distribution:
\begin_inset Formula 
\[
1=\int_{0}^{1}\rho(x)\,dx
\]

\end_inset

This probability distribution is an eigenstate of the transfer operator
 for the downshift; the definition of the transfer operator of the downshift
 is given later.
\end_layout

\begin_layout Standard
For each fixed 
\begin_inset Formula $K$
\end_inset

, one obtains a distinct distribution 
\begin_inset Formula $\rho_{K}(y)$
\end_inset

.
 The figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Undershift-Density-Distribution"

\end_inset

 illustrates some of these distributions.
 Note that, for 
\begin_inset Formula $k<1/2$
\end_inset

, the distribution is given by 
\begin_inset Formula $\rho_{K}(y)=\delta(y)$
\end_inset

, a Dirac delta function, located at 
\begin_inset Formula $y=0$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Downshift Density Distribution
\begin_inset CommandInset label
LatexCommand label
name "fig:Undershift-Density-Distribution"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename bigbern.eps
	width 70col%

\end_inset


\end_layout

\begin_layout Plain Layout
The above figure shows three different density distributions, for 
\begin_inset Formula $\rho_{0.6}(y)$
\end_inset

, 
\begin_inset Formula $\rho_{0.8}(y)$
\end_inset

 and 
\begin_inset Formula $\rho_{0.9}(y)$
\end_inset

, calculated numerically.
 This is obtained by histograming a large number of point trajectories,
 as described in the text.
 The small quantities of jitter are due to a finite number of samples.
 To generate this figure, a total of 
\begin_inset Formula $M=4000$
\end_inset

 iterations were performed, using randomly generated arbitrary-precision
 floats (the Gnu GMP package), partitioned into 
\begin_inset Formula $N=800$
\end_inset

 bins, and sampled 24000 times (or 30 times per bin) to perform the averaging
 integral.
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Generated with `fractal/misc/bitops/bigbern.C` edited to print only slices.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "100col%"
height "1pt"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The general trend of the distributions, as a function of 
\begin_inset Formula $K$
\end_inset

, can be visualized with a Feigenbaum-style 
\begin_inset Quotes eld
\end_inset

bifurcation diagram
\begin_inset Quotes erd
\end_inset

, shown in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Undershift-Bifurcation-Diagram"

\end_inset

.
 This color-codes each distribution 
\begin_inset Formula $\rho_{K}(y)$
\end_inset

 and arranges them in a stack; a horizontal slice through the diagram correspond
s to 
\begin_inset Formula $\rho_{K}(y)$
\end_inset

 for a fixed value of 
\begin_inset Formula $K$
\end_inset

.
 The term 
\begin_inset Quotes eld
\end_inset

bifurcation diagram
\begin_inset Quotes erd
\end_inset

 comes from its use to visualize the Feigenbaum iterator.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Downshift Bifurcation Diagram
\begin_inset CommandInset label
LatexCommand label
name "fig:Undershift-Bifurcation-Diagram"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename bern-4K.png
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Plain Layout
This figure shows the density 
\begin_inset Formula $\rho_{K}(y)$
\end_inset

, rendered in color.
 The constant 
\begin_inset Formula $K$
\end_inset

 is varied from 0 at the bottom to 1 at the top; whereas 
\begin_inset Formula $y$
\end_inset

 runs from 0 on the left to 1 on the right.
 Thus, a fixed value of 
\begin_inset Formula $K$
\end_inset

 corresponds to a horizontal slice through the diagram.
 The color green represents values of 
\begin_inset Formula $\rho_{K}(y)\approx0.5$
\end_inset

, while red represents 
\begin_inset Formula $\rho_{K}(y)\gtrsim1$
\end_inset

 and blue-to-black represents 
\begin_inset Formula $\rho_{K}(y)\apprle0.25$
\end_inset

.
 The diagram is 
\begin_inset Quotes eld
\end_inset

interesting
\begin_inset Quotes erd
\end_inset

 only for 
\begin_inset Formula $1/2<K$
\end_inset

; for smaller 
\begin_inset Formula $K$
\end_inset

's, one has that 
\begin_inset Formula $\rho_{K}(y)=\delta(y)$
\end_inset

, indicated by the column of red pixels on the left side of the image.
 The lines forming the fan shape are not straight, they only seem to be;
 in fact, they have a slight curve.
 This means that one cannot apply guess-work to discover the overall diagram
 shown here.
 
\end_layout

\begin_layout Plain Layout
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
created with fractal/misc/bitops/bigbern.C 800 800 1360 0.5 0.5 1 
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "100col%"
height "1pt"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Symbolic Dynamics
\end_layout

\begin_layout Standard
Given that iteration can generate strings of binary digits, and that these
 can be reassembled back into rel numbers, it is interesting to ask what
 those mappings look like.
 To firm up the notation, let
\begin_inset Formula $\left(b_{n}\right)=\left(b_{0},b_{1,},\cdots\right)$
\end_inset

 denote a sequence of bits (or symbols) and write
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
x_{K}\left(\left(b_{n}\right)\right)=\frac{1}{2}\,\sum_{n=0}^{\infty}\frac{b_{n}}{\left(2K\right)^{n}}
\]

\end_inset

as the real number generated from that sequence.
 Conversely, given a real number 
\begin_inset Formula $x$
\end_inset

, let 
\begin_inset Formula $\left(k_{n;K}\left(x\right)\right)$
\end_inset

 denote the sequence of bits obtained by iterating the downshift on 
\begin_inset Formula $x$
\end_inset

 with constant 
\begin_inset Formula $K$
\end_inset

; that is, the sequence generated by eqn.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:down-bits"

\end_inset

.
 Both transformations between sequence and real number mostly make sense
 only when 
\begin_inset Formula $K>1/2$
\end_inset

.
\end_layout

\begin_layout Standard
Two interesting functions can be considered.
 One is the compressor 
\begin_inset Formula 
\[
\mbox{cpr}_{K}(y)=x_{1}\left(\left(k_{n;K}\left(y\right)\right)\right)
\]

\end_inset

and the other is the expander
\begin_inset Formula 
\begin{equation}
\mbox{pdr}_{K}(y)=x_{K}\left(\left(k_{n;1}\left(y\right)\right)\right)\label{eq:expander function}
\end{equation}

\end_inset

The terms 
\begin_inset Quotes eld
\end_inset

compressor
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

expander
\begin_inset Quotes erd
\end_inset

 are being invented here to indicate negative and positive Lyapunov exponents
 associated with the two functions: That is, for almost all 
\begin_inset Formula $y$
\end_inset

 and for sufficiently small 
\begin_inset Formula $\epsilon$
\end_inset

, one has that 
\begin_inset Formula $\mbox{cpr}(y+\epsilon)=\mbox{cpr}(y)$
\end_inset

, and that, likewise, for almost all 
\begin_inset Formula $y$
\end_inset

 and for sufficiently small 
\begin_inset Formula $\epsilon$
\end_inset

 and 
\begin_inset Formula $\delta$
\end_inset

, that 
\begin_inset Formula $\left|\mbox{pdr}(y+\epsilon)-\mbox{pdr}(y)\right|>\delta$
\end_inset

 .
 These two functions are illustrated in figures 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Compressor-Function"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Expander-Function"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Compressor Function
\begin_inset CommandInset label
LatexCommand label
name "fig:Compressor-Function"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename cpr.eps
	width 70col%

\end_inset


\end_layout

\begin_layout Plain Layout
This illustrates the compressor function for various values of 
\begin_inset Formula $K$
\end_inset

.
 As should be clear, almost all input values are mapped to a set of discrete
 output values.
 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
generated with fractal/misc/bitops/remap.c and remap.gplot
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "100col%"
height "1pt"

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Expander Function
\begin_inset CommandInset label
LatexCommand label
name "fig:Expander-Function"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename pdr.eps
	width 70col%

\end_inset


\end_layout

\begin_layout Plain Layout
This illustrates the expander function for various values of 
\begin_inset Formula $K$
\end_inset

.
 As should be clear, almost all neighboring input values are mapped to wildly
 different output values.
 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
generated with fractal/misc/bitops/remap.c and remap.gplot
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "100col%"
height "1pt"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The two functions are adjoint, in that 
\begin_inset Formula $\mbox{cpr}_{K}\left(\mbox{pdr}_{K}(y)\right)=y$
\end_inset

 almost everywhere, but 
\begin_inset Formula $\mbox{pdr}_{K}\left(\mbox{cpr}_{K}(y)\right)\ne y$
\end_inset

 almost everywhere.
 Both results can be understood as following from the fact that 
\begin_inset Formula $b_{K}(x)$
\end_inset

 acts as a shift.
\end_layout

\begin_layout Standard
The figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Range-compress"

\end_inset

 visualizes the range of the compressor as a function of 
\begin_inset Formula $K$
\end_inset

.
 The most curious feature here is the appearance of 
\begin_inset Quotes eld
\end_inset

gaps
\begin_inset Quotes erd
\end_inset

, reminiscent of Arnold tongues, as 
\begin_inset Formula $K$
\end_inset

 approaches 1 from below.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Range of the compressor
\begin_inset CommandInset label
LatexCommand label
name "fig:Range-compress"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename unmap.png
	width 100col%

\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Plain Layout
This figure illustrates a color coded visualization of the range of the
 compressor function.
 As before 
\begin_inset Formula $K$
\end_inset

 varies from 0 at the bottom to 1 at the top, and 
\begin_inset Formula $y$
\end_inset

 varies from 0 on the left to 1 on the right.
 In general, the compressor function maps intervals of the real number line
 to single points; the color corresponds to the size (the measure) of the
 intervals that were mapped to that particular point.
 Blue corresponds to a compression of the measure by about 1, green to a
 compression of about 2-3, and yellow-read to a compression greater than
 that.
\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "100col%"
height "1pt"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Self similarity
\end_layout

\begin_layout Standard
The two functions cpr and pdr are self-similar.
 The pdr function demonstrates classic period doubling self-similarity:
 namely, under 
\begin_inset Formula $g(x)=x/2$
\end_inset

, it behaves as
\begin_inset Formula 
\[
\left(\mbox{pdr}_{K}\circ g\right)\left(x\right)=\mbox{pdr}_{K}\left(\frac{x}{2}\right)=\frac{1}{2K}\mbox{pdr}_{K}\left(x\right)
\]

\end_inset

while under reflection 
\begin_inset Formula $r(x)=1-x$
\end_inset

, it behaves as 
\begin_inset Formula 
\[
\left(\mbox{pdr}_{K}\circ r\right)\left(x\right)=\mbox{pdr}_{K}\left(1-x\right)=\left(\frac{K}{2K-1}-\mbox{pdr}_{K}\left(x\right)\right)
\]

\end_inset

Note that 
\begin_inset Formula 
\[
\lim_{x\to1}\,\mbox{pdr}_{K}\left(x\right)=\frac{K}{2K-1}
\]

\end_inset

The full dyadic monoid is generated by the generators 
\begin_inset Formula $g$
\end_inset

 and 
\begin_inset Formula $r$
\end_inset

; see other posts from me for lengthly expositions on the structure of the
 dyadic monoid and its relationship to the Cantor set and a large variety
 of fractals.
\end_layout

\begin_layout Standard
The function cpr also exhibits self-similarity, although it alters (expands)
 what happens on the 
\begin_inset Formula $x$
\end_inset

 axis.
 Several self-similarities are apparent.
 First, for 
\begin_inset Formula $0\le x\le1$
\end_inset

, one has
\begin_inset Formula 
\[
\mbox{cpr}_{K}\left(\frac{x}{2}\right)=\frac{1}{2}\mbox{cpr}_{K}\left(Kx\right)
\]

\end_inset

Equivalently, for 
\begin_inset Formula $0\le y\le K$
\end_inset

 one can trivially restate the above as
\begin_inset Formula 
\[
\mbox{cpr}_{K}\left(\frac{y}{2K}\right)=\frac{1}{2}\mbox{cpr}_{K}\left(y\right)
\]

\end_inset

Although it follows trivially, this restatement helps avoid later confusion.
\end_layout

\begin_layout Standard
The left and right halves are identical to one-another, but offset: 
\begin_inset Formula 
\[
\mbox{cpr}_{K}\left(\frac{1}{2}+\frac{x}{2}\right)=\frac{1}{2}+\mbox{cpr}_{K}\left(\frac{x}{2}\right)
\]

\end_inset

It follows that
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\mbox{cpr}_{K}\left(\frac{1}{2}+\frac{y}{2K}\right)=\frac{1}{2}+\frac{1}{2}\mbox{cpr}_{K}\left(y\right)
\]

\end_inset

Combining the above results into one, one has that
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\mbox{cpr}_{K}\left(\frac{y}{2K}\right)+\mbox{cpr}_{K}\left(\frac{1}{2}+\frac{y}{2K}\right)=\frac{1}{2}+\mbox{cpr}_{K}\left(y\right)
\]

\end_inset

This last form is interesting, as it makes an appearence in relation to
 the transfer operator, defined below.
\end_layout

\begin_layout Subsection
Other things with similar symmetry
\end_layout

\begin_layout Standard
The cpr curve is just one that belongs to a class of such curves.
 As an example, one may construct a Takagi (blancmange) curve by iterating
 triangles whose peak is located at 
\begin_inset Formula $1/2K$
\end_inset

.
 The Takagi curve is an example of a curve transforming under a 3-dimensional
 represention of the dyadic monoid; the cpr curves transforms under a two-dimens
ional representtation.
 See my paper on the Takagi curve for details.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Skew-Takagi-Curve"

\end_inset

 shows such a curve.
 Denote by 
\begin_inset Formula $\mbox{tak}_{K;w}\left(x\right)$
\end_inset

a curve constructed in this fashion.
 The transformation properties of this curve include self-similarity on
 the left, as
\begin_inset Formula 
\[
\mbox{tak}_{K;w}\left(\frac{x}{2K}\right)=x+w\;\mbox{tak}_{K;w}\left(x\right)
\]

\end_inset

for 
\begin_inset Formula $0\le x\le1$
\end_inset

 and self-similarity on the right, as
\begin_inset Formula 
\[
\mbox{tak}_{K;w}\left(\frac{1}{2K}+x\left(1-\frac{1}{2K}\right)\right)=1-x+w\;\mbox{tak}_{K;w}\left(x\right)
\]

\end_inset

Both of these properties follow directly from the construction of the curve;
 they can be taken as the defining equations for the curve.
 That is, the curve can be taken as that function which satisfies these
 two recursion relations.
\end_layout

\begin_layout Standard
The derivative of the skew Takagi curve is shown in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Skew-Haar-Wavelet"

\end_inset

, and, for lack of a better name, could be called the skew Haar fractal
 wavelet.
 It can be defined as the formal derivative
\begin_inset Formula 
\[
\mbox{har}_{K;w}\left(x\right)=\frac{d}{dx}\,\mbox{tak}_{K;w}\left(x\right)
\]

\end_inset

This formal derivative is well-defined, as the skew Takagi is smooth and
 piecewise-linear almost everywhere; the places where it has corners is
 a dense set of measure zero.
 That is, the derivative is defined everywhere, except on a set of measure
 zero, which happens to be dense in the unit interval.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Skew Takagi Curve
\begin_inset CommandInset label
LatexCommand label
name "fig:Skew-Takagi-Curve"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename skew.eps
	width 70col%

\end_inset


\end_layout

\begin_layout Plain Layout
This figure shows a skew Takagi curve, and the first four steps of its construct
ion.
 The initial triangle is of height 1; the apex is located at 
\begin_inset Formula $1/2K$
\end_inset

, for K=0.8 in this figure.
 Subsequent triangles obtain a height of w=0.7 above the apex point, and
 are similarly skew.
 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
generated with `fractal/misc/bitops/skew.c` and `skew.gplot`
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "100col%"
height "1pt"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Note that the Haar fractal wavelet is piece-wise constant everywhere.
 It is constructed from a 
\begin_inset Quotes eld
\end_inset

mother wavelet
\begin_inset Quotes erd
\end_inset

 given by
\begin_inset Formula 
\begin{equation}
h_{K}(x)=\begin{cases}
2K & \mbox{for }0\le x<\frac{1}{2K}\\
\frac{-2K}{2K-1} & \mbox{for }\frac{1}{2K}\le x\le1
\end{cases}\label{eq:Haar mother}
\end{equation}

\end_inset

which is then iterated on to form the fractal curve 
\begin_inset Formula $\mbox{har}_{K;w}\left(x\right)$
\end_inset

.
 The self symmetries are
\begin_inset Formula 
\[
\mbox{har}_{K;w}\left(\frac{x}{2K}\right)=2K+w\;\mbox{har}_{K;w}\left(x\right)
\]

\end_inset

 and
\begin_inset Formula 
\[
\mbox{har}_{K;w}\left(\frac{1}{2K}+x\left(1-\frac{1}{2K}\right)\right)=-\frac{2K}{2K-1}+w\;\mbox{har}_{K;w}\left(x\right)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Skew Haar Wavelet
\begin_inset CommandInset label
LatexCommand label
name "fig:Skew-Haar-Wavelet"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename haar.eps
	width 70col%

\end_inset


\end_layout

\begin_layout Plain Layout
This figure shows the derivative of the skew Takagi curve.
 Note that it is piece-wise constant everywhere.
 The mother wavelet is shown, as well as the fourth iteration.
 The specific values graphed are 
\begin_inset Formula $K=0.8$
\end_inset

 and 
\begin_inset Formula $w=0.7$
\end_inset

.
 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
generated with `fractal/misc/bitops/skew.c` and `skew.gplot`
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "100col%"
height "1pt"

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Transfer operators
\end_layout

\begin_layout Standard
Given an iterated map 
\begin_inset Formula $g:[0,1]\to[0,1]$
\end_inset

 on the unit interval, the transfer operator defines how distributions are
 acted on by this map.
 It is defined as
\begin_inset Formula 
\[
\left[\mathcal{L}_{g}f\right]\left(y\right)=\sum_{x=g^{-1}(y)}\frac{f(x)}{\left|g^{\prime}(x)\right|}
\]

\end_inset

For 
\begin_inset Formula $g(x)$
\end_inset

 the map 
\begin_inset Formula $b_{K}(x)$
\end_inset

 one gets
\begin_inset Formula 
\begin{equation}
\left[\mathcal{L}_{K}f\right]\left(y\right)=\begin{cases}
\frac{1}{2K}\left[f\left(\frac{y}{2K}\right)+f\left(\frac{y+K}{2K}\right)\right] & \mbox{ for }0\le y\le K\\
0 & \mbox{ for }K<y\le1
\end{cases}\label{eq:xfer oper}
\end{equation}

\end_inset

The density distributions graphed in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Undershift-Density-Distribution"

\end_inset

 are those functions satisfying 
\begin_inset Formula 
\[
\left[\mathcal{L}_{K}\rho\right]\left(y\right)=\rho\left(y\right)
\]

\end_inset

That is, the 
\begin_inset Formula $\rho(y)$
\end_inset

 satisfies 
\begin_inset Formula 
\begin{equation}
\rho\left(y\right)=\frac{1}{2K}\left[\rho\left(\frac{y}{2K}\right)+\rho\left(\frac{y+K}{2K}\right)\right]\label{eq:eigen-eqn}
\end{equation}

\end_inset

whenever 
\begin_inset Formula $0\le y\le K$
\end_inset

 and 
\begin_inset Formula $\rho(y)=0$
\end_inset

 for 
\begin_inset Formula $K<y\le1$
\end_inset

.
\end_layout

\begin_layout Standard
More generally, one is interested in characterizing the eigenspectrum
\begin_inset Formula 
\[
\left[\mathcal{L}_{K}\rho\right]\left(y\right)=\lambda\rho\left(y\right)
\]

\end_inset

for eigenvalues 
\begin_inset Formula $\lambda\le1$
\end_inset

 and eigenfunctions 
\begin_inset Formula $\rho(y)$
\end_inset

.
 Typically, on is interested in imposing conditions on the eigenfunctions,
 such that the be (almost-)smooth, or integrable, or square-integrable.
 Clearly one has, in any case, that 
\begin_inset Formula $\rho(y)=0$
\end_inset

 whenever 
\begin_inset Formula $K<y\le1$
\end_inset

.
\end_layout

\begin_layout Standard
In general, the largest eigenvalue will be 
\begin_inset Formula $\lambda=1$
\end_inset

; this is the Frobenius-Perron eignevalue.
\end_layout

\begin_layout Standard
A very minor simplification can be achieved with a change of variable.
 Let 
\begin_inset Formula $y=K-\epsilon$
\end_inset

.
 Then the eigenequation becomes
\begin_inset Formula 
\[
2\lambda K\rho\left(K-\epsilon\right)=\rho\left(\frac{1}{2}-\frac{\epsilon}{2K}\right)+\rho\left(1-\frac{\epsilon}{2K}\right)
\]

\end_inset

The second term vanishes whenever 
\begin_inset Formula $K<1-\epsilon/2K$
\end_inset

 or 
\begin_inset Formula $\epsilon<2K(1-K)$
\end_inset

 and so one has the simpler recurrence relation
\begin_inset Formula 
\begin{equation}
\lambda\rho\left(y\right)=\frac{1}{2K}\rho\left(\frac{y}{2K}\right)\label{eq:eigen-branch}
\end{equation}

\end_inset

whenever 
\begin_inset Formula $K(2K-1)<y\le K$
\end_inset

.
\end_layout

\begin_layout Standard
The equations 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:eigen-eqn"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:eigen-branch"

\end_inset

 can be treated as recurrence relations, defining the 
\begin_inset Formula $\lambda=1$
\end_inset

 eigenstate.
 Recursing on these gives exactly the densities shown in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Undershift-Density-Distribution"

\end_inset

.
 Computationally, these are much, much cheaper to compute, at least for
 
\begin_inset Formula $K$
\end_inset

 much larger than 1/2, although convergence issues present themselves as
 
\begin_inset Formula $K$
\end_inset

 approaches 1/2.
 The resulting density may be called the Frobenius-Perron eigenstate; because
 it can be quickly computed, it provides an alternative view of figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Undershift-Density-Distribution"

\end_inset

, free of stochastic sampling noise.
\end_layout

\begin_layout Subsection
Almost solutions
\end_layout

\begin_layout Standard
The cpr function behaves in an interesting fashion under the transfer operator.
 Specifically, let 
\begin_inset Formula $\mbox{ei}_{K}\left(x\right)=\mbox{cpr}_{K}\left(x\right)-1/2$
\end_inset

.
 The one finds that, for the domain 
\begin_inset Formula $0\le y\le K$
\end_inset


\begin_inset Formula 
\begin{align*}
\left[\mathcal{L}_{K}\mbox{ei}_{K}\right]\left(y\right)= & \frac{1}{2K}\left[\mbox{ei}_{K}\left(\frac{y}{2K}\right)+\mbox{ei}_{K}\left(\frac{y+K}{2K}\right)\right]\\
= & \frac{\mbox{ei}_{K}\left(y\right)}{2K}
\end{align*}

\end_inset

So, in this sense, its 
\begin_inset Quotes eld
\end_inset

almost
\begin_inset Quotes erd
\end_inset

 an eigenfunction.
 However, its not quire right; in this definition, 
\begin_inset Formula $\mbox{ei}_{K}\left(x\right)\ne0$
\end_inset

 when 
\begin_inset Formula $K<x$
\end_inset

.
 Manually forcing it to zero breaks the relationship.
 There is no obvious, simple modification of 
\begin_inset Formula $\mbox{ei}_{K}\left(x\right)$
\end_inset

 that would cause it to be a valid eigenvalue.
\end_layout

\begin_layout Subsection
Iterated transfer operator
\end_layout

\begin_layout Standard
To understand the nature of the steady-state solution (the Frobenius-Perron
 eigenstate), its is worth iterating on the recurrenace relation for it,
 by hand, the first few times.
 To do this, it is convenient to write it in the form
\begin_inset Formula 
\[
\left[\mathcal{L}_{K}f\right]\left(y\right)=\frac{\Theta\left(y\right)}{2K}\left[f\left(\alpha\left(y\right)\right)+f\left(\beta\left(y\right)\right)\right]
\]

\end_inset

where 
\begin_inset Formula $\Theta\left(y\right)=1$
\end_inset

 if 
\begin_inset Formula $y\le K$
\end_inset

 else zero; this is a step function to denote the vanishing for the operator
 for 
\begin_inset Formula $y>K$
\end_inset

.
 The functions 
\begin_inset Formula $\alpha\left(y\right)=y/2K$
\end_inset

 and 
\begin_inset Formula $\beta\left(y\right)=\frac{1}{2}+\alpha\left(y\right)$
\end_inset

 are convenient shorthands for symbolic iteration.
\end_layout

\begin_layout Standard
Iterating once gives
\begin_inset Formula 
\begin{eqnarray*}
\left[\mathcal{L}^{2}f\right]\left(y\right)= & \frac{\Theta\left(y\right)}{\left(2K\right)^{2}} & \left[\Theta\left(\alpha\left(y\right)\right)\left[f\left(\alpha^{2}\left(y\right)\right)+f\left(\left(\beta\circ\alpha\right)\left(y\right)\right)\right]+\right.\\
 &  & \left.\Theta\left(\beta\left(y\right)\right)\left[f\left(\left(\alpha\circ\beta\right)\left(y\right)\right)+f\left(\beta^{2}\left(y\right)\right)\right]\right]
\end{eqnarray*}

\end_inset

Using a simplified notation 
\begin_inset Formula $g\left(y\right)=f\left(\alpha\left(y\right)\right)+f\left(\beta\left(y\right)\right)$
\end_inset

 allows this to be iterated a third time:
\begin_inset Formula 
\begin{eqnarray*}
\left[\mathcal{L}^{3}f\right]\left(y\right)= & \frac{\Theta\left(y\right)}{\left(2K\right)^{3}} & \left[\Theta\left(\alpha\left(y\right)\right)\left[\Theta\left(\alpha^{2}\left(y\right)\right)g\left(\alpha^{2}\left(y\right)\right)+\Theta\left(\beta\alpha\left(y\right)\right)g\left(\beta\alpha\left(y\right)\right)\right]+\right.\\
 &  & \left.\Theta\left(\beta\left(y\right)\right)\left[\Theta\left(\alpha\beta\left(y\right)\right)g\left(\alpha\beta\left(y\right)\right)+\Theta\left(\beta^{2}\left(y\right)\right)g\left(\beta^{2}\left(y\right)\right)\right]\right]
\end{eqnarray*}

\end_inset

and a fourth time, this time omitting the argument, and the various nesting
 parenthesis.
\begin_inset Formula 
\begin{eqnarray*}
\left[\mathcal{L}^{4}f\right]\left(y\right)= & \frac{\Theta\left(y\right)}{\left(2K\right)^{4}} & \left[\Theta\alpha\Theta\alpha^{2}\left[\Theta\alpha^{3}g\alpha^{3}+\Theta\beta\alpha^{2}g\beta\alpha^{2}\right]+\right.\\
 &  & \Theta\alpha\Theta\beta\alpha\left[\Theta\alpha\beta\alpha g\alpha\beta\alpha+\Theta\beta^{2}\alpha g\beta^{2}\alpha\right]\\
 &  & \Theta\beta\Theta\alpha\beta\left[\Theta\alpha^{2}\beta g\alpha^{2}\beta+\Theta\beta\alpha\beta g\beta\alpha\beta\right]\\
 &  & \left.\Theta\beta\Theta\beta^{2}\left[\Theta\alpha\beta^{2}g\alpha\beta^{2}+\Theta\beta^{3}g\beta^{3}\right]\right]
\end{eqnarray*}

\end_inset

Notice that the primary structure is given by a product of step funtions.
 This is more conveniently visualized as a tree:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename tree.eps
	width 70col%

\end_inset


\end_layout

\begin_layout Standard
For any given iteration, the result is the sum of the vertexes at a given
 level, while the product of step functions is the product of the step functions
 in the tree, following the path to each node.
 Because any particular step function might be zero, it effectively acts
 to cut off the tree at that location.
 It is therefore interesting to understand general products of the 
\begin_inset Formula $\alpha$
\end_inset

 and 
\begin_inset Formula $\beta$
\end_inset

 functions.
 
\end_layout

\begin_layout Standard
It is convenient to define 
\begin_inset Formula 
\[
\gamma_{x}\left(y\right)=\frac{x}{2}+\frac{y}{2K}
\]

\end_inset

so that 
\begin_inset Formula $\alpha\left(y\right)=\gamma_{0}\left(y\right)$
\end_inset

 and 
\begin_inset Formula $\beta\left(y\right)=\gamma_{1}\left(y\right)$
\end_inset

, so that a general iterated sequence of intermixed 
\begin_inset Formula $\alpha$
\end_inset

's and 
\begin_inset Formula $\beta$
\end_inset

's can be written uniformly in terms of 
\begin_inset Formula $\gamma$
\end_inset

.
 Given a sequence of bits 
\begin_inset Formula $b_{0}b_{1}b_{2}\cdots b_{n}$
\end_inset

 with each 
\begin_inset Formula $b_{k}$
\end_inset

 being either zero or one, the iterated sequence of functions can be written
 as
\begin_inset Formula 
\begin{equation}
\left(\gamma_{b_{0}}\gamma_{b_{1}}\gamma_{b_{2}}\cdots\gamma_{b_{n}}\right)\left(y\right)=\frac{1}{2}\left[b_{0}+\frac{b_{1}}{2K}+\frac{b_{2}}{\left(2K\right)^{2}}+\cdots+\frac{b_{n}}{\left(2K\right)^{n}}\right]+\frac{y}{\left(2K\right)^{n+1}}\label{eq:not de Rham curve}
\end{equation}

\end_inset

So, for example: 
\begin_inset Formula 
\[
\alpha^{n}\left(y\right)=\frac{y}{\left(2K\right)^{n}}
\]

\end_inset

while 
\begin_inset Formula 
\[
\beta^{2}\left(y\right)=\frac{1}{2}+\frac{1}{2K}\left(\frac{1}{2}+\frac{y}{2K}\right)
\]

\end_inset

and, in general, that
\begin_inset Formula 
\[
\beta^{n}\left(y\right)=\frac{1}{2}\left[1+\frac{1}{2K}+\frac{1}{\left(2K\right)^{2}}+\cdots\frac{1}{\left(2K\right)^{n-1}}\right]+\frac{y}{\left(2K\right)^{n}}
\]

\end_inset

Iterated sequences of pairs of functions, of the form 
\begin_inset Formula $\gamma_{b_{0}}\gamma_{b_{1}}\gamma_{b_{2}}\cdots\gamma_{b_{n}}$
\end_inset

 are reminiscent of de Rham curves, which generalize Cesaro curves andthe
 Koch snowflake.
 The proper definition of a de Rham curve assumes the seequence is of infinite
 length, and applies a certain continuity condition, and is generally carried
 out on the complex plane, so that a continuous, nowhere-differentiable
 curve results.
 Here, the curve is distinctly not continuous: eqn 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:not de Rham curve"

\end_inset

 is a finite-length form of the shift series 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:shift series"

\end_inset

 which can be visualized as the expander function pdr 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:expander function"

\end_inset

, as shown in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Expander-Function"

\end_inset

.
 
\end_layout

\begin_layout Subsection
The Tree Function
\end_layout

\begin_layout Standard
Give a bit sequence 
\begin_inset Formula $\left\{ b_{k}\right\} $
\end_inset

 and value for 
\begin_inset Formula $y$
\end_inset

, define the tree function as 
\begin_inset Formula 
\[
T_{K}\left(\left\{ b_{k}\right\} ;y\right)=\Theta\left(y\right)\prod_{n=0}^{\infty}\Theta\left(\gamma_{b_{0}}\gamma_{b_{1}}\gamma_{b_{2}}\cdots\gamma_{b_{n}}\left(y\right)\right)
\]

\end_inset

For any given fixed sequence of bits and value of 
\begin_inset Formula $y$
\end_inset

, this function is either zero or one.
\end_layout

\begin_layout Subsection
Skew Haar Basis
\end_layout

\begin_layout Standard
The figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Undershift-Density-Distribution"

\end_inset

 shows that the eigenfunctions seem to be composed of piece-wise flat sections.
 This suggests that the Haar wavelets might make a superior basis.
 The standard Haar basis is an (anti-)symetric square wave with a discontinuity
 at 1/2.
 This is explored in the next secion.
 Here, a breif diversion to explore a skew basis.
 The skew basis can be built from the (un-normalized) mother wavelet 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\phi\left(x\right)=\begin{cases}
\frac{1}{K} & \mbox{for }0\le x<K\\
\frac{-1}{1-K} & \mbox{for }K\le x<1\\
0 & \mbox{otherwise}
\end{cases}
\]

\end_inset

A sequence of orthonormal wavelets might start as
\begin_inset Formula 
\[
\psi_{-1,0}\left(x\right)=1
\]

\end_inset


\begin_inset Formula 
\[
\psi_{0,0}\left(x\right)=\sqrt{K\left(1-K\right)}\phi\left(x\right)
\]

\end_inset


\begin_inset Formula 
\[
\psi_{1,0}\left(x\right)=\frac{1}{\sqrt{K}}\psi_{0,0}\left(\frac{x}{K}\right)
\]

\end_inset


\begin_inset Formula 
\[
\psi_{1,1}\left(x\right)=\frac{1}{\sqrt{1-K}}\psi_{0,0}\left(\frac{x-K}{1-K}\right)
\]

\end_inset

 and then, in general
\begin_inset Formula 
\[
\psi_{n+1,k}\left(x\right)=\begin{cases}
\frac{1}{\sqrt{K}}\psi_{n,k/2}\left(\frac{x}{K}\right) & \mbox{for }k\mbox{ even}\\
\frac{1}{\sqrt{1-K}}\psi_{n,\left(k-1\right)/2}\left(\frac{x-K}{1-K}\right) & \mbox{for }k\mbox{ odd}
\end{cases}
\]

\end_inset

where 
\begin_inset Formula $k$
\end_inset

 is an integer ranging from 0 to 
\begin_inset Formula $2^{n}-1$
\end_inset

.
 Although these at first seem promising, they prove to be difficult to use
 in pencil-n-paper calculations.
 That is, they are not particularly tractable when employed to caculate
 (by hand) the matrix elements of the transfer operator.
\end_layout

\begin_layout Standard
Another choice is to use the wavelet defined in equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Haar mother"

\end_inset

.
 A sequence of orthogonal wavelets might start as
\begin_inset Formula 
\[
\psi_{0,0}\left(x\right)=1
\]

\end_inset


\begin_inset Formula 
\[
\psi_{1,0}\left(x\right)=h_{K}\left(x\right)
\]

\end_inset


\begin_inset Formula 
\[
\psi_{2,0}\left(x\right)=\psi_{1,0}\left(2Kx\right)
\]

\end_inset


\begin_inset Formula 
\[
\psi_{2,1}\left(x\right)=\psi_{1,0}\left(\frac{2Kx-1}{2K-1}\right)
\]

\end_inset

 and then, in general
\begin_inset Formula 
\[
\psi_{n+1,k}\left(x\right)=\begin{cases}
\psi_{n,k/2}\left(2Kx\right) & \mbox{for }k\mbox{ even}\\
\psi_{n,\left(k-1\right)/2}\left(\frac{2Kx-1}{2K-1}\right) & \mbox{for }k\mbox{ odd}
\end{cases}
\]

\end_inset

where 
\begin_inset Formula $k$
\end_inset

 is an integer ranging from 0 to 
\begin_inset Formula $2^{n-1}-1$
\end_inset

.
 This also does not seem to offer any computational advantage.
\end_layout

\begin_layout Subsection
Haar Basis Matrix Elements
\end_layout

\begin_layout Standard
The symmetric Haar wavelets are built from the mother wavelet
\begin_inset Formula 
\[
h\left(x\right)=\begin{cases}
1 & \mbox{for }0\le x<1/2\\
-1 & \mbox{for }1/2\le x<1
\end{cases}
\]

\end_inset

 and has individual wavelets given by 
\begin_inset Formula 
\[
h_{nj}\left(x\right)=2^{n/2}h\left(2^{n}x-j\right)\;\mbox{ for }0\le j\le2^{n}-1
\]

\end_inset

The matrix elements of the transfer operator are
\begin_inset Formula 
\[
\left\langle mi\left|{\cal L}_{K}\right|nj\right\rangle =\int_{0}^{1}h_{mi}\left(x\right)\left[\mathcal{L}_{K}h_{nj}\right]\left(x\right)dx
\]

\end_inset

where the operator 
\begin_inset Formula $\mathcal{L}_{K}$
\end_inset

 is given by eqn 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:xfer oper"

\end_inset

.
 Computing these by hand promptly pushes into a big mess.
 One can obtain explicit expressions, just that they are tedious to obtain.
 Some preliminary observations include that 
\begin_inset Formula 
\[
\left\langle mi\left|{\cal L}_{K}\right|nj\right\rangle =0\;\mbox{ if }K\le i/2^{m}
\]

\end_inset

because the transfer operator vanishes above 
\begin_inset Formula $K$
\end_inset

.
 In the same vein, matrix elements vanish unless 
\begin_inset Formula 
\[
\left[\frac{i}{2^{m}},\frac{i+1}{2^{m}}\right]\cap\left[\frac{2Kj}{2^{n}},\frac{2K\left(j+1\right)}{2^{n}}\right]\ne\emptyset
\]

\end_inset

 or if 
\begin_inset Formula 
\[
\left[\frac{i}{2^{m}},\frac{i+1}{2^{m}}\right]\cap\left[\frac{2Kj}{2^{n}}-K,\frac{2K\left(j+1\right)}{2^{n}}-K\right]\ne\emptyset
\]

\end_inset

In all other cases, the Haar wavelets completely fail to overlap, and thus
 the matrix elements are zero.
 In addition, only three pairs of wavlets overlap in a non-zero fashion.
 That is, for a fixed 
\begin_inset Formula $m,n$
\end_inset

 and 
\begin_inset Formula $j$
\end_inset

, there are at most six different values of 
\begin_inset Formula $i$
\end_inset

 for which the matrix elements are non-vanishing: the first three of these
 are the values for which
\begin_inset Formula 
\[
\frac{2Kj}{2^{n}}\in\left[\frac{i}{2^{m}},\frac{i+1}{2^{m}}\right]\;\mbox{ or }\;\frac{2K\left(j+\frac{1}{2}\right)}{2^{n}}\in\left[\frac{i}{2^{m}},\frac{i+1}{2^{m}}\right]\;\mbox{ or }\;\frac{2K\left(j+1\right)}{2^{n}}\in\left[\frac{i}{2^{m}},\frac{i+1}{2^{m}}\right]
\]

\end_inset

and likewise for three more.
 The observation is that the integral vanishes unless the first wavelet
 interects an edge transition of the second wavelet.
\end_layout

\begin_layout Section
The Multiplication Operator
\end_layout

\begin_layout Standard
The difficulties presented in the previous section suggests that studying
 the multiplication operator might be simpler.
 Multiplication by 
\begin_inset Formula $K$
\end_inset

 is given by 
\begin_inset Formula 
\[
M_{K}\left(x\right)=Kx
\]

\end_inset

The corresponding transfer operator is 
\begin_inset Formula 
\[
\left[\mathcal{M}_{K}f\right]\left(y\right)=\frac{1}{K}f\left(\frac{y}{K}\right)
\]

\end_inset

which has matrix elements
\begin_inset Formula 
\begin{align*}
\left\langle mi\left|{\cal M}_{K}\right|nj\right\rangle = & \int_{-\infty}^{\infty}h_{mi}\left(x\right)\left[\mathcal{M}_{K}h_{nj}\right]\left(x\right)dx\\
= & \frac{2^{\left(m+n\right)/2}}{K}\int_{-\infty}^{\infty}h\left(2^{m}x-i\right)h\left(\frac{2^{n}x}{K}-j\right)dx
\end{align*}

\end_inset

Instead of confining oneself to the unit interval, here it is convenient
 to consider the entire real-number line, and thus that is the range of
 the integral.
 Likewise, 
\begin_inset Formula $i$
\end_inset

 and 
\begin_inset Formula $j$
\end_inset

 an be any integers, positive or negative.
 As before, matrix elements vanish unless 
\begin_inset Formula 
\[
\left[\frac{i}{2^{m}},\frac{i+1}{2^{m}}\right]\cap\left[\frac{Kj}{2^{n}},\frac{K\left(j+1\right)}{2^{n}}\right]\ne\emptyset
\]

\end_inset

and of these, only three cases matter: where one of the intervals contains
 an edge transition of the other interval.
\end_layout

\begin_layout Standard
Some insight can be gained by treating all quantities as trings of bits,
 so that, for example,
\begin_inset Formula 
\[
K=0.b_{1}b_{2}\cdots=\sum_{n=1}^{\infty}b_{n}2^{-n}
\]

\end_inset

where each 
\begin_inset Formula $b_{n}$
\end_inset

 is either zero or one.
 Thus, the first interval can be thought of as fixing the first 
\begin_inset Formula $m$
\end_inset

 bits of a bit-sequence.
 Unfortunately, there is no way of writing the product 
\begin_inset Formula $Kj$
\end_inset

 in closed form in terms of the bits 
\begin_inset Formula $b_{n}$
\end_inset

.
 Computing 
\begin_inset Formula $Kj$
\end_inset

 requires the use of a carry-bit, and the carry-bit can propagate arbitrarily
 far, in complex ways.
 That is, multiplication is a recursive algorithm when performed on bit-strings,
 and the dynamics of the carry bit is chaotic.
\end_layout

\begin_layout Subsection
Carry-bit dynamics
\end_layout

\begin_layout Standard
So, what do we mean by carry-bit dynamics? This is best illustrated first
 through addition
\end_layout

\begin_layout Section
Conclusion
\end_layout

\begin_layout Standard
Not much to say here just yet.
\end_layout

\end_body
\end_document
