#LyX 1.6.2 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass article
\begin_preamble
\usepackage{times}
\usepackage{acl2010}
\usepackage{latexsym}
\end_preamble
\use_default_options false
\begin_modules
theorems-ams
\end_modules
\language english
\inputencoding auto
\font_roman times
\font_sans helvet
\font_typewriter courier
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize 12
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry true
\use_amsmath 2
\use_esint 0
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\leftmargin 2.5cm
\topmargin 2.5cm
\rightmargin 2.5cm
\bottommargin 2.5cm
\columnsep 0.6cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 2
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Title
Identifying Speculation from Syntax
\end_layout

\begin_layout Author
Linas Vepstas, Mike Ross, Ben Goertzel
\end_layout

\begin_layout Abstract
The RelEx semantic relation extractor is a dependency parser that generates
 feature markup identifying hypothetical and speculative statements, questions
 and clauses.
 These are identified by means of fixed, linguist-generated rules applied
 to syntactically parsed sentences.
 By using purely syntactic information, obtained from single sentences,
 this approach provides a baseline for extracting the semantic content of
 speculative sentences.
 This short note reviews the operation of the RelEx system, focusing on
 how it identifies of hypothetical and speculative statements.
\end_layout

\begin_layout Section
Overview
\end_layout

\begin_layout Standard
The RelEx semantic relation extractor 
\begin_inset CommandInset citation
LatexCommand cite
key "RelEx"

\end_inset

 is an open-source dependency parser built on top of the CMU Link Grammar
 Parser 
\begin_inset CommandInset citation
LatexCommand cite
key "Sleator1991,Sleator1993"

\end_inset

.
 Starting with a parse generated by Link Grammar, it applies a set of rules
 or graph transformations to generate commonly recognized dependencies (such
 as subject, object, adjective and noun modifiers, 
\emph on
etc.
\emph default
) and feature tags (such as noun number, verb tense, 
\emph on
etc.
\emph default
).
 At this level, it is roughly comparable to other dependency parsers, such
 as the Stanford parser 
\begin_inset CommandInset citation
LatexCommand cite
key "Marneffe2006stanford,Marneffe2008"

\end_inset

 or Dekang Lin's MiniPar 
\begin_inset CommandInset citation
LatexCommand cite
key "Lin1998minipar"

\end_inset

; indeed, it has an explicit Stanford-parser compatibility mode.
\end_layout

\begin_layout Standard
Aside from these basic functions, it also generates somewhat more semantically
 oriented feature and relation markup, which is not found in other parsers.
 This includes basic entity extraction; identification of times, dates,
 distances and units; identification of the query type, and the queried
 variable in a question; of the comparison variable in comparative statements
 and questions; and the identification of speculative and hypothetical statement
s and questions.
 All of this is done purely by means of a set of rules applied to a graph
 representation of the parsed sentence.
 Insofar as this information is obtained by purely syntactic methods, scoped
 to single, grammatically well-structured sentences, it should provide a
 baseline for what is possible, or could be expected from more sophisticated,
 semantic approaches.
\end_layout

\begin_layout Standard
Hypothetical statements occur in several forms: in statements about the
 future, in assertive questions, and as many dependent clauses.
 So, for example, predictions about the future are always hypothetical.
 In the sentence "
\emph on
The dog will eat it
\emph default
", the verb "
\emph on
eat
\emph default
" gets marked as being hypothetical -- the dog hasn't eaten it yet, and
 there are no assurances that it will happen -- only that it could happen.
 In this case, an imperative or future tense verb is sufficient to indicate
 the speculative nature of the statement.
 RelEx designates hypothetical or speculative statements by means of a feature
 tag -- a single bit of markup, HYP, that is used to tag the verb making
 the hypothetical assertion.
 The generated output is thus:
\begin_inset listings
lstparams "basicstyle={\footnotesize\ttfamily},tabsize=4"
inline false
status open

\begin_layout Plain Layout

	_subj(eat, dog) 
\end_layout

\begin_layout Plain Layout

	_obj(eat, it)
\end_layout

\begin_layout Plain Layout

	tense(eat, imperative) 
\end_layout

\begin_layout Plain Layout

	HYP(eat, T)
\end_layout

\end_inset

Here, 
\family typewriter
\size small
_subj
\family default
\size default
 and 
\family typewriter
\size small
_obj
\family default
\size default
 are standard subject and object dependencies; as usual, the head word is
 always listed first.
 The 
\family typewriter
\size small
tense
\family default
\size default
 and 
\family typewriter
\size small
HYP
\family default
\size default
 are feature tags: they identify a property, naming the word as the first
 argument, and the property value as second.
 Here, 
\family typewriter
\size small
T
\family default
\size default
, for 'true', simply means that the property is present.
 This listing, and the ones to follow, does not show all of the RelEx output;
 feature markup for part of speech, noun number, gender, tense, and other
 tags will be omitted except as relevant to the examples.
\end_layout

\begin_layout Standard
Speculation may be explicit or implicit: so "
\emph on
It might rain
\emph default
" is explicitly speculative, while "
\emph on
It will rain
\emph default
" seems to be very certain of itself, but is speculation none-the-less.
 All assertions about the future are inherently hypothetical until the future
 has become the past.
 Thus, "
\emph on
It might rain
\emph default
" generates:
\begin_inset listings
lstparams "basicstyle={\footnotesize\ttfamily},tabsize=4"
inline false
status open

\begin_layout Plain Layout

	_subj(rain, it) 
\end_layout

\begin_layout Plain Layout

	_to-do(might, rain) 
\end_layout

\begin_layout Plain Layout

	tense(rain, infinitive) 
\end_layout

\begin_layout Plain Layout

	HYP(rain, T)
\end_layout

\end_inset

while "
\emph on
It will rain
\emph default
" generates:
\begin_inset listings
lstparams "basicstyle={\footnotesize\ttfamily},tabsize=4"
inline false
status open

\begin_layout Plain Layout

	_subj(rain, it) 
\end_layout

\begin_layout Plain Layout

	tense(rain, future) 
\end_layout

\begin_layout Plain Layout

	HYP(rain, T)
\end_layout

\end_inset

In both cases, the relation 
\family typewriter
\size small
_subj(rain, it)
\family default
\size default
 is used for the copula; the relation 
\family typewriter
\size small
_to-do(might, rain)
\family default
\size default
 notes the explicitly speculative nature of the copula.
\end_layout

\begin_layout Standard
Assertive questions are always hypothetical.
 For example, the question "
\emph on
Fred is dead?
\emph default
" might validly get an affirmative or a negative reply; Fred's being dead
 is hypothetical.
 Thus:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\footnotesize\ttfamily},tabsize=4"
inline false
status open

\begin_layout Plain Layout

	_predadj(Fred, dead)
\end_layout

\begin_layout Plain Layout

	TRUTH-QUERY(dead, T)
\end_layout

\begin_layout Plain Layout

	HYP(dead, T)
\end_layout

\end_inset

indicates that "deadness" is uncertain -- if it was certain, there'd be
 no point in asking a question.
 The tag 
\family typewriter
\size small
TRUTH-QUERY
\family default
\size default
 indicates not only that the sentence was a question, but that the truth
 of the assertion is being queried about.
 (The relation 
\family typewriter
\size small
_predadj
\family default
\size default
, the predicative adjective, is used here instead of 
\family typewriter
\size small
_subj(dead, Fred)
\family default
\size default
, to distinguish copular statements such as 
\begin_inset Quotes eld
\end_inset


\emph on
Mr.
 Smith is late
\emph default

\begin_inset Quotes erd
\end_inset

 from 
\begin_inset Quotes eld
\end_inset


\emph on
The late Mr.
 Smith
\emph default

\begin_inset Quotes erd
\end_inset

, the later generating 
\family typewriter
\size small
_adj(Smith, late)
\family default
\size default
).
\end_layout

\begin_layout Standard
Seemingly factual statements can be hypothetical as well.
 For example, in the sentence "
\emph on
John says you like swimming
\emph default
", the words "
\emph on
like
\emph default
" and "
\emph on
swimming
\emph default
" both get marked as hypothetical.
 "
\emph on
Like
\emph default
" is hypothetical, because John may be lying, or John may be in error about
 your likes and dislikes.
 "
\emph on
Swimming
\emph default
" is hypothetical, because you may indeed like something, just not swimming.
 Therefore, the claim that "
\emph on
you like swimming
\emph default
", appearing as a clause, is speculative.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\footnotesize\ttfamily},tabsize=4"
inline false
status open

\begin_layout Plain Layout

	_subj(swim, you) 
\end_layout

\begin_layout Plain Layout

	_to-do(like, swim) 
\end_layout

\begin_layout Plain Layout

	tense(swim, progressive) 
\end_layout

\begin_layout Plain Layout

	HYP(swim, T) 
\end_layout

\begin_layout Plain Layout

	HYP(like, T) 
\end_layout

\end_inset

This example demonstrates the relation 
\family typewriter
\size small
_to-do
\family default
\size default
, which indicates a clausal complement.
 In general, both clausal complements, and adjectival complements (
\family typewriter
\size small
_to-be
\family default
\size default
) indicate hypothetical statements; this will be seen explicitly in the
 rules.
\end_layout

\begin_layout Standard
The next section reviews the the operation of the RelEx rule engine, together
 with a discussion of some of the rules used to identify hypotheticals.
\end_layout

\begin_layout Section
The Rule Engine
\end_layout

\begin_layout Standard
RelEx is a rule engine that extracts semantic content from syntactic constructio
ns.
 Specifically, it represents syntactic relations as a graph, and then applies
 a sequence of rules to enlarge, prune, or transform the graph.
 This section reviews this mechanism; the next examines the rules used to
 identify speculative/hypothetical statements.
 
\end_layout

\begin_layout Standard
RelEx generates feature and dependency grammar markup by applying a sequence
 of pattern-matching rules to a labeled directed graph.
 An example of labeled directed graphs can be found in the hierarchical
 file systems used by most operating systems.
 In a file system, a directory listing shows either files or directories,
 both having names.
 One may move to a sub-directory, again containing named files or named
 directories.
 The graph is 
\emph on
not
\emph default
 acyclic; most hierarchical file systems allow '
\emph on
links
\emph default
', which point to directories or files in other locations.
 Thus, although one can choose to think of the structure as a hierarchical
 tree with links connecting sub-trees every which-way, the proper way of
 conceptualizing is to think of a general graph, with individual edges being
 labeled arrows.
\end_layout

\begin_layout Standard
In retrospect, it appears that a better design point would have been to
 use a hypergraph for the data structure, as many relations are more easily
 expressed, and operations more easily performed, on hypergraphs.
 The OpenCog project 
\begin_inset CommandInset citation
LatexCommand cite
key "Goertzel2008,Goertzel2009"

\end_inset

, for which RelEx provides the NLP front-end, uses, at its core, a full
 hypergraph representation for its data.
\end_layout

\begin_layout Standard
The graph is initially populated with Link Grammar parse data.
 Link Grammar parses result in non-directional, labeled links between pairs
 of words (which may or may not be immediate neighbors).
 For example: 
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\footnotesize\ttfamily},tabsize=4"
inline false
status open

\begin_layout Plain Layout

 	
\lang english
+-Ds-+--Ss--+--I-+-Ox+
\end_layout

\begin_layout Plain Layout

 	
\lang english
|
   
\lang english
 | 
     
\lang english
| 
   
\lang english
|
  
\lang english
 |
\end_layout

\begin_layout Plain Layout

	
\lang english
the dog.n will.v eat it
\end_layout

\end_inset

The two words '
\emph on
dog will
\emph default
' and the connector 
\family typewriter
\size small
Ss
\family default
\size default
 are imported into RelEx as shown in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Relation-Graph"

\end_inset

.
 The strings 
\emph on
dog
\emph default
 and 
\emph on
will 
\emph default
appear in the 
\begin_inset Quotes eld
\end_inset

subdirectories
\begin_inset Quotes erd
\end_inset

 named 
\family typewriter
\size small
str
\family default
\size default
.
 The previous and next words appear in 
\begin_inset Quotes eld
\end_inset

subdirectories
\begin_inset Quotes erd
\end_inset

 labeled 
\family typewriter
\size small
PREV
\family default
\size default
 and 
\family typewriter
\size small
NEXT
\family default
\size default
.
 Additional relations connecting these words to the Link Grammar connector
 
\family typewriter
\size small
Ss
\family default
\size default
 are shown.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Relation Graph
\begin_inset CommandInset label
LatexCommand label
name "fig:Relation-Graph"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset space \hspace{}
\length 3em
\end_inset


\begin_inset Graphics
	filename pre-edit.eps
	width 65col%

\end_inset


\end_layout

\begin_layout Plain Layout
This figure illustrates a match for the rule antecedent 
\family typewriter
\size small
F_R str = will
\family default
\size default
.
 Starting at the indicated match point, there is an arrow labeled 
\family typewriter
\size small
F_R
\family default
\size default
 pointing at a node with another arrow labeled 
\family typewriter
\size small
str
\family default
\size default
 which points at a leaf node holding the string 
\emph on
'will
\emph default
'.
 
\end_layout

\begin_layout Plain Layout

\lyxline

\end_layout

\end_inset


\end_layout

\begin_layout Standard
The graph is transformed by applying a sequence of rules, pattern-matching
 to an antecedent, and creating the consequent.
 That is, each rule has the form of '
\family typewriter
\size small
if
\family default
\size default
\emph on
(antecedent) 
\family typewriter
\size small
\emph default
then
\family default
\size default
\emph on
 consequent
\emph default
', where the antecedent and consequent are both (sub-)graphs themselves.
 The rule engine searches out matching subgraphs, and creates the consequent
 when a match is found.
 An example of applying a rule consequent is shown in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Edited-Graph"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Edited Graph
\begin_inset CommandInset label
LatexCommand label
name "fig:Edited-Graph"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset space \quad{}
\end_inset


\begin_inset Graphics
	filename post-edit.eps
	width 90col%

\end_inset


\end_layout

\begin_layout Plain Layout
This figure illustrates the result of applying the rule consequent 
\family typewriter
\size small
F_R ref HYP = T
\family default
\size default
 at the indicated match point.
 Two arrows, labeled 
\family typewriter
\size small
ref
\family default
\size default
 and 
\family typewriter
\size small
HYP
\family default
\size default
 have been created, the last arrow pointing at the leaf node 
\family typewriter
\size small
T
\family default
\size default
.
\end_layout

\begin_layout Plain Layout

\lyxline

\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Identifying Hypotheticals
\end_layout

\begin_layout Standard
As of the current version (1.3.0), RelEx has twelve rules for identifying
 hypothetical or speculative verbs in clauses; these rules treat six classes
 of sentences.
 This section reviews these rules.
 
\end_layout

\begin_layout Standard
One of the rules for tagging assertive questions (
\begin_inset Quotes eld
\end_inset


\emph on
Fred is dead?
\emph default

\begin_inset Quotes erd
\end_inset

) as hypothetical is the following:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\footnotesize\ttfamily},tabsize=2"
inline false
status open

\begin_layout Plain Layout

	if
\end_layout

\begin_layout Plain Layout

		<LAB> = 
\backslash
Qd
\backslash
.* 
\end_layout

\begin_layout Plain Layout

		<F_L str> = LEFT-WALL
\end_layout

\begin_layout Plain Layout

	then
\end_layout

\begin_layout Plain Layout

		<F_R head-word ref TRUTH-QUERY> = T
\end_layout

\begin_layout Plain Layout

		<F_R head-word ref HYP> = T
\end_layout

\end_inset

This rule looks for a Link Grammar 
\family typewriter
\size small
Qd
\family default
\size default
 link attached to the 
\family typewriter
\size small
LEFT-WALL
\family default
\size default
.
 In the Link Grammar, the 
\family typewriter
\size small
LEFT-WALL
\family default
\size default
 is the pseudo-word preceding the first word of the sentence; the 
\family typewriter
\size small
Qd
\family default
\size default
 link is one of several commonly used when identifying questions of a certain
 form.
 If this pattern is found, then the head-word of the sentence is tagged
 with both the truth-query and hypothetical flags.
 The head-word was previously identified by an earlier sequence of rules;
 typically, it is the primary verb in the sentence.
 For the example 
\begin_inset Quotes eld
\end_inset


\emph on
Fred is dead?
\emph default

\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset


\emph on
dead
\emph default

\begin_inset Quotes erd
\end_inset

 was previously identified as the head-word; the above rule merely confirms
 that the sentence was a declarative question, and then tags 
\begin_inset Quotes eld
\end_inset


\emph on
dead
\emph default

\begin_inset Quotes erd
\end_inset

 appropriately.
 A second rule, very similar to this, is used to tag a Link Grammar parse
 variant for copular declarative questions.
 It should be clear here that Link Grammar performed the 
\begin_inset Quotes eld
\end_inset

hard work
\begin_inset Quotes erd
\end_inset

 of determining that a 
\family typewriter
\size small
Qd
\family default
\size default
 link is syntactically appropriate for the parse; this rule reveals the
 semantic content associated with this link.
 It works because the 
\family typewriter
\size small
Qd
\family default
\size default
 link, when attached to the left wall, is always associated with truth query
 questions (which thus are hypothetical).
\end_layout

\begin_layout Standard
Questions that ask about quantity, or, more generally, inquire about a putative
 property of an object or situation are deemed hypothetical.
 The core semantic idea here is that if its putative, then its hypothetical.
 These are handled by three closely related rules.
 One is 
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\footnotesize\ttfamily},tabsize=2"
inline false
status open

\begin_layout Plain Layout

	if
\end_layout

\begin_layout Plain Layout

		<LAB> = 
\backslash
Dm.* 
\end_layout

\begin_layout Plain Layout

		<F_L str> = how_much|how_many
\end_layout

\begin_layout Plain Layout

	then
\end_layout

\begin_layout Plain Layout

		<F_L ref name> = _$qVar
\end_layout

\begin_layout Plain Layout

		<F_L ref QUERY-TYPE> = how_much
\end_layout

\begin_layout Plain Layout

		<F_R head-word ref HYP> = T
\end_layout

\end_inset

which is used to tag a question such as 
\begin_inset Quotes eld
\end_inset


\emph on
How much coffee did you drink?
\emph default

\begin_inset Quotes erd
\end_inset

.
 Here, the question is asking for a quantity, thus a query variable is identifie
d, as well as the type of the query.
 The question is accusative, and thus implicitly speculative: you may not
 have drank any coffee at all.
 The resulting output is 
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\footnotesize\ttfamily},tabsize=4"
inline false
status open

\begin_layout Plain Layout

	_subj(drink, you)
\end_layout

\begin_layout Plain Layout

	_obj(drink, coffee)
\end_layout

\begin_layout Plain Layout

	_quantity(coffee, _$qVar)
\end_layout

\begin_layout Plain Layout

	QUERY-TYPE(_$qVar, how_much)
\end_layout

\begin_layout Plain Layout

	HYP(drink, T) 
\end_layout

\end_inset

The above rule keyed off of a Link Grammar 
\family typewriter
\size small
Dm
\family default
\size default
 link, used to identify determiners for uncountable (mass) nouns, together
 with previous rules that were used to identify the 
\emph on
'how_much
\emph default
' polyword.
 Both the determiner, and one of the two polywords must be explicitly present
 in order for the head-word ('
\emph on
drink
\emph default
' in this example) to be labeled as hypothetical.
 
\end_layout

\begin_layout Standard
Not all questions in this class make use of a determiner; more generally,
 these employ adverbial constructions, such as 
\begin_inset Quotes eld
\end_inset


\emph on
How quickly did you read the book?
\emph default

\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset


\emph on
How tall is that building?
\emph default

\begin_inset Quotes erd
\end_inset

, or adjectives playing an adverbial role: 
\begin_inset Quotes eld
\end_inset


\emph on
How safe is that vehicle?
\emph default

\begin_inset Quotes erd
\end_inset

.
 Here, 
\begin_inset Quotes eld
\end_inset


\emph on
quickly
\emph default

\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset


\emph on
tall
\emph default

\begin_inset Quotes erd
\end_inset

 are the adverbial modifiers; 
\begin_inset Quotes eld
\end_inset


\emph on
safe
\emph default

\begin_inset Quotes erd
\end_inset

 is an adjective acting as an adverbial modifiers; these are connected with
 Link Grammar 
\family typewriter
\size small
EE
\family default
\size default
 or 
\family typewriter
\size small
EA
\family default
\size default
 links.
 The questions are inherently speculative or putative: the vehicle may not
 be safe at all.
\end_layout

\begin_layout Standard
Note also that the above rule also determined a query variable, and the
 type of the query.
 A distinct rule determined that the query variable is for a quantity of
 coffee.
 In general, all questions in this class will not only have the head-verb
 tagged as hypothetical, but will also result in a query variable being
 identified.
 These are all presented at the output in the form of dependencies; these
 dependencies are not strictly syntactic in nature, because they introduce
 nodes that are not present as words in the input sentence.
 This should be contrasted to the output of purely syntactic parsers, such
 as MiniPar or the Stanford parser, which generate no such output.
 Roughly speaking, RelEx attempts to get at some of the deeper structures
 behind the surface, such as those discussed in dependency frameworks like
 Mel'cuk's Meaning-Text Theory 
\begin_inset CommandInset citation
LatexCommand cite
key "Mel'cuk1987,Steele1990"

\end_inset

.
\end_layout

\begin_layout Standard
Another class of speculative questions ask for a perpetrator: 
\begin_inset Quotes eld
\end_inset


\emph on
Who ate my lunch?
\emph default

\begin_inset Quotes erd
\end_inset

 As before, the accusative nature of the question renders it speculative:
 was it really eaten? The rule for identifying these is simple:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\footnotesize\ttfamily},tabsize=2"
inline false
status open

\begin_layout Plain Layout

	if
\end_layout

\begin_layout Plain Layout

		<F_R ref QUERY-TYPE> = who
\end_layout

\begin_layout Plain Layout

	then
\end_layout

\begin_layout Plain Layout

		<F_R head-word ref HYP> = T 
\end_layout

\end_inset

the hard work having been the previous identification of the form of the
 question.
 The output for 
\begin_inset Quotes eld
\end_inset


\emph on
Who ate my lunch?
\emph default

\begin_inset Quotes erd
\end_inset

 is:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\footnotesize\ttfamily},tabsize=4"
inline false
status open

\begin_layout Plain Layout

	_obj(eat, lunch)
\end_layout

\begin_layout Plain Layout

	_poss(lunch, me)
\end_layout

\begin_layout Plain Layout

	_subj(eat, _$qVar)
\end_layout

\begin_layout Plain Layout

	QUERY-TYPE(_$qVar, who)
\end_layout

\begin_layout Plain Layout

	HYP(eat, T)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Another class of sentences are those with adjectival or clausal complements;
 these are tagged as hypothetical.
 For example: 
\begin_inset Quotes eld
\end_inset


\emph on
Mary says the rose smelled sweet
\emph default

\begin_inset Quotes erd
\end_inset

 results in
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\footnotesize\ttfamily},tabsize=4"
inline false
status open

\begin_layout Plain Layout

	_subj(say, Mary)
\end_layout

\begin_layout Plain Layout

	_that(say, smell)
\end_layout

\begin_layout Plain Layout

	_subj(smell, rose)
\end_layout

\begin_layout Plain Layout

	_to-be(smell, sweet) 
\end_layout

\begin_layout Plain Layout

	HYP(smell, T)
\end_layout

\begin_layout Plain Layout

	HYP(sweet, T)
\end_layout

\end_inset

Here, the 
\family typewriter
\size small
_to-be
\family default
\size default
 relation identifies the copular construction of the clause.
 RelEx treats all such clausal constructions as inherently speculative:
 this seems semantically reasonable, as there is always a claimant who may
 not be accurately reporting the facts.
 The rule for this tagging is trivial:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\footnotesize\ttfamily},tabsize=2"
inline false
status open

\begin_layout Plain Layout

	if
\end_layout

\begin_layout Plain Layout

		<_to-be> != % 
\end_layout

\begin_layout Plain Layout

	then
\end_layout

\begin_layout Plain Layout

		<_to-be HYP> = T 
\end_layout

\end_inset

which searches for a subgraph where the labeled directed edge 
\family typewriter
\size small
_to-be
\family default
\size default
 exists (is not empty); if this edge exists, then what it is pointing at
 is tagged as hypothetical.
 The heavy lifting was done by prior rules that identified the clause itself.
 Observe also that previous rules identified an implicit 
\family typewriter
\size small
_that
\family default
\size default
 relation in the sentence: 
\begin_inset Quotes eld
\end_inset


\emph on
Mary says <that> ...
\emph default

\begin_inset Quotes erd
\end_inset

.
 In English, one may omit the word 
\begin_inset Quotes eld
\end_inset


\emph on
that
\emph default

\begin_inset Quotes erd
\end_inset

 in such constructions; however, it remains implicitly present as a dependency
 relation between the main sentence and the dependent clause.
 In a similar vein, a distinct rule marks the clause following an explicit
 subordinating 
\begin_inset Quotes eld
\end_inset


\emph on
that
\emph default

\begin_inset Quotes erd
\end_inset

 as hypothetical: 
\emph on

\begin_inset Quotes eld
\end_inset

I assumed that we would go
\emph default

\begin_inset Quotes erd
\end_inset

 results in the markup 
\family typewriter
\size small
HYP(go)
\family default
\size default
.
\end_layout

\begin_layout Standard
Semantic and syntactic dependencies do not always correspond; they may be
 inverted.
 A fourth rule is used to tag clauses subordinate to 
\begin_inset Quotes eld
\end_inset


\emph on
if
\emph default

\begin_inset Quotes erd
\end_inset

: 
\begin_inset Quotes eld
\end_inset


\emph on
I will do it if you say so
\emph default

\begin_inset Quotes erd
\end_inset

.
 The head word of the main clause is 
\begin_inset Quotes eld
\end_inset


\emph on
do
\emph default

\begin_inset Quotes erd
\end_inset

, it is tagged as hypothetical.
 The syntactically dependent clause is 
\begin_inset Quotes eld
\end_inset


\emph on
if you say so
\emph default

\begin_inset Quotes erd
\end_inset

.
 Unlike the previous examples, it is not the dependent clause that is hypothetic
al; but instead, the primary clause is.
 
\begin_inset Quotes eld
\end_inset


\emph on
I will do it
\emph default

\begin_inset Quotes erd
\end_inset

 is a promise, but it depends on your saying so; the semantic dependency
 runs in the opposite direction from the grammatical dependency.
 The 
\begin_inset Quotes eld
\end_inset


\emph on
doing
\emph default

\begin_inset Quotes erd
\end_inset

 remains hypothetical precisely because it is a semantic dependent.
 But, as before, this inverted usage is readily visible in the syntactic
 structure of the sentence.
 The RelEx rule is nearly trivial:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\footnotesize\ttfamily},tabsize=2"
inline false
status open

\begin_layout Plain Layout

	if
\end_layout

\begin_layout Plain Layout

		<if> != %
\end_layout

\begin_layout Plain Layout

	then
\end_layout

\begin_layout Plain Layout

		<if HYP> = T 
\end_layout

\end_inset

the semantically dependent 
\begin_inset Quotes eld
\end_inset


\emph on
I will do it
\emph default

\begin_inset Quotes erd
\end_inset

 having been identified as the target of 
\begin_inset Quotes eld
\end_inset


\emph on
if
\emph default

\begin_inset Quotes erd
\end_inset

 by previous rules.
 
\end_layout

\begin_layout Standard
That last class of expressions that are marked as hypothetical are negative
 assertions; for example: 
\begin_inset Quotes eld
\end_inset


\emph on
John wasn't there
\emph default

\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset


\emph on
that isn't the case
\emph default

\begin_inset Quotes erd
\end_inset

.
 The linguistic reasoning to support this is not well-grounded, but is based
 on the notion that such negative assertions are generated as replies to
 speculative questions, and thus are inherently argumentative, inheriting
 the speculative nature of the question.
 A proper study, based on corpus linguistics principles, might clarify whether
 such tagging is indeed semantically appropriate.
 More importantly, this case illustrates the limits of a purely syntactic
 approach to identification of speculative/hypothetical statements.
 The speculative nature of a negative assertion is no longer readily apparent
 from its grammatical construction; the context of the surrounding paragraphs
 or dialog provides a semantic backdrop that is necessary to properly interpret
 the remark.
 Syntactic parsing works precisely because the most frequent, 
\begin_inset Quotes eld
\end_inset

common-sense
\begin_inset Quotes erd
\end_inset

 meaning is encoded in a fixed way in sentence structure.
 Syntactic parsing breaks down whenever the speaker is 
\begin_inset Quotes eld
\end_inset

playing games
\begin_inset Quotes erd
\end_inset

 with the words, encoding a meaning that runs counter to the usual 
\begin_inset Quotes eld
\end_inset

common-sense
\begin_inset Quotes erd
\end_inset

 structure of a sentence.
 In the vast majority of speech and writing, the direct, common-sense interpreta
tion of sentence structure is used by the speaker, and is assumed by the
 listeners.
 For negative assertions, the syntax no longer suggests a relatively unambiguous
 meaning; using simple rules operating on single sentences is no longer
 a productive way of extracting the semantic content.
\end_layout

\begin_layout Section
Conclusions
\end_layout

\begin_layout Standard
A fair amount of speculative content can be identified purely from the syntactic
 structure of isolated English sentences, without reference to surrounding
 context.
 Such extraction is straightforward when one has access to a dependency
 parse of a sentence, and a rule engine that can identify the appropriate
 patterns.
 As always, though, syntactic analysis succeeds only when sentences are
 well-formed, are constructed in a reasonably unambiguous fashion, with
 no sly, ironic or sarcastic intent on the part of the speaker.
 Outside of this domain, straightforward syntactic methods are doomed.
 Perhaps some simpler approaches can provide a more robust understanding
 of slang, euphemisms or even of 
\begin_inset Quotes eld
\end_inset

ungrammatical
\begin_inset Quotes erd
\end_inset

 or sloppy dialects.
 More difficult are situations that require the semantic backdrop of the
 conversation, knowledge of the speaker's role and intent, grasp of the
 social posturing and social dynamics of the text.
 Such dynamics can radically alter meaning, and strongly decouple the semantics
 from the syntax -- the superficial 
\begin_inset Quotes eld
\end_inset

common-sense
\begin_inset Quotes erd
\end_inset

 interpretation obtained from the syntactic structure of a sentence may
 no longer apply (but curiously, would still be required to fully appreciate
 a witty twist of phrase).
\end_layout

\begin_layout Standard
The rules described in this note were linguist-developed, painstakingly
 crafted by hand to capture semantic content.
 The authors are involved in active research to automatically learn such
 rules, ideally using a form of unsupervised learning, such as that described
 in Dekang Lin's DIRT 
\begin_inset CommandInset citation
LatexCommand cite
key "Lin2001"

\end_inset

 or Poon & Domingos USP 
\begin_inset CommandInset citation
LatexCommand cite
key "Domingos2006"

\end_inset

.
\end_layout

\begin_layout Standard
The source code for RelEx is publicly available, under the Apache License;
 it is written in Java.
 It depends on Link Grammar, which is publicly available under the BSD license,
 the Link Grammar parser is written in C.
 Both projects are actively maintained, and are kept in a stable or 
\begin_inset Quotes eld
\end_inset

production quality
\begin_inset Quotes erd
\end_inset

 state.
 
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "/home/linas/linas/fractal/paper/lang"
options "acl"

\end_inset


\end_layout

\end_body
\end_document
