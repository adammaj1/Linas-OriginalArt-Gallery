#LyX 1.6.2 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass article
\use_default_options false
\language english
\inputencoding auto
\font_roman times
\font_sans helvet
\font_typewriter courier
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 2
\use_esint 0
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\end_header

\begin_body

\begin_layout Title
Identifying Speculation from Syntax
\end_layout

\begin_layout Author
Linas Vepstas, Mike Ross, Ben Goertzel
\end_layout

\begin_layout Abstract
The RelEx semantic relation extractor is a dependency parser that generates
 feature markup identifying hypothetical and speculative statements, questions
 and clauses.
 These are identified by means of fixed, linguist-generated rules applied
 to syntactically parsed sentences.
 By using purely syntactic information, this approach thus provides a baseline
 for extracting the semantic content of speculative sentences.
 This short note reviews the operation of the RelEx system, focusing on
 the identification of hypotheticals.
\end_layout

\begin_layout Section
Overview
\end_layout

\begin_layout Standard
The RelEx semantic relation extractor [xxx need ref] is an open-source dependenc
y parser built on top ot the CMU Link Grammar Parser [xxx need ref].
 Starting with a parse generated by Link Grammar, it applies a set of rules
 or graph transformations to generate commonly recognized dependencies (such
 as subject, object, adjective and noun modifiers, 
\emph on
etc.
\emph default
) and feature tags (such as noun number, verb tense, 
\emph on
etc.
\emph default
).
 At this level, it is roughly comparable to other dependency parsers, such
 as the Stanford parser [xx need ref] or Dekang Lin's MiniPar [xxx need
 ref]; indeed, it has an explicit Stanford-parser compatibility mode.
\end_layout

\begin_layout Standard
Aside from these basic functions, it also generates somewhat more semantically
 oriented feature and relation markup, which is not found in other parsers.
 This includes basic entity extraction; identification of times, dates,
 distances and units; identification of the queried variable in a question;
 of the comparison variable in comparative statements and questions; and
 the identification of speculative and hypothetical statements and questions.
 All of this is done purely by means of a set of rules applied to a graphical
 representation of the parsed sentence.
 Insofar as this information is obtained by purely syntactic methods, scoped
 to single, grammatically well-structured sentences, it should provide a
 baseline for what is possible, or could be expected from more sophisticated,
 semantic approaches.
\end_layout

\begin_layout Standard
Hypothetical statements occur in several forms: in statements about the
 future, in assertive questions, and as certain dependent clauses.
 So, for example, predictions about the future are always hypothetical.
 In the sentence "
\emph on
The dog will eat it
\emph default
", the verb "
\emph on
eat
\emph default
" gets marked as being hypothetical -- the dog hasn't eaten it yet, and
 there are no assurances that it will happen -- only that it could happen.
 RelEx designates hypothetical or speculative statements by means of a feature
 tag -- a single bit of markup, HYP, that is used to tag the verb making
 the hypothetical assertion.
 The generated output is thus:
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

	_subj(eat, dog) 
\end_layout

\begin_layout Plain Layout

	_obj(eat, it)
\end_layout

\begin_layout Plain Layout

	tense(eat, imperative) 
\end_layout

\begin_layout Plain Layout

	HYP(eat, T)
\end_layout

\end_inset


\family default
This listing, and the ones to follow, does not show all of the RelEx output;
 feature markup for part of speech, noun number, gender, and other tags
 will be omitted except as relevant to the examples.
 
\end_layout

\begin_layout Standard
Speculation may be explicit or implicit: so "It might rain." is explicitly
 speculative, while "It will rain." seems to be very certain of itself, but
 is speculation none-the-less.
 All assertions about the future are inherently hypothetical until the future
 has become the past.
 Thus, "It might rain." generates:
\end_layout

\begin_layout Standard

\family typewriter
_subj(rain, it) 
\end_layout

\begin_layout Standard

\family typewriter
_to-do(might, rain) tense(rain, infinitive) HYP(rain, T)
\end_layout

\begin_layout Standard
while "It will rain." generates:
\end_layout

\begin_layout Standard
_subj(rain, it) tense(rain, future) HYP(rain, T)
\end_layout

\begin_layout Standard
Assertive questions are hypothetical.
 For example, the question "Fred is dead?" is an assertive question, and
 Fred's being dead is hypothetical -- it may or may not be true.
 Thus, the following is generated:
\end_layout

\begin_layout Standard
_predadj(Fred, dead) TRUTH-QUERY-FLAG(dead, T) HYP(dead, T)
\end_layout

\begin_layout Standard
to indicate that "deadness" is uncertain -- if it was certain, there'd be
 no point in asking a question.
\end_layout

\begin_layout Standard
Seemingly factual statements can be hypothetical as well.
 For example, in the sentence "John says you like swimming", the words "like"
 and "swimming" both get marked as hypothetical.
 "Like" is hypothetical, because John may be lying, or John may be in error
 about your likes and dislikes.
 "Swimming" is hypothetical, because you may indeed like something, just
 not swimming.
 Therefore, the claim that "you like swimming", appearing as a clause, is
 speculative.
\end_layout

\begin_layout Standard
_subj(swim, you) _to-do(like, swim) tense(swim, progressive) HYP(swim, T)
 HYP(like, T) 
\end_layout

\begin_layout Section
ToDo
\end_layout

\begin_layout Standard
-- relex is maintained, its java, 
\end_layout

\begin_layout Standard
-- autolearning is research topic
\end_layout

\end_body
\end_document
