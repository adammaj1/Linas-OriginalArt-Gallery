#LyX 1.6.1 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass IEEEtran
\use_default_options false
\language english
\inputencoding default
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\float_placement tbh
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 0
\use_esint 0
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 2
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Title
Table-driven Word Sense Disambiguation
\end_layout

\begin_layout Author
Linas Vepstas
\begin_inset Foot
status open

\begin_layout Plain Layout
Linas is with Novamente
\end_layout

\end_inset


\end_layout

\begin_layout Abstract
Word-sense disambiguation (WSD) algorithms are fairly CPU-intensive, requiring
 many seconds or even minutes to run on modern hardware, making WSD impractical
 in a web-services setting.
 This paper presents results for performing word-sense assignments based
 on a table lookup of syntactic parser output.
 Table lookup is extremely fast, and parsing can be reasonably fast, thus
 providing practical, fast WSD.
 The table was previously constructed by correlating parse structures with
 word-sense selection using traditonal WSD algorithms.
 
\end_layout

\begin_layout Abstract
Specifically, the CMU Link Grammer parser is used.
 The output of this parser tags individual words with the syntactic form
 of how the word was used in a sentence.
 This tag can be thought of as a very fine-grained part-of-speech tag, making
 syntactic distinctions much finer than the usual noun/verb/adj/adv distinctions.
 These fine-grained tags are shown to correlate reasonably well with word
 senses.
\end_layout

\begin_layout Keywords
NLP, parsing, WSD, Link Grammar
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
That there is a correlation between English-language syntax, and word senses,
 is obvious, and underlies the presentation of dictionaries: word senses
 are grouped according to part-of-speech (POS): noun, verb, adjective, adverb.
 Parts of speech are crude indicators of the allowed syntactic use of a
 word: so, in general, one cannot use a noun in place of a verb.
 There are exceptions: English grammar does allow the use of nouns as noun
 modifiers, the verbing of nouns by means of gerunds, and one can, to a
 limited extent, verbize one's nouns directly.
 But each of these grammatical operations alters the sense of a word as
 well as changing is POS category.
 Some dictionaries attempt a more fine-grained distinction of word senses:
 thus, for example, The American HeritageÂ® Dictionary of the English Language
\begin_inset CommandInset citation
LatexCommand cite
key "AmHeritage2000"

\end_inset

, frequently uses section headings of 
\emph on
v.tr.

\emph default
 and 
\emph on
v.intr.

\emph default
 to denote word senses that are used only with the transitive or intranstive
 form of a verb.
 Thus, upon witnessing a verb used in a certain sentence in a certain way,
 one can immediately narrow down the possible senses for that verb.
\end_layout

\begin_layout Standard
It is is natural to presume that the correlation between word senses and
 word usage might continue to a finer, more detailed level, if only one
 had a finer, more detailed dictionary, and could make finer, more detailed
 syntactic observations.
 This is the primary thesis of this paper.
 To illustrate this, consider, for example, the verb 
\begin_inset Quotes eld
\end_inset


\emph on
to suffer
\emph default

\begin_inset Quotes erd
\end_inset

.
 The American Heritage Dictionary lists seven senses for this; other dictionarie
s list 5 to 11 senses.
 The Princeton WordNet dictionary[xxxref] lists 11 meanings.
 Now consider the sentence:
\end_layout

\begin_layout Quotation

\emph on
\begin_inset Quotes eld
\end_inset

She suffered a fracture in the accident.
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
A syntactic analysis shows that 
\begin_inset Quotes eld
\end_inset


\emph on
suffer
\emph default

\begin_inset Quotes erd
\end_inset

 is in the past tense, takes a singular subject, a singular direct object,
 and a modifying prepositional phrase.
 The corresponding WordNet sense key is 
\emph on
suffer%2:29:01::, (undergo (as of injuries and illnesses))
\emph default
.
 This example is syntactically quite different than those of other example
 sentences taken from WordNet:
\end_layout

\begin_layout Quotation

\emph on
\begin_inset Quotes eld
\end_inset

This author really suffers in translation.
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
where the verb is in the present tense, has a singular subject, a prepositional
 modifier, but no object: it corresponds to sense 
\emph on
suffer%2:30:02::, (be set at a disadvantage)
\emph default
.
 Similarly one has
\end_layout

\begin_layout Quotation

\emph on
\begin_inset Quotes erd
\end_inset

Many saints suffered martyrdom.
\emph default

\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
which has a plural subject, is in past tense, and the object is an uncountable
 (mass) noun: this corresponds to the sense 
\emph on
suffer%2:39:01::, (undergo or be subjected to)
\emph default
.
 Each of these example sentences, taken from WordNet itself, shows a strong
 correlation between the syntactic structure of the sentence, and the designated
 word sense.
 
\end_layout

\begin_layout Standard
Most of this correlation can be erased by altering the example sentences,
 and creting new, grammatically correct sentences by altering the tense,
 the count of the subject or object, the presence or absence of the object,
 or a modifying perpositional phrase.
 But do native English speakers generate all possible sentence constructions
 with equal probability? Clearly not: idioms, a strict coupling of a few
 words, are in wide-spread circulation.
 The Mel'cuk Meaning-Text Theory[xxx] posits that the intended meaning of
 an expression strongly influences the structure of the sentence that expresses
 that meaning; conversely, that certain sentence patterns are used only
 with limited, well-defined subsets of nouns, verbs.
 Thus, the study of the correlation between sense and syntax becomes an
 exercise in corpus linguistics: the tabulation of the frequency of word
 usage as used by actual writers, as compared to the intended sense of the
 author.
 To the extent that such a correlation exists, it can be inverted to quickly
 guess at the intended meaning, given only the syntactic usage.
\end_layout

\begin_layout Standard
Discovering this correlation relies heavily on large-scale automated computer
 learning techniques.
 Although one might be able to analyze, by hand, a few verbs or nouns, in
 the manner illustrated above, this is hardly practical to get a true sense
 of the prevelance of this correlation.
 In doing a small-scale analysis, one might discover only a few words that
 appear to be highly correlated, without being able to say much about the
 language, in general.
 Thus, the approach used here is parse a large quantity of text, to obtain
 syntactic structure, and to tag the same text with word-senses, and then
 generate statistics correlating the two tag sets.
 The 
\begin_inset Quotes eld
\end_inset

weak link
\begin_inset Quotes erd
\end_inset

 to this approach is sense tagging.
 The quantity of text tagged by experts with word senses is not large enough
 to collect a reasonable amount of statistics; thus sense-tagging must be
 performed automatically.
 Although automated sense tagging or 
\begin_inset Quotes eld
\end_inset

word sense disambiguation
\begin_inset Quotes erd
\end_inset

 (WSD) algorithms have been improving, the best simple, straight-forward
 systems remain marginal in precision and recall.
 This raises an interesting question: is it possible that, by correlating
 sense tags with syntactic usage, that the incorrect tags will statistically
 
\begin_inset Quotes eld
\end_inset

cancel out
\begin_inset Quotes erd
\end_inset

, while correct tags will reinforce? That is, is it possible that a lookup-table
 based WSD algorithm might have better accuracy than the underlying WSD
 system from which it was constructed?
\end_layout

\begin_layout Standard
For parsing, the Link Grammar parser [xxx ref] is used.
 The output of the Link Grammar parser are 
\begin_inset Quotes eld
\end_inset

linkages
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

disjuncts
\begin_inset Quotes erd
\end_inset

 that explicitly express how a word is connected to its vicinity.
 It's output is essentially a series of statements such as 
\begin_inset Quotes eld
\end_inset

this is a verb with a singular subject on the left, a singular direct object
 on the right, and a modifying prepositional phrase
\begin_inset Quotes erd
\end_inset

, expressed in a compact notation (
\begin_inset Quotes eld
\end_inset


\emph on
Ss- Os+ MVp+
\emph default

\begin_inset Quotes erd
\end_inset

 for this example).
 Word-sense tagging was performed using an implementation of the Mihalcea
 all-words word-sense disambiguation algorithm [xx need ref].
 This algorithm is reasonably accurate and straightforward to implement.
 
\end_layout

\begin_layout Standard
It provides
\end_layout

\begin_layout Standard
The degree to which it is true is explored
\end_layout

\begin_layout Standard
and it is explored thanks to 
\end_layout

\begin_layout Standard
describe link-grammar disjuncts
\end_layout

\begin_layout Section
Previous Work
\end_layout

\begin_layout Standard
-- argue that this is kind-of-parallel, human-brain-like in processing ...
 
\end_layout

\begin_layout Standard
-- Note that creating the table is kind of like automating dictionary constructi
on.
\end_layout

\begin_layout Standard
-- more about meaning-text theory
\end_layout

\begin_layout Standard
-- more about markov logic for semantic blah.
\end_layout

\begin_layout Section
Methodology
\end_layout

\begin_layout Theorem
\begin_inset OptArg
status collapsed

\begin_layout Plain Layout
Theorem name
\end_layout

\end_inset

For a named theorem or theorem-like environment you need to insert the name
 through 
\family sans
Insert\SpecialChar \menuseparator
Short Title
\family default
, as done here.
\end_layout

\begin_layout Lemma
If you don't want a theorem or lemma name don't add one.
\end_layout

\begin_layout Proof
And here's the proof!
\end_layout

\begin_layout Section
Results
\end_layout

\begin_layout Standard
what about results by POS category?? e.g.
 does this work better for verbs, or for nouns? wahat about adj/adv?
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement htbp
wide false
sideways false
status open

\begin_layout Plain Layout
\align center

\family sans
A single column figure goes here
\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Captions go 
\emph on
under
\emph default
 the figure
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float table
placement htbp
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Table captions go 
\emph on
above
\emph default
 the table
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features>
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
delete
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
this
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
example
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
table
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Conclusions
\end_layout

\begin_layout Standard
cconclusions
\end_layout

\begin_layout Standard
bibliograph
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "/home/linas/src/fractal/paper/lang"
options "plain"

\end_inset


\end_layout

\begin_layout Standard
blah blah
\end_layout

\begin_layout Standard
\begin_inset Note Comment
status collapsed

\begin_layout Plain Layout
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Change this paragraphs style to 'Standard' to enable
\end_layout

\begin_layout Plain Layout
BibTeX bibliography generation.
\end_layout

\begin_layout Plain Layout
Remember though that your final submission is supposed to have
\end_layout

\begin_layout Plain Layout
all the bibliography entries embedded in the latex file.
 This means
\end_layout

\begin_layout Plain Layout
you eventually have to copy the .bbl file into the latex file and
\end_layout

\begin_layout Plain Layout
remove the bibtex lines.
\end_layout

\end_inset


\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "your_biblio_file"
options "IEEEbib"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Biography
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Your Name
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 All about you and the what your interests are.
 Don't forget to put your name in between a pair of {}'s that are set as
 raw TeX.
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Biography
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Coauthor
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

} 
\end_layout

\end_inset

Same again for the co-author.
\end_layout

\end_body
\end_document
