#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{url} 
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman "times" "default"
\font_sans "helvet" "default"
\font_typewriter "courier" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks true
\pdf_pdfborder true
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry false
\use_package amsmath 2
\use_package amssymb 2
\use_package cancel 1
\use_package esint 0
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 0
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Crypto Sci-Club Notes
\end_layout

\begin_layout Abstract
Notes preparing for sci-club crypto-blockchain pesentation.
\end_layout

\begin_layout Section*
List of possible topics
\end_layout

\begin_layout Standard
Start with history, review of core tech concepts.
 Finish with applications.
\end_layout

\begin_layout Itemize
Origin of blockchain in WWII Enigma coding machines.
 Maybe explain how these work?
\end_layout

\begin_layout Itemize
Public key crypto mathematics theory
\end_layout

\begin_layout Itemize
Public key crypto examples: PGP/GPG, x.509 certs, SSL/https, onion routing
\end_layout

\begin_layout Itemize
Git as a blockchain, and why it was needed - to prevent source code fraud
 (real, not imagined)
\end_layout

\begin_layout Itemize
File sharing, sleepycat/napster, torrent architectures (bittorrent tracker
 is example of DHT)
\end_layout

\begin_layout Itemize
bitcoin predecessors: erights.org, how to do banking in a secure container
 by delegation.
 HashCash for spam prevention.
\end_layout

\begin_layout Itemize
Other weirdo crypto ideas: death-lottery.
\end_layout

\begin_layout Itemize
why bitcoin solved a problem that microtransactions could not.
\end_layout

\begin_layout Itemize
Byzantine generals
\end_layout

\begin_layout Itemize
bitcoin as database
\end_layout

\begin_layout Itemize
bitcoin as a ledger: addition subtraction – thus, a transaction database.
\end_layout

\begin_layout Itemize
but also: multiplication, division, if-statements, loops, – Turing-complete;
 generic programming that is verifiable, unfalsifiable, non-repudiable –
 etherium.
 These properties make it strong enough for legal contracts!
\end_layout

\begin_layout Itemize
Problems with global blockchains:
\end_layout

\begin_deeper
\begin_layout Itemize
Global blockchains are heavy.
 Typically require all participants to store the entire chain -gigabytes
 worth and more.
 
\end_layout

\begin_layout Itemize
The problem with proof-of-work - wasteful of CPU power.
 
\end_layout

\begin_layout Itemize
Moral of the story: global blockchains represent a *single* centralized
 server.
 They represent a centralized resource in a distributed fashion.
 
\end_layout

\begin_layout Itemize
Originally, ostensibly, blockchain was to solve the banking problems of
 double-spending of coin.
 But the solution is sloppy: it places *all* coins from the whole wide world,
 onto one single blockchain.
 This is overkill.
 All that was really needed was a single global representation for a *single*
 coin (to see if that particular coin was spent).
 If one cares only about a single coin, there's no real point in looking
 at all other coins in the world - they are of no paricular interest.
 And yet, bitcoin, etc.
 *forces* all cons to live in one single centralized repo.
\end_layout

\begin_layout Itemize
Scaling: 7 billion people, 256/512 bytes of ID per person: 3.5 terabytes
 of info to keep in sync globally.
 That's ID's only.
 This does not count/record any pair-wise or N-wise interactions between
 peers.
\end_layout

\begin_layout Itemize
namecoin expires (destroys) data after N blocks, charges fee to keep data
 alive.
 
\end_layout

\end_deeper
\begin_layout Itemize
Distributed hash tables - Why.
 Examples IPFS and predecessors (Freenet).
 Also bittorent tracker.
 Pros:
\end_layout

\begin_deeper
\begin_layout Itemize
decentralization; load-balancing
\end_layout

\begin_layout Itemize
fault tolerance; data integrity
\end_layout

\begin_layout Itemize
scalability; load-balancing
\end_layout

\end_deeper
\begin_layout Itemize
Critique of DHT
\end_layout

\begin_deeper
\begin_layout Itemize
The problem of spam in IPFS, etc.
 and potential DDOS.
 FreeNet forgets unaccessed data.
\end_layout

\begin_layout Itemize
Sybil attacks: one entity (person) creates many puppet identities (sockpuppets).
 Identity validation.
 Defense against sybil remains open research question.
\end_layout

\begin_layout Itemize
How does sybil attack against DHT actually work? Tech details?
\end_layout

\begin_layout Itemize
Again - this is a symptom of representating a singleton: i.e.
 a single global copy, instead of a locally-balancing, locally-verifiable
 distributed system.
\end_layout

\end_deeper
\begin_layout Itemize
Anti-singleton designs.
 The point is: chat is inherently P2P.
 Social media is inherently P2P.
 Financial transactions are inheretly P2P.
 Legal contracts are inherently P2P.
 So why are we using centralized designs to solve them? Short answer: its
 hard to avoid entralization...
\end_layout

\begin_layout Itemize
Distributed P2P social media: https://www.scuttlebutt.nz/stories/design-challenge-
avoid-centralization-and-singletons
\end_layout

\begin_layout Itemize
Whisper protocols???
\end_layout

\begin_layout Itemize
Blockhain apps: uncorruptable, uneraseable database.
 When is this desirable? For what reason? Why isn't git enough? (scope of
 git; generic databse issues.
 More to life than SQL)
\end_layout

\begin_layout Itemize
Apps: unique identity; authetnication; voting, UBI
\end_layout

\begin_layout Itemize
Hypothetical Apps: shard storage of mapping/geographic info; a global geographic
 database.
 With control over who sees what information.
\end_layout

\begin_layout Itemize
Hypothetical apps: Openbook as opensouce face-book with control over information.
 (Compare/contrast to scuttlebutt !?)
\end_layout

\begin_layout Itemize
Still got political issues: EULA, DRM, anti-hacking, patents
\end_layout

\end_body
\end_document
