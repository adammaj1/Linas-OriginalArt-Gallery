#LyX 1.5.1 created this file. For more info see http://www.lyx.org/
\lyxformat 276
\begin_document
\begin_header
\textclass amsart
\language english
\inputencoding auto
\font_roman times
\font_sans helvet
\font_typewriter courier
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\paperfontsize default
\spacing single
\papersize default
\use_geometry false
\use_amsmath 2
\use_esint 0
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle plain
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Title
An efficient algorithm for accelerating the convergence of oscillatory series,
 useful for computing the polylogarithm and Hurwitz zeta functions
\end_layout

\begin_layout Author
Linas Vep≈°tas
\end_layout

\begin_layout Date
12 October 2006, revised 18 November 2007
\end_layout

\begin_layout Abstract
This paper sketches a technique for improving the rate of convergence of
 a general oscillatory sequence, and then applies this series acceleration
 algorithm to the polylogarithm and the Hurwitz zeta function.
 As such, it may be taken as  an extension of the techniques given by Borwein's
 
\begin_inset Quotes eld
\end_inset

An efficient algorithm for computing the Riemann zeta function
\begin_inset Quotes erd
\end_inset


\begin_inset LatexCommand cite
key "Bor00-A"

\end_inset

, to more general series.
 The algorithm provides a rapid means of evaluating 
\begin_inset Formula $\mbox{Li}_{s}(z)$
\end_inset

 for general values of complex 
\begin_inset Formula $s$
\end_inset

 and a kidney-shaped region of complex 
\begin_inset Formula $z$
\end_inset

 values given by 
\begin_inset Formula $\left|z^{2}/(z-1)\right|<4$
\end_inset

.
 By using the duplication formula and the inversion formula, the range of
 convergence for the polylogarithm may be extended to the entire complex
 
\begin_inset Formula $z$
\end_inset

-plane, and so the algorithms described here allow for the evaluation of
 the polylogarithm for all complex 
\begin_inset Formula $s$
\end_inset

 and 
\begin_inset Formula $z$
\end_inset

 values.
 
\end_layout

\begin_layout Abstract
Alternatively, the Hurwitz zeta can be very rapidly evaluated by means of
 an Euler-Maclaurin series.
 The polylogarithm and the Hurwitz zeta are related, in that two evaluations
 of the one can be used to obtain a value of the other; thus, either algorithm
 can be used to evaluate either function.
 The Euler-Maclaurin series is a clear performance winner for the Hurwitz
 zeta, while the Borwein algorithm is superior for evaluating the polylogarithm
 in the kidney-shaped region.
 Both algorithms are superior to the simple Taylor's series or direct summation.
\end_layout

\begin_layout Abstract
The primary, concrete result of this paper is an algorithm allows the exploratio
n of the Hurwitz zeta in the critical strip, where fast algorithms are otherwise
 unavailable.
 
\end_layout

\begin_layout Abstract
A discussion of the monodromy group of the polylogarithm is included.
\end_layout

\begin_layout Subjectclass
65B10 (primary), 11M35, 11Y35, 33F05, 68W25
\end_layout

\begin_layout Keywords
Polylogarithm, Hurwitz zeta function, algorithm, monodromy, series acceleration
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
This article sketches a technique for improving the rate of convergence
 of a general oscillatory series, and then applies this technique to the
 computation of the polylogarithm, and to related functions, such as the
 Hurwitz zeta function.
 It essentially generalizes an algorithm given by Peter Borwein for computing
 the Riemann zeta function (
\begin_inset LatexCommand cite
key "Bor00-A"

\end_inset

).
 The principal result is an algorithm that efficiently obtains values of
 the Hurwitz zeta in the critical strip 
\begin_inset Formula $s=\sigma+i\tau$
\end_inset

 with 
\begin_inset Formula $0\le\sigma\le1$
\end_inset

.
 
\end_layout

\begin_layout Standard
The Hurwitz zeta function may be defined as 
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\zeta(s,q)=\sum_{n=0}^{\infty}\frac{1}{(n+q)^{s}}\label{eq:Hurwitz zeta}\end{equation}

\end_inset

 This series is absolutely convergent for 
\begin_inset Formula $\sigma>1$
\end_inset

 and any complex 
\begin_inset Formula $q$
\end_inset

 that is not zero or a negative integer.
 There are branch points at 
\begin_inset Formula $q=0,-1,-2,\cdots$
\end_inset

, rather than simple poles: this is best understood by noting that 
\begin_inset Formula $q^{s}=e^{s\log q}$
\end_inset

 and that 
\begin_inset Formula $q=0$
\end_inset

 is a branch point for the logarithm, anchoring one end of a branch cut.
 Although the branch cut of the logarithm is conventionally taken to extend
 to the left, along the negative real axis, one may, in fact, run the branch
 cut in any direction.
 The Hurwitz zeta function presents a more daunting scenario: with a branch
 cut originating at 
\begin_inset Formula $q=0$
\end_inset

 and at every negative integer, there are many different ways to navigate
 from sheet to sheet.
 Conventionally, these are all taken to lie one-atop another, along the
 negative real axis; this helps obscure the fact that there are a countable
 infinity of cuts.
\end_layout

\begin_layout Standard
The series (
\begin_inset LatexCommand ref
reference "eq:Hurwitz zeta"

\end_inset

) is not directly usable in the critical strip 
\begin_inset Formula $0\le\sigma\le1$
\end_inset

, as it does not converge.
 For numerical calculations, this series may be directly summed for 
\begin_inset Formula $\sigma>1$
\end_inset

, although, for high-precision work, convergence becomes annoyingly slow
 when 
\begin_inset Formula $\sigma$
\end_inset

 is less than about 2.
 The series may be analytically continued to the entire complex 
\begin_inset Formula $s$
\end_inset

-plane, excepting a simple pole at 
\begin_inset Formula $s=1$
\end_inset

.
 The continuation, convergent on the entire complex 
\begin_inset Formula $s$
\end_inset

-plane except at the pole, was given by Helmut Hasse in 1930
\begin_inset LatexCommand cite
key "Has30"

\end_inset

: 
\begin_inset Formula \begin{equation}
\zeta(s,q)=\frac{1}{s-1}\sum_{n=0}^{\infty}\frac{1}{n+1}\sum_{k=0}^{n}(-1)^{k}\left(\begin{array}{c}
n\\
k\end{array}\right)(q+k)^{1-s}\label{eq:Hasse series}\end{equation}

\end_inset

 Although the Hasse series is convergent, the convergence is far too slow
 for practical numerical evaluation in the critical strip.
 
\end_layout

\begin_layout Standard
There are other simple series that are more strongly convergent in limited
 domains, and so may be considered for numerical work.
 One such is a Taylor's series in 
\begin_inset Formula $q$
\end_inset

.
 To obtain this, one makes use of the derivative 
\begin_inset Formula \[
\frac{d}{dq}\zeta(s,q)=-s\zeta(s+1,q)\]

\end_inset

 to write a Taylor's series about 
\begin_inset Formula $q_{0}$
\end_inset

:
\begin_inset Formula \begin{equation}
\zeta(s,q)=\sum_{n=0}^{\infty}\left(q_{0}-q\right)^{n}\left(\begin{array}{c}
s+n-1\\
n\end{array}\right)\zeta(s+n,q_{0})\label{eq:Hurw general Taylor}\end{equation}

\end_inset

 The binomial coefficient for a general complex-valued 
\begin_inset Formula $s$
\end_inset

 can be understood to be 
\begin_inset Formula \[
\left(\begin{array}{c}
s+n-1\\
n\end{array}\right)=\frac{s(s+1)(s+2)\cdots(s+n-1)}{n!}\]

\end_inset

 To avoid the circular problem of having to compute 
\begin_inset Formula $\zeta(s+n,q_{0})$
\end_inset

 for some arbitrary 
\begin_inset Formula $q_{0}$
\end_inset

, one makes use of the fact that, for 
\begin_inset Formula $q_{0}=1$
\end_inset

, one has 
\begin_inset Formula $\zeta(s,1)=\zeta(s)$
\end_inset

, with 
\begin_inset Formula $\zeta(s)$
\end_inset

 being Riemann's zeta function.
 Since Riemann's zeta function does have several well-known algorithms (
\begin_inset LatexCommand cite
key "Bor00"

\end_inset

), the Taylor's series at 
\begin_inset Formula $q_{0}=1$
\end_inset

 is tractable.
 The 
\begin_inset Formula $q_{0}=1$
\end_inset

 series is convergent for 
\begin_inset Formula $\left|q\right|<1$
\end_inset

.
 
\end_layout

\begin_layout Standard
The radius of convergence for the series (
\begin_inset LatexCommand ref
reference "eq:Hurw general Taylor"

\end_inset

) is the least distance between 
\begin_inset Formula $q_{0}$
\end_inset

 and any of the branch points 
\begin_inset Formula $q=0,-1,-2,\cdots.$
\end_inset

 To enlarge the radius of convergence, one may explicitly handle the nearest
 branch-point on its own.
 Thus, for example, explicitly setting aside the branch point at 
\begin_inset Formula $q=0$
\end_inset

 by writing 
\begin_inset Formula $\zeta(s,q)=q^{-s}+\zeta(s,1+q)$
\end_inset

, one obtains 
\begin_inset Formula \begin{equation}
\zeta(s,q)=\frac{1}{q^{s}}+\sum_{n=0}^{\infty}\left(-q\right)^{n}\left(\begin{array}{c}
s+n-1\\
n\end{array}\right)\zeta(s+n)\label{eq:Hurwitz taylor}\end{equation}

\end_inset

 where the right-hand side employed the Taylor's expansion at 
\begin_inset Formula $q_{0}=1$
\end_inset

.
 This sum is convergent for 
\begin_inset Formula $\left|q\right|<1$
\end_inset

, with the radius of convergence dictated by the branch point at 
\begin_inset Formula $q=-1$
\end_inset

.
 This process may be repeated, so that, setting aside the branch points
 at 
\begin_inset Formula $q=0,-1$
\end_inset

 by writing 
\begin_inset Formula \[
\zeta(s,q)=\frac{1}{q^{s}}+\frac{1}{\left(q+1\right)^{s}}+\zeta(s,2+q)\]

\end_inset

 and then expanding about 
\begin_inset Formula $q_{0}=2$
\end_inset

, one has 
\begin_inset Formula \[
\zeta(s,q)=\frac{1}{q^{s}}+\frac{1}{\left(q+1\right)^{s}}+\sum_{n=0}^{\infty}\left(-q\right)^{n}\left(\begin{array}{c}
s+n-1\\
n\end{array}\right)\left[\zeta(s+n)-1\right]\]

\end_inset

 with the sum on the right being convergent for 
\begin_inset Formula $\left|q\right|<2$
\end_inset

.
 Repeating this process, the general form is 
\begin_inset Formula \[
\zeta(s,q)=\sum_{k=0}^{m}\frac{1}{\left(k+q\right)^{s}}+\sum_{n=0}^{\infty}\left(-q\right)^{n}\left(\begin{array}{c}
s+n-1\\
n\end{array}\right)\left[\zeta(s+n)-\sum_{k=1}^{m}\frac{1}{k^{s}}\right]\]

\end_inset

 with the sum on the right being convergent for 
\begin_inset Formula $\left|q\right|<m+1$
\end_inset

.
\end_layout

\begin_layout Standard
Any of these expansions provide a numerically reasonable expression for
 the Hurwitz zeta function that is convergent on the entire complex 
\begin_inset Formula $s$
\end_inset

-plane (minus, of course, 
\begin_inset Formula $s=1$
\end_inset

, and taking the appropriate limit, via l'H√¥pital's rule, when 
\begin_inset Formula $s$
\end_inset

 is a non-positive integer).
 The principal drawback to the use of these sums for high-precision calculations
 is the need for many high-precision evaluations of the Riemann zeta function;
 the computing time can grow rapidly as the number of required digits is
 increased.
 
\end_layout

\begin_layout Standard
It is the poor performance of these sums in numerical calculations that
 motivates the development of this paper.
 Since the Generalized Riemann Hypothesis can be phrased in terms of the
 values of the Hurwitz zeta function on the critical strip, it is of some
 interest to have a fast algorithm for computing high-precision values of
 this function in this region.
 There has been little work in this area.
 ≈†le≈æeviƒçiene provides a discussion of fast algorithms for Dirichlet L-functions
 in 
\begin_inset LatexCommand cite
key "Sle04"

\end_inset

.
 Balanzario presents an extension of the Euler-Maclaurin formula, such that
 it can be used to evaluate 
\begin_inset Formula $\zeta(s,q)$
\end_inset

 in the critical strip 
\begin_inset LatexCommand cite
key "Bal06"

\end_inset

.
 A particularly interesting possibility is the application of the FEE method
 to the evaluation of 
\begin_inset Formula $\zeta(s,q)$
\end_inset

 for integer 
\begin_inset Formula $s$
\end_inset

, given by Karatsuba
\begin_inset LatexCommand cite
key "Kar98"

\end_inset

.
\end_layout

\begin_layout Standard
The polylogarithm, sometimes called the 
\begin_inset Quotes eld
\end_inset


\emph on
fractional polylogarithm
\emph default

\begin_inset Quotes erd
\end_inset

 to emphasize that 
\begin_inset Formula $s$
\end_inset

 need not be an integer, is given by the sum 
\begin_inset Formula \begin{equation}
\mbox{Li}_{s}(z)=\sum_{n=1}^{\infty}\frac{z^{n}}{n^{s}}\label{eq:polylog definition}\end{equation}

\end_inset

 This sum is absolutely convergent on the complex half-plane 
\begin_inset Formula $\sigma>0$
\end_inset

 when 
\begin_inset Formula $\left|z\right|<1$
\end_inset

, and in 
\begin_inset Formula $\sigma>1$
\end_inset

 when 
\begin_inset Formula $\left|z\right|\le1$
\end_inset

.
 The polylogarithm has a non-trivial analytic structure.
 For fixed 
\begin_inset Formula $s$
\end_inset

, the principal sheet has a branch point at 
\begin_inset Formula $z=1$
\end_inset

, with a branch cut conventionally taken on the positive real axis, for
 
\begin_inset Formula $1<z<+\infty$
\end_inset

.
 The location of the branch-point at 
\begin_inset Formula $z=1$
\end_inset

, as is always the case with branch points, is the cause of limited convergence
 of the analytic series in the complex 
\begin_inset Formula $z$
\end_inset

-plane.
 The other sheets of the polylogarithm also have a branch point at 
\begin_inset Formula $z=0$
\end_inset

, which is not naively obvious from the form (
\begin_inset LatexCommand ref
reference "eq:polylog definition"

\end_inset

).
 The set of possible paths that navigate from sheet to sheet form a group,
 known as the '
\emph on
monodromy group
\emph default
' of the function; a detailed exposition of the monodromy will be given
 in this paper.
\end_layout

\begin_layout Standard
The Hurwitz zeta may be expressed in terms of the polylogarithm
\begin_inset LatexCommand cite
key "Lew81"

\end_inset

 by means of Jonqui√®re's identity
\begin_inset LatexCommand cite
after "Section 7.12.2"
key "Lew81"

\end_inset


\begin_inset LatexCommand cite
key "Jon1889"

\end_inset

 
\begin_inset Formula \begin{equation}
\mbox{Li}_{s}\left(e^{2\pi iq}\right)+\left(-1\right)^{s}\mbox{Li}_{s}\left(e^{-2\pi iq}\right)=\frac{\left(2\pi i\right)^{s}}{\Gamma(s)}\zeta(1-s,q)\label{eq:poly-hur relation}\end{equation}

\end_inset

 which holds for the region 
\begin_inset Formula $\sigma>1$
\end_inset

, 
\begin_inset Formula $0\le\Re q<1$
\end_inset

, and 
\begin_inset Formula $\Im q>0$
\end_inset

.
 Thus, fast algorithms for the polylogarithm can be converted to fast algorithms
 for the Hurwitz zeta.
 Wood
\begin_inset LatexCommand cite
key "Wood92"

\end_inset

 provides a extensive review of the means of computing the polylogarithm,
 but limits himself to real values of 
\begin_inset Formula $s$
\end_inset

.
 Crandall
\begin_inset LatexCommand cite
key "Cra06"

\end_inset

 discusses evaluating the polylogarithm on the entire complex 
\begin_inset Formula $z$
\end_inset

-plane, but limits himself to integer values of 
\begin_inset Formula $s$
\end_inset

.
 Thus, there appears to be a similar paucity of general algorithms for the
 polylogarithm as well.
 The series defining the polylogarithm may be directly evaluated when 
\begin_inset Formula $\left|z\right|<1$
\end_inset

, although direct evaluation becomes quite slow as 
\begin_inset Formula $\left|z\right|$
\end_inset

 approaches 1 and 
\begin_inset Formula $\sigma$
\end_inset

 is smaller than about 2.
 There do not seem to be any published algorithms that may be applied on
 the critical strip.
\end_layout

\begin_layout Standard
The primary effort of this paper is to take the algorithm given by Borwein
 
\begin_inset LatexCommand cite
key "Bor00-A"

\end_inset

, which is a simple Pad√©-type approximant algorithm 
\begin_inset LatexCommand cite
key "Bre79"

\end_inset

, and generalize it to the polylogarithm.
 The result is a relatively small finite sum that approximates the polylogarithm
, and whose error, or difference from the exact value, can be precisely
 characterized and bounded.
 Increased precision is easily obtainable by evaluating a slightly larger
 sum; one may obtain roughly 
\begin_inset Formula $2N$
\end_inset

 to 
\begin_inset Formula $4N$
\end_inset

 bits of precision by evaluating a sum of 
\begin_inset Formula $N$
\end_inset

 terms.
 The sum may be readily evaluated for just about any value 
\begin_inset Formula $s$
\end_inset

 on the complex 
\begin_inset Formula $s$
\end_inset

-plane.
 However, it is convergent only in a limited region of the 
\begin_inset Formula $z$
\end_inset

-plane, and specifically, is only convergent when 
\begin_inset Formula \[
\left|\frac{z^{2}}{z-1}\right|<4\]

\end_inset

 This is sufficient for evaluating the Hurwitz zeta for general complex
 
\begin_inset Formula $s$
\end_inset

 and real 
\begin_inset Formula $0<q<1$
\end_inset

.
 Unfortunately, there does not appear to be any simple and efficient way
 of extending this result to the general complex 
\begin_inset Formula $z$
\end_inset

-plane, at least not for general values of 
\begin_inset Formula $s$
\end_inset

.
 By using duplication and reflection formulas, one may extend the algorithm
 to the entire complex 
\begin_inset Formula $z$
\end_inset

-plane; however, this requires the independent evaluation of Hurwitz zeta.
\end_layout

\begin_layout Standard
The extended Borwein algorithm described here can be considered to be a
 yet another form of series acceleration, applied in a particular context.
 As there already exists a large body of work on series acceleration 
\begin_inset LatexCommand cite
key "Wen89,Brez91,Bak96"

\end_inset

, a few words are in order for the choice made here.
 First, much of the existing literature is focused on real-valued series.
 When a formal series, such as 
\begin_inset Formula $\sum_{n}a_{n}z^{n}$
\end_inset

 is considered, it is usually implicitly assumed that 
\begin_inset Formula $z$
\end_inset

 is real, and positive.
 Alternately, some of the finest and most powerful series acceleration algorithm
s take 
\begin_inset Formula $z=-1$
\end_inset

, so that the sequence being summed is a real-valued, alternating sequence.
 By contrast, the problem at hand takes 
\begin_inset Formula $z$
\end_inset

 to be complex-valued, and so, in this sense, '
\emph on
oscillatory
\emph default
', as 
\begin_inset Formula $z=re^{i\theta}$
\end_inset

 with 
\begin_inset Formula $\theta$
\end_inset

 non-zero.
 In addition, the 
\begin_inset Formula $a_{n}$
\end_inset

 show a weak, complex-valued oscillation, with the 
\begin_inset Formula $\left|a_{n}\right|$
\end_inset

 being only logarithmically convergent.
 Thus, most of the well-known series acceleration techniques do not appear
 to be 
\emph on
prima facie
\emph default
 applicable to the problem at hand.
 As to numerical performance, the best techniques, and in particular, the
 non-linear techniques, seem to offer approximately 
\begin_inset Formula $2N$
\end_inset

 to 
\begin_inset Formula $4N$
\end_inset

 bits of precision for a logarithmically convergent series of 
\begin_inset Formula $N$
\end_inset

 terms, which is comparable to the results obtained here.
 This is supported by Jentschura, 
\emph on
et al.

\emph default
 
\begin_inset LatexCommand cite
key "Jen98"

\end_inset

, who apply several different non-linear sequence transformations to the
 Riemann zeta function and the Lerch transcendent.
 Importantly, the Borwein algorithm provides an exact, explicit error bound
 on the accuracy of results.
 This is particularly important for implementation in general precision
 algorithm libraries, where error and rounding control are vital for accurate
 results.
 Whether any of the other well-known techniques can be adapted to this problem,
 whether they offer equivalent or superior numerical space/time performance,
 and whether they offer explicit error estimation, remains an open question.
\end_layout

\begin_layout Standard
Although the Hurwitz zeta function may be computed by evaluating the Taylor's
 series (
\begin_inset LatexCommand ref
reference "eq:Hurwitz taylor"

\end_inset

) directly, a superior approach is to perform an Euler-Maclaurin summation
 (thanks to Oleksandr Pavlyk for pointing this out
\begin_inset LatexCommand cite
key "Pav07"

\end_inset

).
 The summation uses the standard, textbook Euler-Maclaurin formula
\begin_inset LatexCommand cite
after "25,4,7"
key "A&S"

\end_inset

, and is applied to the function 
\begin_inset Formula $f(x)=(x+q)^{-s}$
\end_inset

.
 However, the application is 
\begin_inset Quotes eld
\end_inset

backwards
\begin_inset Quotes erd
\end_inset

 from the usual sense: the integral of 
\begin_inset Formula $f(x)$
\end_inset

 is known (it is easily evaluated analytically), and it is the series, which
 gives the Hurwitz zeta, which is unknown.
 All of the other parts of Euler-Maclaurin formula are easily evaluated.
 The result is an algorithm that is particularly rapid for the Hurwitz zeta
 function.
 This, and some of the other algorithms discussed above, have been implemented,
 and a measurement of their relative performance was taken.
 This data is reviewed in a later section.
 It indicates that Euler-Maclaurin summation outperforms the direct evaluation
 of the Taylor's series by orders of magnitude.
 It also indicates that Euler-Maclaurin summation is faster than evaluating
 the polylogarithm twice, and using Jonqui√®re's identity (
\begin_inset LatexCommand ref
reference "eq:poly-hur relation"

\end_inset

).
 
\end_layout

\begin_layout Standard
The development of this paper proceeds as follows.
 XXXX -- all wrong.
\end_layout

\begin_layout Standard
First, an integral representation is given for the polylogarithm.
 This representation is such that a certain trick, here called 
\begin_inset Quotes eld
\end_inset

the Borwein trick
\begin_inset Quotes erd
\end_inset

, may be applied to express the integral as a polynomial plus a small error
 term.
 This is followed by a sketch of a generalization of the trick to the convergenc
e acceleration of general oscillatory series.
 A polynomial series for the polylogarithm is given, and the error term
 of the resulting approximation is precisely bounded.
 This is followed by a very short review of the application of Euler Maclaurin
 summation.
 There is a brief review of the duplication formula for the Hurwitz zeta,
 and a short discussion of ways in which this numerical algorithm may be
 tested for correctness.
 Measurements of the performance of actual implementations of the various
 numerical algorithms is provided.
 The paper concludes with a detailed derivation of the monodromy group,
 and a discussion of Apostol's 
\begin_inset Quotes eld
\end_inset

periodic zeta function
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
The algorithm has been implemented by the author using the Gnu Multiple
 Precision arithmetic library
\begin_inset LatexCommand cite
key "GMP"

\end_inset

, and is available on request, under the terms of the LGPL license.
 The paper concludes with some intriguing images of the polylogarithm and
 the Hurwitz zeta function on the critical strip.
 
\end_layout

\begin_layout Section
Convergence Acceleration of Oscillatory Series 
\end_layout

\begin_layout Standard
This section considers series acceleration techniques for the formal series
 
\begin_inset Formula \begin{equation}
S(z)=\sum_{n=0}^{\infty}a_{n}z^{n}\label{eq:formal series}\end{equation}

\end_inset

where 
\begin_inset Formula $z$
\end_inset

 is understood to be complex-valued and 
\emph on
a priori
\emph default
 unrestricted.
 Informally, this series will be termed '
\emph on
oscillatory
\emph default
', in the sense that when 
\begin_inset Formula $z$
\end_inset

 lies on the unit circle 
\begin_inset Formula $\left|z\right|=1$
\end_inset

, the powers 
\begin_inset Formula $z^{n}$
\end_inset

are seen to circle around the origin.
 The goal is to present techniques that converge more rapidly than the simple
 partial sums of (
\begin_inset LatexCommand ref
reference "eq:formal series"

\end_inset

).
\end_layout

\begin_layout Standard
One of the oldest techniques for the acceleration of convergence is Euler's
 transformation of an alternating series 
\begin_inset LatexCommand cite
after "eqn 3.6.27"
key "A&S"

\end_inset

.
 An alternating series can be considered to be a special case of (
\begin_inset LatexCommand ref
reference "eq:formal series"

\end_inset

), with 
\begin_inset Formula $z$
\end_inset

 set to 
\begin_inset Formula $z=-1$
\end_inset

.
 Euler's transformation is most clearly expressed by making use of the forward
 difference operator.
 This operator, 
\begin_inset Formula $\triangle$
\end_inset

, is defined to act on a sequence 
\begin_inset Formula $\{a_{n}\}$
\end_inset

 as 
\begin_inset Formula $\triangle a_{n}=a_{n+1}-a_{n}$
\end_inset

.
 By abuse of notation, it acts on a general function 
\begin_inset Formula $f(x)$
\end_inset

 as 
\begin_inset Formula $\triangle f(x)=f(x+1)-f(x)$
\end_inset

.
 Repeated iteration is used to define 
\begin_inset Formula $\triangle^{n}$
\end_inset

, so that 
\begin_inset Formula $\triangle^{2}f(x)=f(x+2)-2f(x+1)+f(x)$
\end_inset

 and 
\begin_inset Formula \begin{equation}
\triangle^{n}f(x)=\sum_{k=0}^{n}(-1)^{n-k}\left(\begin{array}{c}
n\\
k\end{array}\right)f(x+k)\label{eq:nth difference}\end{equation}

\end_inset

 Euler then considers a convergent alternating series
\end_layout

\begin_layout Standard
\begin_inset Formula \[
S=\sum_{n=0}^{\infty}\left(-1\right)^{n}a_{n}\]

\end_inset

 and finds that it can be re-written as 
\begin_inset Formula \begin{equation}
S=\sum_{n=0}^{\infty}\frac{\left(-1\right)^{n}\triangle^{n}a_{0}}{2^{n+1}}\label{eq:Euler's series}\end{equation}

\end_inset

Aside from the power of two in the denominator aiding in convergence, it
 is often the case that the forward differences themselves rapidly become
 small.
 Euler's method effective, although not very strong, and it has long been
 employed numeric calculations.
 A particularly efficient algorithm for Euler's method is given by van Wijngaard
en
\begin_inset LatexCommand cite
key "Goo61,Pre88"

\end_inset

.
 
\end_layout

\begin_layout Standard
Euler's transformation of series has several general forms.
 One particularly enlightening form 
\begin_inset LatexCommand cite
after "page 311"
key "Mil33"

\end_inset

 is 
\begin_inset Formula \begin{equation}
\sum_{n=0}^{\infty}\frac{a_{n}}{t^{n+1}}=\sum_{k=0}^{\infty}\frac{\triangle^{k}a_{0}}{\left(t-1\right)^{k+1}}\label{eq:Euler's general}\end{equation}

\end_inset

where the right hand side converges for 
\begin_inset Formula $\left|t-1\right|>R+1$
\end_inset

 when the left hand side is convergent for 
\begin_inset Formula $\left|t\right|>R$
\end_inset

.
 Euler's transform for alternating series is regained by setting 
\begin_inset Formula $t=-1$
\end_inset

.
 Setting 
\begin_inset Formula $z=1/t$
\end_inset

, the above takes a form that suggests the later developments in this section:
 
\begin_inset Formula \begin{equation}
\sum_{n=0}^{\infty}a_{n}z^{n}=\frac{1}{1-z}\sum_{k=0}^{\infty}\left(\frac{z}{1-z}\right)^{k}\triangle^{k}a_{0}\label{eq:Euler's gen in z}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
A good example of the strength (and weakness) of Euler's transformation
 is its application to the Hurwitz zeta function, where it essentially leads
 to the Hasse series (
\begin_inset LatexCommand ref
reference "eq:Hasse series"

\end_inset

).
 Taking 
\begin_inset Formula $f(x)$
\end_inset

 to be 
\begin_inset Formula $q^{1-s}$
\end_inset

 in equation (
\begin_inset LatexCommand ref
reference "eq:nth difference"

\end_inset

), the inner sum of the Hasse series (
\begin_inset LatexCommand ref
reference "eq:Hasse series"

\end_inset

) is then 
\begin_inset Formula \[
\sum_{k=0}^{n}(-1)^{n-k}\left(\begin{array}{c}
n\\
k\end{array}\right)(q+k)^{1-s}=\triangle^{n}q^{1-s}\]

\end_inset

The benefit of the Hasse series is that it has improved convergence to the
 point of being globally convergent on the complex 
\begin_inset Formula $s$
\end_inset

-plane, whereas the traditional series representation of equation (
\begin_inset LatexCommand ref
reference "eq:Hurwitz zeta"

\end_inset

) is not.
 Yet, things can be improved further still.
 A quick numerical experiment will show that the Hasse series does not converge
 rapidly, especially in the critical strip.
 The attempt to improve convergence even further, beyond this traditional
 technique, motivates the development of this paper.
 
\end_layout

\begin_layout Standard
Strictly speaking, the slow convergence can be attributed to the fact that
 the naive series representations (
\begin_inset LatexCommand ref
reference "eq:Hurwitz zeta"

\end_inset

) or (
\begin_inset LatexCommand ref
reference "eq:polylog definition"

\end_inset

) are not strictly alternating series, as would be properly required to
 justify the application of the Euler method.
 Instead, the series are a superposition of oscillatory terms; for the polylogar
ithm, an explicit oscillation coming from 
\begin_inset Formula $z^{n}=\left|z\right|^{n}e^{in\arg z}$
\end_inset

 and a slower oscillation coming from 
\begin_inset Formula $n^{-s}=n^{-\sigma}e^{-i\tau\log n}$
\end_inset

.
 Thus, one would like to have a theory of sequence acceleration not for
 alternating series, but for oscillatory series.
 
\end_layout

\begin_layout Standard
One problem with the equation (
\begin_inset LatexCommand ref
reference "eq:Euler's gen in z"

\end_inset

) is that, for 
\begin_inset Formula $\left|z\right|=1$
\end_inset

, it is optimal only when 
\begin_inset Formula $z=-1$
\end_inset

, and becomes a de-acceleration technique as 
\begin_inset Formula $z$
\end_inset

 approaches 1.
 One would like to somehow 
\begin_inset Quotes eld
\end_inset

twist
\begin_inset Quotes erd
\end_inset

 this series, so that it is optimally convergent for any particular 
\begin_inset Formula $z$
\end_inset

.
 This may be done by replacing the forward difference operator 
\begin_inset Formula $\triangle a_{n}=a_{n+1}-a_{n}$
\end_inset

 by 
\begin_inset Formula $\triangle_{q}a_{n}=a_{n+1}-qa_{n}$
\end_inset

.
 Straightforward manipulations lead to 
\begin_inset Formula \[
\frac{1}{1-qz}\;\sum_{m=0}^{\infty}\left(\frac{z}{1-qz}\right)^{m}\triangle_{q}^{m}a_{0}=\sum_{n=0}^{\infty}z^{n}a_{n}\]

\end_inset

with the traditional Euler's series (
\begin_inset LatexCommand ref
reference "eq:Euler's gen in z"

\end_inset

) regained by taking 
\begin_inset Formula $q=1$
\end_inset

.
 In this form, the series is reminiscent of the starting point for Pad√©-type
 approximations
\begin_inset LatexCommand cite
key "Bre79"

\end_inset

.
 Assuming that the oscillatory part 
\begin_inset Formula $z$
\end_inset

 is known, or can be approximately guessed at from the period of the oscillation
, then choosing 
\begin_inset Formula $q=-1/z$
\end_inset

 should make the left hand side an accelerated series for the right hand
 side.
 
\end_layout

\begin_layout Standard
There is a more powerful acceleration technique; it is at the center of
 this paper and is described now.
 Suppose that it is possible to express the 
\begin_inset Formula $a_{n}$
\end_inset

 of equation (
\begin_inset LatexCommand ref
reference "eq:formal series"

\end_inset

) as moments, so that 
\begin_inset Formula \[
a_{n}=\int_{0}^{1}y^{n}g(y)dy\]

\end_inset

for some function 
\begin_inset Formula $g(y)$
\end_inset

.
 Since 
\begin_inset Formula $g(y)$
\end_inset

 is still fairly general (subject to constraints discussed below), this
 assumption does not overly restrict the 
\begin_inset Formula $a_{n}$
\end_inset

, and should not bar most practical applications.
 It follows that
\begin_inset Formula \begin{equation}
S(z)=\int_{0}^{1}\frac{g(y)}{1-yz}\, dy\label{eq:S quadrature}\end{equation}

\end_inset

The goal of the series acceleration is to write 
\begin_inset Formula \[
S(z)=S_{n}(z)+\varepsilon_{n}(z)\]

\end_inset

in such a way that 
\begin_inset Formula $S_{n}(z)$
\end_inset

 can be computed rapidly, and 
\begin_inset Formula $\varepsilon_{n}(z)$
\end_inset

 is a small and explicitly bounded error term.
 This is done in two steps, known to this author by generalizing from Borwein
 
\begin_inset LatexCommand cite
key "Bor00-A"

\end_inset

 and Cohen, 
\emph on
et al
\emph default
.
 
\begin_inset LatexCommand cite
key "Coh00"

\end_inset

, although the technique is possibly older.
 
\end_layout

\begin_layout Standard
First, one makes an Ansatz and writes 
\begin_inset Formula \begin{equation}
S_{n}(z)=\frac{1}{p_{n}\left(\frac{1}{z}\right)}\int_{0}^{1}\frac{p_{n}\left(\frac{1}{z}\right)-p_{n}(y)}{1-yz}g(y)\, dy\label{eq:S_n definition}\end{equation}

\end_inset

 and 
\begin_inset Formula \[
\varepsilon_{n}(z)=\frac{1}{p_{n}\left(\frac{1}{z}\right)}\int_{0}^{1}\frac{p_{n}(y)g(y)}{1-yz}\, dy\]

\end_inset

so that 
\begin_inset Formula $S(z)=S_{n}(z)+\varepsilon_{n}(z)$
\end_inset

 holds vacuously, by rearrangement of terms.
 The second step is to find a sequence of polynomials 
\begin_inset Formula $\left\{ p_{n}(y)\right\} $
\end_inset

 such that the 
\begin_inset Formula $S_{n}(z)$
\end_inset

 are easily evaluated, while also showing that the 
\begin_inset Formula $\varepsilon_{n}(z)$
\end_inset

 are bounded and geometrically decreasing.
 The next section will show that 
\begin_inset Formula $S_{n}(z)$
\end_inset

 can be written as
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
S_{n}(z)=\frac{-1}{p_{n}\left(\frac{1}{z}\right)}\sum_{k=0}^{n-1}c_{k}a_{k}\label{eq:accelerated sum}\end{equation}

\end_inset

With a suitable choice of 
\begin_inset Formula $p_{n}(z)$
\end_inset

, the coefficients 
\begin_inset Formula $c_{k}$
\end_inset

 are presumably easy to evaluate.
 To show that the 
\begin_inset Formula $S_{n}(z)$
\end_inset

 is really a series acceleration for the formal series (
\begin_inset LatexCommand ref
reference "eq:formal series"

\end_inset

), one must show that 
\begin_inset Formula $\left|\varepsilon_{n}(z)\right|$
\end_inset

 is bounded.
 If 
\begin_inset Formula $g(y)\ge0$
\end_inset

, then 
\begin_inset Formula \[
\left|\varepsilon_{n}(z)\right|\le\left|\frac{p_{n}\left(y_{0}\right)}{p_{n}\left(\frac{1}{z}\right)}\right|\left|S(z)\right|\]

\end_inset

where 
\begin_inset Formula $y_{0}$
\end_inset

 is the point on the unit interval where 
\begin_inset Formula $p_{n}(y)$
\end_inset

 assumes its maximum.
 Provided that one can find a polynomial sequence such that 
\begin_inset Formula \[
\left|\frac{p_{n}\left(y_{0}\right)}{p_{n}\left(\frac{1}{z}\right)}\right|\sim A^{-n}\]

\end_inset

for some real number 
\begin_inset Formula $A>\left|1/z\right|$
\end_inset

, then one has that the series 
\begin_inset Formula $S_{n}(z)$
\end_inset

 converges to 
\begin_inset Formula $S(z)$
\end_inset

 more rapidly than the simple partial sums 
\begin_inset Formula $\sum_{k=0}^{n}z^{k}a_{k}$
\end_inset

 of equation (
\begin_inset LatexCommand ref
reference "eq:formal series"

\end_inset

).
\end_layout

\begin_layout Standard
The above is a demonstration of a series acceleration method for a more-or-less
 general sequence of 
\begin_inset Formula $a_{n}$
\end_inset

, and is in no way particular to the polylogarithm or the Hurwitz zeta.
 The only ingredients of the demonstration were that the 
\begin_inset Formula $a_{n}$
\end_inset

 are 
\begin_inset Quotes eld
\end_inset

well-behaved
\begin_inset Quotes erd
\end_inset

 -- in this case, being expressible as moments of a general function 
\begin_inset Formula $g(y)$
\end_inset

.
 For the conclusion to hold, 
\begin_inset Formula $g(y)$
\end_inset

 needs to be integrable; it need not be analytic, differentiable or even
 continuous.
 Thus, one might hope that the acceleration method might work, even for
 those general cases where 
\begin_inset Formula $g(y)$
\end_inset

 is not explicitly known, but the 
\begin_inset Formula $a_{n}$
\end_inset

 are somehow 
\begin_inset Quotes eld
\end_inset

reasonable
\begin_inset Quotes erd
\end_inset

.
 
\end_layout

\begin_layout Standard
For the special case of 
\begin_inset Formula $z=-1$
\end_inset

, 
\emph on
i.e.

\emph default
 for the case of an alternating series, Cohen 
\emph on
et al.

\emph default
 
\begin_inset LatexCommand cite
key "Coh00"

\end_inset

 suggest some remarkably strongly converging polynomials 
\begin_inset Formula $p_{n}(y)$
\end_inset

, with values of 
\begin_inset Formula $A$
\end_inset

 from 5.8 to as much as 17.9.
 The generalization of those results to arbitrary 
\begin_inset Formula $z$
\end_inset

 is not immediately apparent, but is surely possible.
 By comparison, Borwein's algorithm 2(
\begin_inset LatexCommand cite
key "Bor00-A"

\end_inset

), using the Tchebysheff polynomials, corresponds to 
\begin_inset Formula $A=3+\sqrt{8}\approx5.828$
\end_inset

 and algorithm 3, generalized in a later section, has 
\begin_inset Formula $A=8$
\end_inset

.
\end_layout

\begin_layout Section
Polynomial sequences
\end_layout

\begin_layout Standard
This section provides a series of short lemmas to establish the result (
\begin_inset LatexCommand ref
reference "eq:accelerated sum"

\end_inset

).
\end_layout

\begin_layout Lemma
Given a polynomial 
\begin_inset Formula $p_{n}(y)$
\end_inset

 of degree 
\begin_inset Formula $n$
\end_inset

, it can be shown that 
\begin_inset Formula \begin{equation}
r_{n}(y)=\frac{p_{n}(y)-p_{n}(1/z)}{1-yz}\label{eq:r_n definition}\end{equation}

\end_inset

 is again a polynomial in 
\begin_inset Formula $y$
\end_inset

, of degree 
\begin_inset Formula $n-1$
\end_inset

, for any constant 
\begin_inset Formula $z$
\end_inset

, provided that 
\begin_inset Formula $z\ne0$
\end_inset

.
 
\end_layout

\begin_layout Proof
This may be easily proved, term by term, by noting that 
\begin_inset Formula $(x^{n}-a^{n})/(x-a)$
\end_inset

, with 
\begin_inset Formula $a=1/z$
\end_inset

, has the desired properties.
 
\end_layout

\begin_layout Standard
An explicit expression for 
\begin_inset Formula $r_{n}(y)$
\end_inset

 is needed.
 Write the polynomial 
\begin_inset Formula $p_{n}(y)$
\end_inset

 as 
\begin_inset Formula \begin{equation}
p_{n}(y)=\sum_{k=0}^{n}b_{k}y^{k}\label{eq:basic poly in b_k}\end{equation}

\end_inset

 while, for 
\begin_inset Formula $r_{n}$
\end_inset

, assume only a general series: 
\begin_inset Formula \begin{equation}
r_{n}(y)=\sum_{k=0}^{\infty}c_{k}y^{k}\label{eq:r_n series}\end{equation}

\end_inset

Setting 
\begin_inset Formula $y=0$
\end_inset

, one immediately obtains 
\begin_inset Formula $c_{0}=b_{0}-p_{n}(1/z)$
\end_inset

.
 Higher coefficients are obtained by equating derivatives: 
\begin_inset Formula \[
r_{n}^{(k)}(y)=\frac{1}{1-yz}\left[p_{n}^{(k)}(y)+kzr_{n}^{(k-1)}(y)\right]\]

\end_inset

 where 
\begin_inset Formula $r_{n}^{(k)}(y)$
\end_inset

 is the 
\begin_inset Formula $k$
\end_inset

'th derivative of 
\begin_inset Formula $r_{n}$
\end_inset

 with respect to 
\begin_inset Formula $y$
\end_inset

.
 Setting 
\begin_inset Formula $y=0$
\end_inset

 in the above, one obtains the recurrence relation 
\begin_inset Formula $c_{k}=b_{k}+zc_{k-1}$
\end_inset

 which is trivially solvable as 
\begin_inset Formula \begin{equation}
c_{k}=z^{k}\left[-p_{n}\left(\frac{1}{z}\right)+\sum_{j=0}^{k}\frac{b_{j}}{z^{j}}\right]\label{eq:c_k coefficients}\end{equation}

\end_inset

From this, it is easily seen that 
\begin_inset Formula $c_{n}=0$
\end_inset

 and more precisely 
\begin_inset Formula $c_{n+m}=0$
\end_inset

 for all 
\begin_inset Formula $m\ge0$
\end_inset

.
 This confirms the claim that 
\begin_inset Formula $r_{n}(y)$
\end_inset

 is a polynomial of degree 
\begin_inset Formula $n-1$
\end_inset

 in 
\begin_inset Formula $y$
\end_inset

.
 
\end_layout

\begin_layout Standard
To prove equation (
\begin_inset LatexCommand ref
reference "eq:accelerated sum"

\end_inset

), one notes simply that (
\begin_inset LatexCommand ref
reference "eq:r_n definition"

\end_inset

) is the integrand to (
\begin_inset LatexCommand ref
reference "eq:S_n definition"

\end_inset

).
 Then, substituting (
\begin_inset LatexCommand ref
reference "eq:r_n series"

\end_inset

) for the integrand, keeping in mind that this last series terminates at
 
\begin_inset Formula $n-1$
\end_inset

, one finally arrives at (
\begin_inset LatexCommand ref
reference "eq:accelerated sum"

\end_inset

).
\end_layout

\begin_layout Section
The Polylogarithm
\end_layout

\begin_layout Standard
The development of the algorithm requires the following integral representation
 for the polylogarithm:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\mbox{Li}_{s}\left(z\right)=\frac{z}{\Gamma(s)}\int_{0}^{1}\frac{\left|\log y\right|^{s-1}}{1-yz}\, dy\label{eq:polylog integral}\end{equation}

\end_inset

This is readily obtained by using the integral representation for 
\begin_inset Formula $\Gamma(s)$
\end_inset

 to replace 
\begin_inset Formula $n^{-s}$
\end_inset

 in the series representation (
\begin_inset LatexCommand ref
reference "eq:polylog definition"

\end_inset

) for 
\begin_inset Formula $\mbox{Li}_{s}\left(z\right)$
\end_inset

, and then exchanging the order of summation and integration.
 A comprehensive development of this integral representation is given by
 Costin and Garoufalidis 
\begin_inset LatexCommand cite
after "Thm. 1"
key "Cos07"

\end_inset

.
 
\begin_inset Note Note
status collapsed

\begin_layout Standard
Proof was:
\end_layout

\begin_layout Standard
This identity is easily obtained by inserting the integral representation
 of the Gamma function:
\begin_inset Formula \begin{eqnarray*}
\mbox{Li}_{s}(z) & = & \frac{1}{\Gamma(s)}\,\sum_{n=1}^{\infty}\frac{z^{n}}{n^{s}}\int_{0}^{\infty}e^{-u}u^{s-1}du\\
 & = & \frac{1}{\Gamma(s)}\,\sum_{n=1}^{\infty}z^{n}\int_{0}^{\infty}e^{-nt}t^{s-1}dt\\
 & = & \frac{1}{\Gamma(s)}\,\int_{0}^{\infty}t^{s-1}\sum_{n=1}^{\infty}\left(ze^{-t}\right)^{n}\, dt\\
 & = & \frac{1}{\Gamma(s)}\,\int_{0}^{\infty}t^{s-1}\left[\frac{ze^{-t}}{1-ze^{-t}}\right]\, dt\end{eqnarray*}

\end_inset

 and then finally substituting 
\begin_inset Formula $t=-\log y$
\end_inset

 in the last integral.
 Although this derivation casually interchanges the order of integration
 and summation, one may appeal to general arguments about analytic continuation
 to argue that the final result is generally valid, provided one is careful
 to navigate about the branch point at 
\begin_inset Formula $z=1$
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This integral representation is precisely of the form of the quadrature
 (
\begin_inset LatexCommand ref
reference "eq:S quadrature"

\end_inset

).
 Following the development above, one has 
\begin_inset Formula \begin{eqnarray}
\varepsilon(s,z) & = & \frac{1}{f(1/z)}\,\frac{z}{\Gamma(s)}\,\int_{0}^{1}\,\frac{f(y)\left|\log y\right|^{s-1}}{1-yz}\, dy\nonumber \\
 & = & \mbox{Li}_{s}\left(z\right)+\frac{1}{f(1/z)}\,\frac{z}{\Gamma(s)}\,\int_{0}^{1}\,\frac{f(y)-f(1/z)}{1-yz}\,\left|\log y\right|^{s-1}dy\label{eq:Borwein trick}\end{eqnarray}

\end_inset

Replacing 
\begin_inset Formula $f(y)$
\end_inset

 with a polynomial 
\begin_inset Formula $p_{n}(y)$
\end_inset

, and making use of the explicit form (
\begin_inset LatexCommand ref
reference "eq:c_k coefficients"

\end_inset

), one obtains 
\begin_inset Formula \begin{equation}
\varepsilon_{n}(s,z)=\mbox{Li}_{s}\left(z\right)+\frac{z}{p_{n}(1/z)}\sum_{k=0}^{n-1}\frac{c_{k}}{(k+1)^{s}}\label{eq:Polylog general estimate}\end{equation}

\end_inset

 Thus, to obtain a good approximation for 
\begin_inset Formula $\mbox{Li}_{s}\left(z\right)$
\end_inset

, one needs to find a polynomial sequence such that 
\begin_inset Formula $\varepsilon_{n}$
\end_inset

 goes to zero as 
\begin_inset Formula $n\to\infty$
\end_inset

 for the domain 
\begin_inset Formula $(s,z)$
\end_inset

 of interest.
 That is, one seeks to make 
\begin_inset Formula \begin{equation}
\varepsilon_{n}(s,z)=\frac{1}{p_{n}(1/z)}\,\frac{z}{\Gamma(s)}\,\int_{0}^{1}\,\frac{p_{n}(y)\left|\log y\right|^{s-1}}{1-yz}\, dy\label{eq:epsilon integral}\end{equation}

\end_inset

as small as possible.
 Many different polynomial sequences can be contemplated.
 They need to have two properties: they should minimize the integrand, while
 also maximizing the value of 
\begin_inset Formula $\left|p_{n}(1/z)\right|$
\end_inset

.
 There is some advantage to keeping these simple, so that the 
\begin_inset Formula $c_{k}$
\end_inset

are easily computed.
 One possible sequence, based on the Bernoulli process or Gaussian distribution,
 is explored in the next section.
 
\end_layout

\begin_layout Section
The Gaussian Distribution 
\end_layout

\begin_layout Standard
In order to suppress the logarithmic branch point at 
\begin_inset Formula $y=0$
\end_inset

 in the integrand of (
\begin_inset LatexCommand ref
reference "eq:epsilon integral"

\end_inset

), one wishes the small 
\begin_inset Formula $y$
\end_inset

 behavior of 
\begin_inset Formula $p_{n}(y)$
\end_inset

 to be 
\begin_inset Formula $p_{n}(y)\sim y^{a}$
\end_inset

 for 
\begin_inset Formula $a>\Re s-1$
\end_inset

.
 In this section, the sequence 
\begin_inset Formula $p_{2n}(y)=y^{n}(1-y)^{n}$
\end_inset

 is considered.
 As is well known from probability theory, where 
\begin_inset Formula $y$
\end_inset

 can be interpreted as the probability of flipping '
\emph on
heads
\emph default
' on a fair coin toss (a '
\emph on
Bernoulli process
\emph default
'), this sequence goes over to the Gaussian distribution for large 
\begin_inset Formula $n$
\end_inset

.
 It is useful here because it becomes sharply peaked, subtending a diminishingly
 small area, thus minimizing the integrand.
 For large values of 
\begin_inset Formula $n$
\end_inset

, it is peaked at 
\begin_inset Formula $y=1/2$
\end_inset

, falling off rapidly away from that point, as it strongly approximates
 a Gaussian:
\begin_inset Formula \[
p_{2n}(y)=\frac{1}{4^{n}}e^{-4n(y-1/2)^{2}}\left[1+2\left(y-\frac{1}{2}\right)^{2}+\mathcal{O}\left(\left(y-\frac{1}{2}\right)^{4}\right)\right]\]

\end_inset

Here, the order-of notation 
\begin_inset Formula $\mathcal{O}$
\end_inset

 simply signifies the order of the corrections as one moves away from the
 peak at 
\begin_inset Formula $y=1/2$
\end_inset

.
 From basic probability theory, it is known that this approximation gets
 increasingly good as 
\begin_inset Formula $n$
\end_inset

 increases.
\end_layout

\begin_layout Standard
Using this in the integral (
\begin_inset LatexCommand ref
reference "eq:epsilon integral"

\end_inset

), and assuming that the real part of 
\begin_inset Formula $z$
\end_inset

 is not positive, it is not hard to deduce the very crude estimate
\begin_inset Formula \[
\left|\varepsilon_{n}(s,z)\right|\sim\left|\left(\frac{z^{2}}{4(z-1)}\right)^{n}\frac{z}{\Gamma(s)}\right|\]

\end_inset

 which confirms that 
\begin_inset Formula $\varepsilon_{n}(s,z)$
\end_inset

 does indeed get suitably small for a certain region in the complex 
\begin_inset Formula $z$
\end_inset

-plane.
 However, in order for equation (
\begin_inset LatexCommand ref
reference "eq:Polylog general estimate"

\end_inset

) to be useful computationally, an upper bound on the value of 
\begin_inset Formula $\varepsilon_{n}$
\end_inset

 needs to be given, as a function of 
\begin_inset Formula $z$
\end_inset

 and 
\begin_inset Formula $n$
\end_inset

.
 This bound is derived in the next section.
 
\end_layout

\begin_layout Standard
The polynomial coefficients of equation (
\begin_inset LatexCommand ref
reference "eq:basic poly in b_k"

\end_inset

) are easily obtained, and are 
\begin_inset Formula \begin{eqnarray*}
b_{0} & = & b_{1}=\cdots=b_{n-1}=0\\
b_{n+k} & = & \left(-1\right)^{k}\left(\begin{array}{c}
n\\
k\end{array}\right)\quad\mbox{ for }0\le k\le n\end{eqnarray*}

\end_inset

 This leads to 
\begin_inset Formula \[
\mbox{Li}_{s}(z)=-\frac{z^{2n+1}}{\left(z-1\right)^{n}}\sum_{k=0}^{2n-1}\frac{c_{k}}{\left(k+1\right)^{s}}+\varepsilon(s,z)\]

\end_inset

where the 
\begin_inset Formula $c_{k}$
\end_inset

, the same as in equation (
\begin_inset LatexCommand ref
reference "eq:c_k coefficients"

\end_inset

), are given by 
\begin_inset Formula \[
c_{k}=z^{k}\left[-\left(\frac{z-1}{z^{2}}\right)^{n}+\frac{1}{z^{n}}\sum_{j=0}^{k-n}\left(-1\right)^{j}\left(\begin{array}{c}
n\\
j\end{array}\right)\frac{1}{z^{j}}\right]\]

\end_inset

 The summation above is to be understood to be zero when 
\begin_inset Formula $k<n$
\end_inset

.
 The above summations can be re-organized into the more suggestive form
 
\begin_inset Formula \begin{equation}
\mbox{Li}_{s}(z)=\sum_{k=1}^{n}\frac{z^{k}}{k^{s}}\;+\frac{1}{\left(1-z\right)^{n}}\;\sum_{k=n+1}^{2n}\frac{z^{k}}{k^{s}}\;\sum_{j=0}^{2n-k}\left(-z\right)^{j}\left(\begin{array}{c}
n\\
j\end{array}\right)+\varepsilon_{n}(s,z)\label{eq:polylog specific estimate}\end{equation}

\end_inset

 The error term 
\begin_inset Formula $\varepsilon_{n}(s,z)$
\end_inset

 is negligible for only a very specific area of the complex 
\begin_inset Formula $z$
\end_inset

-plane.
 The region where 
\begin_inset Formula $\varepsilon_{n}$
\end_inset

 may be ignored as a small error is derived in the next section.
 Substituting 
\begin_inset Formula $z=-1$
\end_inset

 in the above formulas agrees with expressions previously given by Borwein
 
\begin_inset LatexCommand cite
key "Bor00-A"

\end_inset

.
 
\end_layout

\begin_layout Standard
The above formula has been implemented using the Gnu Multiple Precision
 arithmetic library (GMP)
\begin_inset LatexCommand cite
key "GMP"

\end_inset

, and has been numerically validated for correctness in several different
 ways.
 The source code, under the license terms of the LGPL, may be obtained by
 contacting the author.
 
\end_layout

\begin_layout Section
Bound on the Error Term
\end_layout

\begin_layout Standard
In order for equation (
\begin_inset LatexCommand ref
reference "eq:polylog specific estimate"

\end_inset

) to be useful computationally, an upper bound on the value of 
\begin_inset Formula $\left|\varepsilon_{n}\right|$
\end_inset

 as a function of 
\begin_inset Formula $n$
\end_inset

 needs to be given.
 To compute the polylogarithm to some desired precision, one infers a suitable
 value of 
\begin_inset Formula $n$
\end_inset

 based on this bound.
 However, to achieve this desired precision, one must not only choose 
\begin_inset Formula $n$
\end_inset

 large enough, but one must also maintain a somewhat larger number of digits
 in the intermediate terms, as the appearance of the binomial coefficient
 in the equation (
\begin_inset LatexCommand ref
reference "eq:polylog specific estimate"

\end_inset

) implies that intermediate terms can become quite large, even while mostly
 canceling.
 This section derives an upper bound on the size of 
\begin_inset Formula $\varepsilon_{n}$
\end_inset

, for the Gaussian distribution, and briefly discusses the issue of the
 required precision in intermediate terms.
 
\end_layout

\begin_layout Standard
The general behavior of the integrand appearing in equation (
\begin_inset LatexCommand ref
reference "eq:epsilon integral"

\end_inset

) depends on the whether 
\begin_inset Formula $\Re s\ge1$
\end_inset

 or not; estimates are presented for these two cases.
 Writing 
\begin_inset Formula $s=\sigma+i\tau$
\end_inset

 for real 
\begin_inset Formula $\sigma$
\end_inset

 and 
\begin_inset Formula $\tau$
\end_inset

, and assuming 
\begin_inset Formula $\sigma\ge1$
\end_inset

 and choosing 
\begin_inset Formula $n$
\end_inset

 so that 
\begin_inset Formula $\sigma\le n$
\end_inset

, one has
\begin_inset Formula \begin{eqnarray*}
\left|p_{2n}(y)\left|\log y\right|^{s-1}\right| & \le & p_{2n}(y)\left|\log y\right|^{\sigma-1}\\
 & = & \left|y(1-y)\log y\right|^{\sigma-1}\left(y(1-y)\right)^{n-\sigma+1}\end{eqnarray*}

\end_inset

 Each part of the right hand side is bounded by a Gaussian, and since the
 product of Gaussians is a Gaussian, so is the entire expression.
 From the Stirling approximation, one has the well-known identity 
\begin_inset Formula \[
\left|y(1-y)\right|^{a}\le\frac{1}{4^{a}}\exp-4a\left(y-\frac{1}{2}\right)^{2}\]

\end_inset

 The other part is also bounded by a Gaussian 
\begin_inset Formula \[
\left|y(1-y)\log y\right|^{a}\le\left|y_{0}\left(1-y_{0}\right)\log y_{0}\right|^{a}\exp\left(-\frac{a\left(y-y_{0}\right)^{2}}{2y_{0}\left(1-2y_{0}\right)}\right)\]

\end_inset

which is centered on the maximum of 
\begin_inset Formula $\left|y_{0}\left(1-y_{0}\right)\log y_{0}\right|$
\end_inset

, that is, at 
\begin_inset Formula $y_{0}=0.23561058253\cdots$
\end_inset

, where 
\begin_inset Formula $y_{0}$
\end_inset

 is the solution to 
\begin_inset Formula \[
0=\frac{d}{dy}\; y(1-y)\left|\log y\right|\]

\end_inset

 Curiously, the numerical value of the factor in the Gaussian is 
\begin_inset Formula $1/2y_{0}(1-2y_{0})=4.013295587\cdots$
\end_inset


\end_layout

\begin_layout Standard
To evaluate the integral in (
\begin_inset LatexCommand ref
reference "eq:epsilon integral"

\end_inset

), one also needs a bound on the denominator.
 This is furnished by 
\begin_inset Formula \[
\left|\frac{1}{1-yz}\right|\le C(z)\,\equiv\begin{cases}
1 & \mbox{ if }\Re z\le0\\
\frac{1}{\left|1-z\right|} & \mbox{ if }0<\Re z\;\mbox{ and }\left|z\right|<1\\
\left|\frac{z}{\Im z}\right| & \mbox{ if }0<\Re z\;\mbox{ and }\left|z\right|>1\end{cases}\]

\end_inset

Thus, the integrand is bounded by a Gaussian.
 Multiplying the two Gaussians, completing the square, and evaluating the
 resulting integral is a bit tedious.
 The result is that 
\begin_inset Formula \[
\left|\int_{0}^{1}\,\frac{p_{2n}(y)\left|\log y\right|^{s-1}}{1-yz}\, dy\right|\le C(z)\frac{\left|4y_{0}\left(1-y_{0}\right)\log y_{0}\right|^{\sigma-1}}{4^{n}}\, G(s)\]

\end_inset

The constant may be taken as 
\begin_inset Formula $\left|4y_{0}\left(1-y_{0}\right)\log y_{0}\right|=1.041381965\ldots$
\end_inset

.
 The factor 
\begin_inset Formula $G(s)$
\end_inset

 containing the completed square of the Gaussians is bounded by 
\begin_inset Formula \begin{eqnarray*}
G(s) & \le & \sqrt{\frac{\pi}{4n}}\exp-\left(1-2y_{0}\right)^{2}\left(\sigma-1\right)\frac{8y_{0}\left(1-2y_{0}\right)}{8y_{0}\left(1-2y_{0}\right)+\frac{\sigma-1}{n-\sigma+1}}\\
 & \le & \sqrt{\frac{\pi}{4n}}\exp-\left(1-2y_{0}\right)^{2}\frac{\sigma-1}{\sigma}\\
 & \le & 1\end{eqnarray*}

\end_inset

when 
\begin_inset Formula $1\le\sigma$
\end_inset

.
 Useful for estimation is that 
\begin_inset Formula $8y_{0}(1-2y_{0})=0.996687115\ldots$
\end_inset

.
 Combining these results, one obtains 
\begin_inset Formula \begin{equation}
\left|\varepsilon(s,z)\right|\le\frac{1}{4^{n}}\left|\frac{z^{2}}{z-1}\right|^{n}\left|\frac{z}{\Gamma(s)}\right|C(z)G(s)\left(1.0414\ldots\right)^{\sigma-1}\label{eq:error-bound-positive}\end{equation}

\end_inset

 for the case where 
\begin_inset Formula $1\le\sigma$
\end_inset

 and 
\begin_inset Formula $n$
\end_inset

 chosen so that 
\begin_inset Formula $\sigma\le n$
\end_inset

.
\end_layout

\begin_layout Standard
The case where 
\begin_inset Formula $\sigma\le1$
\end_inset

 may be evaluated as follows.
 One writes 
\begin_inset Formula \begin{eqnarray*}
\left|p_{2n}(y)\left|\log y\right|^{s-1}\right| & \le & p_{2n}(y)\left|\log y\right|^{\sigma-1}\\
 & = & \left|\frac{1-y}{\log y}\right|^{1-\sigma}y^{n}(1-y)^{n+\sigma-1}\\
 & \le & y^{n}(1-y)^{n+\sigma-1}\end{eqnarray*}

\end_inset

 The integrand may now be recognized as the Beta function, so that
\begin_inset Formula \[
\left|\int_{0}^{1}\,\frac{p_{2n}(y)\left|\log y\right|^{s-1}}{1-yz}\, dy\right|\le C(z)\frac{\Gamma(n+1)\Gamma(n+\sigma)}{\Gamma(2n+\sigma+1)}\]

\end_inset

In the region where 
\begin_inset Formula $\left|\sigma\right|\ll n$
\end_inset

, one may approximate 
\begin_inset Formula \[
\frac{\Gamma(n+1)\Gamma(n+\sigma)}{\Gamma(2n+\sigma+1)}\le\frac{2^{1-\sigma}}{4^{n}}\]

\end_inset

The above follows readily from the Stirling approximation 
\begin_inset Formula \[
\Gamma(x)\sim\sqrt{\frac{2\pi}{x}}\left(\frac{x}{e}\right)^{x}\]

\end_inset

which is the first term of a well-known asymptotic expansion 
\begin_inset LatexCommand cite
after "eqn 6.1.37"
key "A&S"

\end_inset

 for the Gamma function.
\end_layout

\begin_layout Standard
Combining the various pieces, one obtains a result remarkably similar to
 the previous one; namely, when 
\begin_inset Formula $\sigma\le1$
\end_inset

 but 
\begin_inset Formula $n$
\end_inset

 is such that 
\begin_inset Formula $\left|\sigma\right|\ll n$
\end_inset

, one has 
\begin_inset Formula \begin{equation}
\left|\varepsilon(s,z)\right|\le\frac{1}{4^{n}}\left|\frac{z^{2}}{z-1}\right|^{n}\left|\frac{z}{\Gamma(s)}\right|2^{1-\sigma}C(z)\label{eq:error-bound-negative}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
For evaluations on the critical line 
\begin_inset Formula $\sigma=1/2$
\end_inset

, one needs a good estimate for 
\begin_inset Formula $\left|\Gamma(s)\right|^{-1}$
\end_inset

, which can become quite large as the imaginary part of 
\begin_inset Formula $s$
\end_inset

 increases.
 A useful estimate for 
\begin_inset Formula $\left|\Gamma(s)\right|^{-1}$
\end_inset

 is given in 
\begin_inset LatexCommand cite
key "Bor00-A"

\end_inset

, for the case where 
\begin_inset Formula $\sigma\ge-m+1/2$
\end_inset

: 
\begin_inset Formula \begin{eqnarray*}
\frac{1}{\left|\Gamma(s)\right|} & = & \frac{1}{\left|\Gamma(\sigma)\right|}\sqrt{\prod_{k=0}^{\infty}\left(1+\frac{\tau^{2}}{\left(\sigma+k\right)^{2}}\right)}\\
 & \le & \frac{1}{\left|\Gamma(\sigma)\right|}\sqrt{\frac{\sinh\tau\pi}{\tau\pi}\,\prod_{k=0}^{m}\left(1+\frac{\tau^{2}}{\left(\frac{1}{2}+k\right)^{2}}\right)}\end{eqnarray*}

\end_inset

 The first equality is known from 
\begin_inset LatexCommand cite
after "eqn. 6.1.25"
key "A&S"

\end_inset

, while the inequality follows from the theory of elementary transcendental
 functions, and 
\begin_inset LatexCommand cite
after "eqn. 4.5.68"
key "A&S"

\end_inset

.
 
\end_layout

\begin_layout Standard
A remarkable side-effect of the estimation is that, for 
\begin_inset Formula $s$
\end_inset

 equal to negative integers, one has that 
\begin_inset Formula $\Gamma(s)$
\end_inset

 is infinite, thus implying that the error term is zero.
 This somewhat surprising result corresponds to the fact that 
\begin_inset Formula $\mbox{Li}_{-n}(z)$
\end_inset

 has an exact expression as a ratio of two polynomials, the denominator
 being of degree 
\begin_inset Formula $n+1$
\end_inset

.
 Indeed, setting 
\begin_inset Formula $s=0$
\end_inset

 and so 
\begin_inset Formula $n=1$
\end_inset

 into equation (
\begin_inset LatexCommand ref
reference "eq:polylog specific estimate"

\end_inset

) gives the exact result 
\begin_inset Formula \[
\mbox{Li}_{0}(z)=\frac{z}{1-z}\]

\end_inset

 while for 
\begin_inset Formula $s=-1$
\end_inset

, one must use 
\begin_inset Formula $n=2$
\end_inset

, to obtain the exact result
\begin_inset Formula \[
\mbox{Li}_{-1}(z)=\frac{z}{\left(1-z\right)^{2}}\]

\end_inset

 The generic form for the polylogarithm at the negative integers 
\begin_inset LatexCommand cite
key "Lew81"

\end_inset

 is 
\begin_inset Formula \[
\mbox{Li}_{-n}(z)=\left(-1\right)^{n}\,\sum_{k=0}^{n}\left(-1\right)^{k}\frac{k!}{\left(1-z\right)^{k+1}}\left\{ \begin{array}{c}
n+1\\
k+1\end{array}\right\} \]

\end_inset

 where 
\begin_inset Formula $\left\{ \begin{array}{c}
n\\
k\end{array}\right\} $
\end_inset

 denotes the Stirling numbers of the second kind, which are given by the
 
\begin_inset Formula $k$
\end_inset

'th forward difference of 
\begin_inset Formula $x^{n}$
\end_inset

 evaluated at 
\begin_inset Formula $x=0$
\end_inset

: 
\begin_inset Formula \[
\left\{ \begin{array}{c}
n\\
k\end{array}\right\} =\left.\frac{\triangle^{k}x^{n}}{k!}\right|_{x=0}=\frac{1}{k!}\sum_{j=0}^{k}(-1)^{k-j}\left(\begin{array}{c}
k\\
j\end{array}\right)j^{n}\]

\end_inset


\end_layout

\begin_layout Standard
In general, the formula (
\begin_inset LatexCommand ref
reference "eq:polylog specific estimate"

\end_inset

) seems to have the curious property of always evaluating to exactly the
 same rational function whenever 
\begin_inset Formula $s$
\end_inset

 is a non-positive integer, and 
\begin_inset Formula $-s<n$
\end_inset

.
 That is, for fixed non-positive integer 
\begin_inset Formula $s$
\end_inset

, the sum is independent of 
\begin_inset Formula $n$
\end_inset

, provided that 
\begin_inset Formula $n$
\end_inset

 is large enough.
 Thus, this polynomial approximation has the pleasing result of giving exact
 answers in the case when an exact polynomial answer is possible.
\end_layout

\begin_layout Standard
For the general case, one may conclude that the estimate (
\begin_inset LatexCommand ref
reference "eq:polylog specific estimate"

\end_inset

) can be effectively applied whenever
\begin_inset Formula \[
\left|\frac{z^{2}}{z-1}\right|<4\]

\end_inset

To obtain a value of the polylogarithm to within some given numerical precision,
 one must invert the formulas (
\begin_inset LatexCommand ref
reference "eq:error-bound-positive"

\end_inset

) or (
\begin_inset LatexCommand ref
reference "eq:error-bound-negative"

\end_inset

), solving for the value of 
\begin_inset Formula $n$
\end_inset

 which is to be used in equation (
\begin_inset LatexCommand ref
reference "eq:polylog specific estimate"

\end_inset

).
 To obtain a fixed number of digits of precision, one must carry out intermediat
e calculations with at least that many digits of precision.
 In fact, one must have more.
 The appearance of the binomial coefficient in equation (
\begin_inset LatexCommand ref
reference "eq:polylog specific estimate"

\end_inset

) is the problem.
 Since 
\begin_inset Formula $2^{n}>\left(\begin{array}{c}
n\\
j\end{array}\right)$
\end_inset

, one concludes that 
\begin_inset Formula $n$
\end_inset

 additional binary bits of precision are needed with which to carry out
 the calculations.
 As a result, it becomes difficult to implement the algorithm robustly using
 only double-precision arithmetic.
 For values of 
\begin_inset Formula $z$
\end_inset

 near 
\begin_inset Formula $z=-1$
\end_inset

, the algorithm is well-enough behaved; however, round-off errors significantly
 disturb the calculations as 
\begin_inset Formula $z$
\end_inset

 approaches 
\begin_inset Formula $+1$
\end_inset

.
 This trouble with precision can be at least partly alleviated by making
 use of the duplication formula, as discussed in the next section.
\end_layout

\begin_layout Section
Euler-Maclaurin Summation
\end_layout

\begin_layout Standard
An alternative algorithm for computing the Hurwitz zeta may be based upon
 the Euler-Maclaurin series.
 This algorithm proves to be quite rapid and efficient
\begin_inset LatexCommand cite
key "Pav07"

\end_inset

.
 A detailed discussion of the application of the Euler-Maclaurin formula
 to the Riemann zeta function is given by Weniger and Kirtman 
\begin_inset LatexCommand cite
after "section 2"
key "Wen03"

\end_inset

.
 In particular, the methods discussed by Weniger in 
\begin_inset LatexCommand cite
key "Wen07"

\end_inset

 should be directly extendable to the Hurwitz zeta function.
 This section provides only a basic sketch.
\end_layout

\begin_layout Standard
The Euler-Maclaurin series may be written as 
\begin_inset LatexCommand cite
after "eqn. 23.12.30"
key "A&S"

\end_inset


\begin_inset Formula \begin{eqnarray}
\sum_{k=0}^{\infty}f(k) & = & \sum_{k=0}^{N-1}f(k)+\frac{f(N)}{2}+\int_{N}^{\infty}f(x)dx\nonumber \\
 &  & -\sum_{k=1}^{p}\left.\frac{B_{2k}}{(2k)!}\,\frac{d^{2k+1}}{dx^{2k+1}}f(x)\right|_{x=N}+R\label{eq:Euler-Maclaurin}\end{eqnarray}

\end_inset

This formula is simply applied to the function 
\begin_inset Formula $f(x)=(x+q)^{-s}$
\end_inset

 to obtain the Hurwitz zeta.
 The derivative is particularly easy to evaluate: 
\begin_inset Formula \[
\frac{d^{2k+1}}{dx^{2k+1}}\,\frac{1}{(x+q)^{s}}=-\frac{s(s+1)(s+2)\cdots(s+2k)}{(x+q)^{s+2k+1}}\]

\end_inset

 and the integral is trivial:
\begin_inset Formula \[
\int_{N}^{\infty}\frac{1}{(x+q)^{s}}\, dx=\frac{1}{(s-1)}\;\frac{1}{(N+q)^{s-1}}\]

\end_inset

The error made by this expansion is embodied in the term 
\begin_inset Formula $R$
\end_inset

.
 It is directly given by 
\begin_inset LatexCommand cite
after "eqn. 23.1.32"
key "A&S"

\end_inset

 
\begin_inset Formula \[
R=\frac{2}{(2\pi)^{2p}}\int_{N}^{\infty}f^{(p+1)}(x)\frac{B_{p+1}\left(x-\left\lfloor x\right\rfloor \right)}{(p+1)!}dx\]

\end_inset

where the 
\begin_inset Formula $B_{k}(x)$
\end_inset

 are the Bernoulli polynomials 
\begin_inset LatexCommand cite
after "chap. 23.1"
key "A&S"

\end_inset

.
 These are defined by the generating function 
\begin_inset Formula \[
\frac{te^{xt}}{e^{t}-1}=\sum_{n=0}^{\infty}B_{n}(x)\frac{t^{n}}{n!}\]

\end_inset

The notation 
\begin_inset Formula $\left\lfloor x\right\rfloor $
\end_inset

 denotes the floor of 
\begin_inset Formula $x,$
\end_inset

 that is, the largest integer less than 
\begin_inset Formula $x$
\end_inset

.
 
\end_layout

\begin_layout Standard
There are various formulas in the literature which may be readily applied
 to bound the size of this term
\begin_inset LatexCommand cite
key "A&S"

\end_inset

.
 Thus, for example, one has 
\begin_inset Formula \[
R\le\frac{2}{(2\pi)^{2p}}\frac{\left|s(s+1)\cdots(s+2p)\right|}{\Re s+2p}\,\frac{1}{(N+q)^{\Re s+2p}}\]

\end_inset

 Thus, the evaluation of the sum (
\begin_inset LatexCommand ref
reference "eq:Euler-Maclaurin"

\end_inset

) merely requires a suitable choice of 
\begin_inset Formula $N$
\end_inset

 and 
\begin_inset Formula $p$
\end_inset

 to be used.
 As it happens, the situation is even simpler than this.
 The sum (
\begin_inset LatexCommand ref
reference "eq:Euler-Maclaurin"

\end_inset

) is an asymptotic series, and it is well-known that the best approximation
 for an asymptotic series occurs when one stops the summation at the smallest
 term in the series.
 Thus, it is sufficient to choose a value of 
\begin_inset Formula $N$
\end_inset

, while 
\begin_inset Formula $p$
\end_inset

 is found dynamically as the algorithm runs.
 
\end_layout

\begin_layout Standard
There remains the question of what value of 
\begin_inset Formula $N$
\end_inset

 to use.
 This remains an open problem, which will not be explored here.
 However, it seems that an adequate heuristic for most common cases is to
 choose 
\begin_inset Formula $N=D/2+10$
\end_inset

 where 
\begin_inset Formula $D$
\end_inset

 is the desired number of decimal digits of precision.
 The performance of this algorithm is compared to that of the Borwein algorithm
 in the next section.
 
\begin_inset Note Note
status collapsed

\begin_layout Standard
XXX to do: characterize the region of convergence for this algo.
\end_layout

\end_inset


\end_layout

\begin_layout Section
Performance
\end_layout

\begin_layout Standard
The performance of both Euler-Maclaurin summation and the Borwein algorithm
 appears to be very good.
 As a general rule, both have better performance than the direct summation
 formula (
\begin_inset LatexCommand ref
reference "eq:polylog definition"

\end_inset

), although this depends on whether the polylogarithm or the Hurwitz zeta
 is the desired quantity.
 
\end_layout

\begin_layout Standard
A proper performance analysis of an algorithm would provide a detailed accountin
g of the number of multiplications required to implement the algorithm.
 This would allow the comparison of different algorithms for optimality.
 Such a detailed accounting is beyond the scope of this paper.
 In part this is because the algorithms require the exponentiation of complex
 numbers, the calculation of Bernoulli numbers and binomial coefficients,
 and, if Jonqui√®re's identity (equation (
\begin_inset LatexCommand ref
reference "eq:poly-hur relation"

\end_inset

)) is used, the evaluation of 
\begin_inset Formula $\Gamma(s)$
\end_inset

 for complex 
\begin_inset Formula $s$
\end_inset

.
 The performance evaluation of each of these steps presents its own difficulties.
 In addition, various sub-expressions can be cached, if it is known that
 either 
\begin_inset Formula $s$
\end_inset

 or 
\begin_inset Formula $q$
\end_inset

 or 
\begin_inset Formula $z$
\end_inset

 will be held fixed from one evaluation to the next.
 Additional performance improvements can be obtained if any of the parameters
 are real-valued instead of being complex-valued.
 Thus, this section will present an experimental study of the performance,
 based on a reasonably well-developed implementation of the various quantities,
 anchored upon the basic functions provided by GMP.
 
\end_layout

\begin_layout Standard
These experimental results are shown in figures (
\begin_inset LatexCommand ref
reference "cap:Polylogarithm-cold-cache"

\end_inset

) and (
\begin_inset LatexCommand ref
reference "cap:Polylogarithm-warm-cache"

\end_inset

) for the polylogarithm, and (
\begin_inset LatexCommand ref
reference "cap:Hurwitz-zeta-cold"

\end_inset

) and (
\begin_inset LatexCommand ref
reference "cap:Hurwitz-zeta-warm"

\end_inset

), for the Hurwitz zeta function, which compare the performance of actual
 implementations.
 
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Standard
graphs created with misc/bignum/poly-perf.gplot, raw data generated by poly-perf.c
 in same directory.
 Raw data in the poly-perf.dat file, or the hurwitz-perf.dat file
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Standard
\begin_inset Caption

\begin_layout Standard
\begin_inset LatexCommand label
name "cap:Polylogarithm-cold-cache"

\end_inset

Polylogarithm cold cache performance
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename poly-perf-cold-cache.ps
	width 100text%

\end_inset


\end_layout

\begin_layout Standard
This figure shows the time, in seconds, needed to compute the polylogarithm
 to the indicated number of decimal places of precision.
 The values chosen for evaluation are 
\begin_inset Formula $s=0.5+i14.134725$
\end_inset

, which is very near to the first of the non-trivial Riemann zeroes, and
 
\begin_inset Formula $z=0.4+i0.3$
\end_inset

, which is relatively near to the origin.
 For such a small value of 
\begin_inset Formula $z$
\end_inset

 (
\begin_inset Formula $\left|z\right|=0.5$
\end_inset

), one might hope that direct summation might compete favorably against
 the other two algorithms; and in particular against the Borwein algorithm,
 as the point is closer to the troublesome branch point at 
\begin_inset Formula $z=+1$
\end_inset

 than algorithmically optimal argument 
\begin_inset Formula $z=-1$
\end_inset

.
 Nevertheless, 
\begin_inset Formula $\left|z^{2}/(z-1)\right|\approx0.373$
\end_inset

 for this point, and the Borwein algorithm wins.
 The Euler-Maclaurin algorithm is relatively disadvantaged, as it needs
 to be evaluated twice, and a value for 
\begin_inset Formula $\Gamma(s)$
\end_inset

 must be computed as well.
 
\end_layout

\begin_layout Standard
The primary contribution to the calculations is the evaluation of 
\begin_inset Formula $n^{-s}$
\end_inset

 in the summations.
 If these are pre-computed, the Borwein algorithm still wins, as shown in
 the next figure.
 All calculations were performed on a contemporary desktop computer, using
 the GMP library; the algorithms were implemented in the C programming language.
 Note that the actual performance depends on the underlying implementation
 of log, exp, sin, atan, sqrt, gamma and the like; the actual implementation
 used here is fairly naive and untuned.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Standard
\begin_inset Caption

\begin_layout Standard
\begin_inset LatexCommand label
name "cap:Polylogarithm-warm-cache"

\end_inset

Polylogarithm warm cache
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename poly-perf-warm-cache.ps
	width 100text%

\end_inset


\end_layout

\begin_layout Standard
This graph compares the compute times for the Borwein algorithm, the direct
 summation of the polylogarithm, and the Euler-Maclaurin series, for a 
\begin_inset Quotes eld
\end_inset

warm cache
\begin_inset Quotes erd
\end_inset

.
 That is, an array of values of 
\begin_inset Formula $n^{-s}$
\end_inset

 were pre-computed, prior to beginning the timing measurements.
 These pre-computed values were used in the Borwein and direct sums.
 For the Euler-Maclaurin sum, the value of 
\begin_inset Formula $\Gamma(s)/(2\pi i)^{s}$
\end_inset

, needed for Jonqui√®re's identity, is pre-computed and cached as well.
 Despite the use of such cached, pre-computed values, the Borwein algorithm
 still wins over direct summation, and appears to be tied with the Euler-Maclaur
in sum.
 This graph uses the same 
\begin_inset Formula $s$
\end_inset

 and 
\begin_inset Formula $z$
\end_inset

 values as in the previous graph.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Standard
\begin_inset Caption

\begin_layout Standard
\begin_inset LatexCommand label
name "cap:Hurwitz-zeta-cold"

\end_inset

Hurwitz zeta cold cache performance
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename hurwitz-perf-cold.ps
	width 100text%

\end_inset


\end_layout

\begin_layout Standard
This figure compares the performance of the Borwein algorithm, the evaluation
 of the Taylor expansion, and Euler-Maclaurin summation, for the Hurwitz
 zeta.
 The vales computed are for 
\begin_inset Formula $s=0.5+i14.13$
\end_inset

 and 
\begin_inset Formula $q=0.2$
\end_inset

.
 For such a small value of 
\begin_inset Formula $q$
\end_inset

, one might have hoped that the Taylor expansion might converge quickly.
 This appears to not be the case, as the binomial coefficients can grow
 to be quite large, and thus force many terms to be summed.
 
\end_layout

\begin_layout Standard
The figure is for a 
\begin_inset Quotes eld
\end_inset

cold cache
\begin_inset Quotes erd
\end_inset

, assuming that no constants have been pre-computed.
 The lines are not parallel, with the Taylor expansion getting progressively
 worse.
 Both the Borwein and the Euler-Maclaurin algorithms are orders of magnitude
 faster than the Taylor's series for high precisions; the Euler-Maclaurin
 algorithm appears to be an easy winner for all precisions.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Standard
\begin_inset Caption

\begin_layout Standard
\begin_inset LatexCommand label
name "cap:Hurwitz-zeta-warm"

\end_inset

Hurwitz zeta warm cache performance
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename hurwitz-perf-warm.ps
	width 100text%

\end_inset


\end_layout

\begin_layout Standard
This figure compares the evaluation times for Euler-Maclaurin summation,
 the Borwein algorithm, and the Hurwitz zeta Taylor's expansion, for the
 
\begin_inset Quotes eld
\end_inset

warm cache
\begin_inset Quotes erd
\end_inset

 scenario.
 In this case, it is recognized that if 
\begin_inset Formula $s$
\end_inset

 is assumed to be held fixed, then the values of 
\begin_inset Formula $n^{-s}$
\end_inset

 appearing in the Borwein algorithm may be pre-computed.
 Similarly, the values of 
\begin_inset Formula $\zeta(s+n)$
\end_inset

 and the binomial coefficients 
\begin_inset Formula $\left(\begin{array}{c}
s+n-1\\
n\end{array}\right)$
\end_inset

 appearing in the Taylor's series and the Euler-Maclaurin formula may be
 pre-computed.
\end_layout

\begin_layout Standard
For this value of 
\begin_inset Formula $q$
\end_inset

, the Borwein algorithm requires four evaluations of the polylogarithm;
 values of 
\begin_inset Formula $q$
\end_inset

 closer to 0.5 would require only two.
 The Taylor's series evaluation appears to be about eight times faster than
 these four evaluations (or four times faster than the minimum of two evaluation
s).
\end_layout

\begin_layout Standard
Note that the time axis here is in milliseconds, not seconds.
 Comparing to the previous graph, it is clear that performing the pre-computatio
ns can be terribly expensive.
 The first evaluation of the function can take 100 or 1000 times longer
 than subsequent evaluations at the same value of 
\begin_inset Formula $s$
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The first figure shows 
\begin_inset Quotes eld
\end_inset

cold cache
\begin_inset Quotes erd
\end_inset

 performance, measured in seconds, as compared to the number of desired
 decimal places of precision.
 The figure is termed 
\begin_inset Quotes eld
\end_inset

cold cache
\begin_inset Quotes erd
\end_inset

, in recognition of the fact that some constants may be pre-computed.
 For example, if 
\begin_inset Formula $s$
\end_inset

 is held fixed, while 
\begin_inset Formula $z$
\end_inset

 is varied, then the values of 
\begin_inset Formula $n^{-s}$
\end_inset

 appearing in both the direct sum and the Borwein algorithm may be computed
 once, and then re-used for subsequent calculations.
 As the figures indicate, computing 
\begin_inset Formula $n^{-s}$
\end_inset

 can be very expensive for general complex-valued 
\begin_inset Formula $s$
\end_inset

, and so the caching strategy offers a big gain when 
\begin_inset Formula $s$
\end_inset

 is held constant.
 
\end_layout

\begin_layout Standard
As the 
\begin_inset Quotes eld
\end_inset

cold cache
\begin_inset Quotes erd
\end_inset

 figure demonstrates, the Borwein algorithm is faster than direct summation.
 The problem with direct summation is that it requires more values of 
\begin_inset Formula $n^{-s}$
\end_inset

 to be computed to achieve comparable precision.
 
\end_layout

\begin_layout Standard
As the 
\begin_inset Quotes eld
\end_inset

warm cache
\begin_inset Quotes erd
\end_inset

 figure shows, the Borwein algorithm will still win against direct summation,
 even when the values of the 
\begin_inset Formula $n^{-s}$
\end_inset

 are pre-computed.
 Even when these are pre-computed, and can be pulled from the cache, direct
 summation still requires more operations.
\end_layout

\begin_layout Standard
A different but equally dramatic set of results obtain, when one compares
 the performance of the Borwein algorithm applied to the Hurwitz zeta function,
 as compared to the use of the Taylor's expansion (
\begin_inset LatexCommand ref
reference "eq:Hurwitz taylor"

\end_inset

) for the Hurwitz zeta.
 In this case, as the figures show, the Taylor's series outperforms the
 Borwein algorithm by a constant factor of three, when both algorithms use
 pre-computed constants.
 However, the cost of pre-computing these constants skyrockets for the Taylor's
 series, making it unattractive as the number of required decimal places
 increases.
\end_layout

\begin_layout Standard
Although the Borwein algorithm seems to show a slight advantage over the
 Euler-Maclaurin series when it is used to evaluate the polylogarithm, much
 of that advantage disappears when evaluating near the branch point 
\begin_inset Formula $z=1$
\end_inset

.
 The Borwein algorithm breaks down near the branch point, and requires the
 (possibly recursive) application of the duplication formula (given in the
 next section) to obtains points sufficiently far away from 
\begin_inset Formula $z=1$
\end_inset

.
 By contrast, the Euler-Maclaurin series seems to happily converge in this
 area, and so no extra steps are required.
 
\end_layout

\begin_layout Standard
In conclusion, it appears that the Euler-Maclaurin formula provides the
 best algorithm for evaluating the Hurwitz zeta, and can often tie and sometimes
 outperform the Borwein algorithm for the polylogarithm.
\end_layout

\begin_layout Section
Duplication formula
\end_layout

\begin_layout Standard
The region of applicability of the algorithm may be extended by making use
 of the duplication formula for the polylogarithm or periodic zeta.
 The duplication formula, or more generally, the multiplication theorem,
 is an extension of the well-known Legendre duplication formula for the
 Gamma function
\begin_inset LatexCommand cite
after "(6.1.18),(6.3.8)(23.1.10)"
key "A&S"

\end_inset

, into the domain of the polylogarithm.
\end_layout

\begin_layout Standard
Thus, for example, the formula (
\begin_inset LatexCommand ref
reference "eq:polylog specific estimate"

\end_inset

) together with the error bounds (
\begin_inset LatexCommand ref
reference "eq:error-bound-positive"

\end_inset

), (
\begin_inset LatexCommand ref
reference "eq:error-bound-negative"

\end_inset

) allow 
\begin_inset Formula $F(q;s)=\mbox{Li}_{s}\left(e^{2\pi iq}\right)$
\end_inset

 to be computed for real 
\begin_inset Formula $q$
\end_inset

 in region 
\begin_inset Formula $1/4\le q\le3/4$
\end_inset

.
 To obtain values on the region 
\begin_inset Formula $0<q<1/4$
\end_inset

, one applies the duplication formula 
\begin_inset Formula \[
F\left(q;s\right)=2^{1-s}F\left(2q;s\right)-F\left(q+\frac{1}{2};s\right)\]

\end_inset

recursively until one obtains values of 
\begin_inset Formula $q\ge1/4$
\end_inset

.
 Rearranging terms, one obtains a similar formula for iterating values of
 
\begin_inset Formula $q>3/4$
\end_inset

 until they are less than or equal to 
\begin_inset Formula $3/4$
\end_inset

.
 Thus, as 
\begin_inset Formula $q$
\end_inset

 approaches 0 or 1, the algorithm requires more time, but only logarithmically
 so, as 
\begin_inset Formula $-\log_{2}q$
\end_inset

 or 
\begin_inset Formula $-\log_{2}(1-q)$
\end_inset

 as the case may be.
\end_layout

\begin_layout Standard
The equivalent formulas
\begin_inset LatexCommand cite
after "Sections 7.3.1, 7.12.1"
key "Lew81"

\end_inset

 for the polylogarithm are 
\begin_inset Formula \[
\mbox{Li}_{s}(z)+\mbox{Li}_{s}(-z)=2^{1-s}\mbox{Li}_{s}\left(z^{2}\right)\]

\end_inset

 whereas the 
\begin_inset Formula $p$
\end_inset

-adic version has the appearance of a Gauss sum:
\begin_inset Formula \[
\sum_{m=0}^{p-1}\mbox{Li}_{s}\left(ze^{2\pi im/p}\right)=p^{1-s}\mbox{Li}_{s}\left(z^{p}\right)\]

\end_inset

This last identity is most easily understood to be one form of the so-called
 '
\emph on
multiplication theorem
\emph default
', having analogues in the polygamma function, Hurwitz zeta function and
 the Bernoulli polynomials, all being derivable from Gauss' multiplication
 theorem for the Gamma function, and having applications in both number
 theory and dynamical systems.
\end_layout

\begin_layout Standard
The application of the duplication formula, together with the inversion
 relation (
\begin_inset LatexCommand ref
reference "eq:poly-hur relation"

\end_inset

) can be used to extend the evaluation of the polylogarithm to the entire
 complex plane.
 For numerical work, both formulas must be applied, one alone is not enough.
 Consider first the application of the duplication formula only.
 It may be used to take points that are near to 
\begin_inset Formula $z=1$
\end_inset

, and map them further away from 
\begin_inset Formula $z=1$
\end_inset

, into the convergent region for the Borwein polynomial.
 Repeated application allows arbitrarily close approach to 
\begin_inset Formula $z=1$
\end_inset

 from the left-hand side.
 The resulting region of convergence is kidney-shaped, with the cusp of
 the kidney at 
\begin_inset Formula $z=1$
\end_inset

, and the kidney containing the unit disk 
\begin_inset Formula $\left|z\right|\le1$
\end_inset

.
 The precise shape of the kidney depends on the number of terms one wishes
 to use in the polynomial approximation.
 The shape that can be achieved while still maintaining good running time
 is shown in figure (
\begin_inset LatexCommand ref
reference "cap:Polylogarithm-phase-plot"

\end_inset

).
 However, as can be seen, this strategy barely penetrates the 
\begin_inset Formula $\Re z>1$
\end_inset

 region.
\end_layout

\begin_layout Standard
To extend the algorithm to the entire complex 
\begin_inset Formula $z$
\end_inset

-plane, one must make use of the Jonqui√®re's inversion formula
\begin_inset LatexCommand cite
after "pp 27-32"
key "Bate53"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
e^{-i\pi s/2}\mbox{Li}_{s}\left(z\right)+e^{i\pi s/2}\mbox{Li}_{s}\left(\frac{1}{z}\right)=\frac{\left(2\pi\right)^{s}}{\Gamma(s)}\zeta\left(1-s,\frac{\log z}{2\pi i}\right)\label{eq:Inversion formula}\end{equation}

\end_inset

together with some sort of independent means of evaluating the Hurwitz zeta
 function.
 The Taylor expansion (
\begin_inset LatexCommand ref
reference "eq:Hurwitz taylor"

\end_inset

) is particularly well-suited, as it is rapidly convergent in the vicinity
 of 
\begin_inset Formula $z=1$
\end_inset

.
 Specifically, it is convergent when 
\begin_inset Formula $\left|\log z\right|<2\pi$
\end_inset

, although the region of acceptable numerical convergence is smaller, roughly
 
\begin_inset Formula $\left|\log z\right|<\pi$
\end_inset

.
 Either way, this encompasses a rather large region in the vicinity of 
\begin_inset Formula $z=1$
\end_inset

, which is exactly the region where the Borwein algorithm has trouble.
 The inversion formula is used to move points 
\begin_inset Formula $\left|z\right|>1$
\end_inset

 from outside of the unit circle, to the inside.
 Not all points inside the unit circle are directly accessible to the Borwein
 algorithm; the duplication formula must still be used to handle points
 in the disk interior that are near 
\begin_inset Formula $z=1$
\end_inset

.
 Similarly, points with very large 
\begin_inset Formula $z$
\end_inset

, such as those for which 
\begin_inset Formula $\left|z\right|>e^{2\pi}$
\end_inset

, require the use of the duplication formula to be moved into the region
 of convergence for the Hurwitz Taylor series.
 A typical view of the polylogarithm on the complex 
\begin_inset Formula $z$
\end_inset

-plane is shown in figure (
\begin_inset LatexCommand ref
reference "cap:Polylog-whole-plane"

\end_inset

).
\end_layout

\begin_layout Standard
As a practical computational matter, rather than using (
\begin_inset LatexCommand ref
reference "eq:Inversion formula"

\end_inset

), it seems to be more convenient to use the formula
\begin_inset Formula \begin{equation}
\mbox{Li}_{1-s}\left(z\right)=\frac{\Gamma(s)}{\left(2\pi\right)^{s}}\left[e^{i\pi s/2}\zeta\left(s,\frac{\log z}{2\pi i}\right)+e^{-i\pi s/2}\zeta\left(s,1-\frac{\log z}{2\pi i}\right)\right]\label{eq:polylog as pure hurwitz}\end{equation}

\end_inset

Although this is equivalent to eqn.
 (
\begin_inset LatexCommand ref
reference "eq:Inversion formula"

\end_inset

), it correctly captures the appropriate branch of the logarithm that should
 be used: equation (
\begin_inset LatexCommand ref
reference "eq:polylog as pure hurwitz"

\end_inset

) works well for values of 
\begin_inset Formula $s$
\end_inset

 in both the upper and lower half-planes, whereas equation (
\begin_inset LatexCommand ref
reference "eq:Inversion formula"

\end_inset

) is more difficult to correctly evaluate in the lower half 
\begin_inset Formula $s$
\end_inset

-plane.
 In either case, one must use the logarithm with an unusual branch cut,
 taking it to run from 
\begin_inset Formula $z=0$
\end_inset

 to the right along the positive real axis, as opposed to the usual cut
 taken for the logarithm.
 
\end_layout

\begin_layout Standard
It is of some curiosity to note that, when 
\begin_inset Formula $q$
\end_inset

is not an integer, the sheet that is forced takes the form 
\begin_inset Formula \[
\zeta\left(s,q\right)+e^{-i\pi s}\zeta\left(s,1-q\right)=\sum_{n=-\infty}^{+\infty}\frac{1}{(n+q)^{s}}\]

\end_inset

which is also noted by Costin and Garoufalidis
\begin_inset LatexCommand cite
after "eqn 14"
key "Cos07"

\end_inset

 as a Mittag-Leffler type decomposition
\begin_inset LatexCommand cite
key "Boa64"

\end_inset

.
 A general discussion of the monodromy is given in a later section.
\end_layout

\begin_layout Section
Testing and Validation
\end_layout

\begin_layout Standard
The correctness of a given numerical implementation can be validated in
 a number of ways.
 For non-positive integer 
\begin_inset Formula $s$
\end_inset

, one has the exact rational functions previously mentioned.
 For positive integer 
\begin_inset Formula $n$
\end_inset

, one has the relationship 
\begin_inset LatexCommand cite
key "Lew81,Wood92"

\end_inset

 
\begin_inset Formula \[
\mbox{Li}_{n}\left(e^{2\pi iq}\right)+\left(-1\right)^{n}\mbox{Li}_{n}\left(e^{-2\pi iq}\right)=-\frac{\left(2\pi i\right)^{n}}{n!}B_{n}(q)\]

\end_inset

where the 
\begin_inset Formula $B_{n}(x)$
\end_inset

 are the Bernoulli polynomials.
 For 
\begin_inset Formula $z=-1$
\end_inset

, one regains the Riemann zeta function 
\begin_inset Formula $\zeta(s)$
\end_inset

: 
\begin_inset Formula \[
\mbox{Li}_{s}\left(-1\right)=\frac{1}{2^{1-s}-1}\,\zeta(s)\]

\end_inset

 For 
\begin_inset Formula $\left|z\right|<1$
\end_inset

, the defining series (
\begin_inset LatexCommand ref
reference "eq:polylog definition"

\end_inset

) is explicitly convergent, and may be directly summed, thus offering a
 fourth check of the correctness of an implementation.
 Finally, the multiplication theorem can be used to check for consistency.
 Each of these quantities can be computed by independent algorithms, and
 thus be used to validate the correctness of a polylogarithm implementation.
\end_layout

\begin_layout Section
Branch Points and Monodromy
\end_layout

\begin_layout Standard
The principal sheet of the polylogarithm has a branch point at 
\begin_inset Formula $z=1$
\end_inset

, and by convention, a branch cut is placed along the positive real 
\begin_inset Formula $z$
\end_inset

-axis, extending to the right.
 As one moves off of the principal sheet, one discovers that there is another
 branch point at 
\begin_inset Formula $z=0$
\end_inset

.
 The resulting monodromy group is generated by two elements, acting on the
 covering space of the bouquet 
\begin_inset Formula $S^{1}\vee S^{1}$
\end_inset

 of homotopy classes of loops in 
\begin_inset Formula $\mathbb{C}\setminus\left\{ 0,1\right\} $
\end_inset

 passing around the branch points 
\begin_inset Formula $z=0$
\end_inset

 or 
\begin_inset Formula $z=1$
\end_inset

.
 The author is not aware of any simple published discussion of the monodromy
 for the polylogarithm; a much more abstract discussion is given in 
\begin_inset LatexCommand cite
key "Cos07,Hain92,Hain91,Bloch91"

\end_inset

.
 Thus, this section provides a discussion; note that the correct manipulations
 to move from one sheet to another can be somewhat treacherous and confusing.
 
\end_layout

\begin_layout Standard
The inversion formula (
\begin_inset LatexCommand ref
reference "eq:Inversion formula"

\end_inset

) suggests a way to move around the branch point at 
\begin_inset Formula $z=1$
\end_inset

.
 Suppose one starts at the point 
\begin_inset Formula $z=x+i\epsilon$
\end_inset

 with 
\begin_inset Formula $x$
\end_inset

 real, positive, and greater than one, and 
\begin_inset Formula $\epsilon$
\end_inset

 some arbitrarily small positive real number; thus 
\begin_inset Formula $z$
\end_inset

 is very near the branch cut of the principal sheet.
 One wishes to compare this to the neighboring value on the other side of
 the cut, at 
\begin_inset Formula $x-i\epsilon$
\end_inset

.
 Applying the inversion formula, one can bounce these two points inside
 the unit circle, where there is no cut, and thus the polylog differs by
 
\begin_inset Formula $\mathcal{O}(\epsilon)$
\end_inset

.
 The difference across the cut is thus 
\begin_inset Formula \begin{eqnarray*}
\Delta & = & \mbox{Li}_{s}\left(x+i\epsilon\right)-\mbox{Li}_{s}\left(x-i\epsilon\right)\\
 & = & e^{i\pi s/2}\frac{\left(2\pi\right)^{s}}{\Gamma(s)}\left[\zeta\left(1-s,\frac{\ln x+i\epsilon}{2\pi i}\right)-\zeta\left(1-s,\frac{\ln x-i\epsilon}{2\pi i}\right)\right]+\mathcal{O}(\epsilon)\end{eqnarray*}

\end_inset

 Now, since 
\begin_inset Formula $x>1$
\end_inset

, a naive application of this formula yields 
\begin_inset Formula $\Delta=0$
\end_inset

 since 
\begin_inset Formula $\log(x+i\epsilon)-\log(x-i\epsilon)=\mathcal{O}(\epsilon)$
\end_inset

; but clearly 
\begin_inset Formula $\Delta$
\end_inset

 cannot be zero.
 To resolve this situation, one must make the Ansatz that the cut of the
 logarithm should be crossed.
 This may be done by taking the cut of the logarithm to extend to the right,
 instead of to the left, as it is by convention.
 One then gets 
\begin_inset Formula \begin{equation}
\log(x+i\epsilon)-\log(x-i\epsilon)=2\pi iN+\mathcal{O}(\epsilon)\label{eq:log-discontinuity}\end{equation}

\end_inset

 for some integer 
\begin_inset Formula $N$
\end_inset

.
 The difference across the cut, for positive 
\begin_inset Formula $N$
\end_inset

, is then 
\begin_inset Formula \[
\zeta\left(s,q\right)-\zeta\left(s,N+q\right)=\sum_{k=0}^{N-1}\frac{1}{\left(k+q\right)^{s}}\]

\end_inset

 with 
\begin_inset Formula $q=\ln(x)/2\pi i$
\end_inset

.
 By swinging the cut of the logarithm so that it extends to the right, one
 obtains that the real part of 
\begin_inset Formula $q$
\end_inset

 is positive; the real part of 
\begin_inset Formula $q$
\end_inset

 runs between 
\begin_inset Formula $0$
\end_inset

 and 
\begin_inset Formula $1$
\end_inset

.
 As a result, the value of 
\begin_inset Formula $\left(k+q\right)^{s}$
\end_inset

 is unambiguous; as otherwise taking something to the power 
\begin_inset Formula $s$
\end_inset

 also begs the question of which sheet the power must be taken on.
 That is, for general complex 
\begin_inset Formula $w$
\end_inset

, the power function is multi-sheeted:
\begin_inset Formula \begin{equation}
w^{s}=e^{s\ln w}\to e^{s(\ln w+2\pi iM)}=e^{2\pi isM}w^{s}\label{eq:M-sheet}\end{equation}

\end_inset

 for some integer 
\begin_inset Formula $M$
\end_inset

 representing the sheet of the power function.
 Since the real part of 
\begin_inset Formula $q$
\end_inset

 is taken as positive, one can temporarily operate with the assumption that
 
\begin_inset Formula $M=0$
\end_inset

.
\end_layout

\begin_layout Standard
Taking 
\begin_inset Formula $N=1$
\end_inset

, the above reasoning provides an excellent description, which may be verified
 numerically.
 The concentric semi-circles visible in the image (
\begin_inset LatexCommand ref
reference "cap:Polylog-whole-plane"

\end_inset

) can be entirely explained by the behavior of 
\begin_inset Formula $q^{s}$
\end_inset

 as 
\begin_inset Formula $q\to0$
\end_inset

, that is, as 
\begin_inset Formula $z\to1$
\end_inset

.
 Thus, the difference between the 
\begin_inset Formula $N=1$
\end_inset

 sheet and the 
\begin_inset Formula $N=0$
\end_inset

 sheet is 
\begin_inset Formula \begin{equation}
\Delta_{1}=e^{i\pi s/2}\frac{\left(2\pi\right)^{s}}{\Gamma(s)}\left(\frac{\ln z}{2\pi i}\right)^{s-1}\label{eq: N=+1 monodromy}\end{equation}

\end_inset

 Properly speaking, 
\begin_inset Formula $\Delta_{1}$
\end_inset

 is a function of 
\begin_inset Formula $s$
\end_inset

 and 
\begin_inset Formula $z$
\end_inset

, and so one should write 
\begin_inset Formula $\Delta_{1}(s;z)$
\end_inset

 to signify this.
 However, for ease of notation, this marking is dropped, and is taken implicitly
 in what follows.
 The difference 
\begin_inset Formula $\mbox{Li}_{s}\left(z\right)-\Delta_{1}$
\end_inset

 is illustrated in figure (
\begin_inset LatexCommand ref
reference "cap:N=+1 Upper-sheet"

\end_inset

); the concentric rings are seen to be canceled out precisely, leaving behind
 a smoothly varying function, having the expected smooth structure.
 Moving across the cut, for 
\begin_inset Formula $\Re z>1$
\end_inset

, the joint appears to be smooth.
 For general positive 
\begin_inset Formula $N$
\end_inset

, it is easy to confirm numerically that the discontinuity between the 
\begin_inset Formula $N$
\end_inset

'th sheet, and the 
\begin_inset Formula $N-1$
\end_inset

'th sheet, across the 
\begin_inset Formula $\Re z>1$
\end_inset

 cut is 
\begin_inset Formula \[
\Delta_{N}=e^{i\pi s/2}\frac{\left(2\pi\right)^{s}}{\Gamma(s)}\left(N-1+\frac{\ln z}{2\pi i}\right)^{s-1}\]

\end_inset


\end_layout

\begin_layout Standard
The discontinuity across the cut 
\begin_inset Formula $\Re z>1$
\end_inset

, for negative 
\begin_inset Formula $N$
\end_inset

, follows similarly.
 Next, taking 
\begin_inset Formula $N=-1$
\end_inset

 in equation (
\begin_inset LatexCommand ref
reference "eq:log-discontinuity"

\end_inset

), (or 
\begin_inset Formula $N=0$
\end_inset

 in the equation immediately above, which can serve as a point of confusion)
 the difference is given by -
\begin_inset Formula $1/(-1+q)^{1-s}=e^{-i\pi s}/(1-q)^{1-s}$
\end_inset

, or 
\begin_inset Formula \[
\Delta_{-1}=e^{-i\pi s/2}\frac{\left(2\pi\right)^{s}}{\Gamma(s)}\left(1-\frac{\ln z}{2\pi i}\right)^{s-1}\]

\end_inset

 
\end_layout

\begin_layout Standard
Figure (
\begin_inset LatexCommand ref
reference "cap:N=-1 Lower-sheet"

\end_inset

) illustrates the difference 
\begin_inset Formula $\mbox{Li}_{s}\left(z\right)-\Delta_{-1}$
\end_inset

.
 For general negative 
\begin_inset Formula $N$
\end_inset

, the difference between adjacent sheets is then 
\begin_inset Formula \[
\Delta_{-N}=e^{-i\pi s/2}\frac{\left(2\pi\right)^{s}}{\Gamma(s)}\left(N-q\right)^{s-1}\]

\end_inset

 Again, it can be numerically verified that that the transition from sheet
 to sheet is smooth as one crosses the cut 
\begin_inset Formula $\Re z>1$
\end_inset

.
\end_layout

\begin_layout Standard
It is perhaps more clear to use explicit topological language.
 Let 
\begin_inset Formula $m_{1}$
\end_inset

 represent the homotopy class of all loops based at some point 
\begin_inset Formula $z$
\end_inset

 on the complex plane, that wind once around the branch-point 
\begin_inset Formula $z=1$
\end_inset

 in the positive direction.
 The action of 
\begin_inset Formula $m_{1}$
\end_inset

 on the polylogarithm has the effect of carrying the polylog from one sheet
 to the next.
 In the above discussion, it was determined that 
\begin_inset Formula \[
m_{1}\cdot\mbox{Li}_{s}\left(z\right)=\mbox{Li}_{s}\left(z\right)-\Delta_{1}\]

\end_inset

 The logarithm in 
\begin_inset Formula $\Delta_{1}$
\end_inset

 has a branch point at 
\begin_inset Formula $z=0$
\end_inset

.
 That is, after acting with 
\begin_inset Formula $m_{1}$
\end_inset

, one is now on a sheet with a cut extending from 
\begin_inset Formula $z=0$
\end_inset

 to the right.
 Let let 
\begin_inset Formula $m_{0}$
\end_inset

 represent the homotopy class of loops that wind once around the branch
 point 
\begin_inset Formula $z=0$
\end_inset

 in a right-handed fashion.
 Acting on the logarithm, one has 
\begin_inset Formula \[
m_{0}\cdot\ln z=\ln z+2\pi i\]

\end_inset

 Recalling the definition of 
\begin_inset Formula $q=\ln z/2\pi i$
\end_inset

, one thus has 
\begin_inset Formula $m_{0}\cdot q=q+1$
\end_inset

, and so 
\begin_inset Formula \[
m_{0}\cdot\Delta_{N}=\Delta_{N+1}\]

\end_inset

The principal sheet of the polylogarithm has no branch point at 
\begin_inset Formula $z=0$
\end_inset

, and so one has 
\begin_inset Formula \[
m_{0}\cdot\mbox{Li}_{s}\left(z\right)=\mbox{Li}_{s}\left(z\right)\]

\end_inset

Winding in the opposite direction, one has 
\begin_inset Formula \[
m_{1}^{-1}\cdot\mbox{Li}_{s}\left(z\right)=\mbox{Li}_{s}\left(z\right)-\Delta_{-1}\]

\end_inset

 In order for 
\begin_inset Formula $m_{1}$
\end_inset

 to be properly considered as the group-theoretic inverse of 
\begin_inset Formula $m_{1}$
\end_inset

, one must have 
\begin_inset Formula $m_{1}\cdot m_{1}^{-1}\cdot\mbox{Li}_{s}\left(z\right)=m_{1}^{-1}\cdot m_{1}\cdot\mbox{Li}_{s}\left(z\right)=\mbox{Li}_{s}\left(z\right)$
\end_inset

.
 The resolution of this implies 
\begin_inset Formula $m_{1}\cdot\Delta_{-1}=-\Delta_{1}$
\end_inset

, which in turn implies that 
\begin_inset Formula $m_{1}\cdot q=q+1$
\end_inset

.
 This seems strange, as the logarithm has no branch point at 
\begin_inset Formula $z=1$
\end_inset

, and so there is nothing to wind around.
 By this argument, one would have expected that 
\begin_inset Formula $m_{1}$
\end_inset

 had no effect on 
\begin_inset Formula $q$
\end_inset

 at all.
 The point is subtle and is worth establishing clearly; it is the joining
 of the polylogarithm to the logarithm cuts that causes the effect.
 Consider only the logarithm (not the polylogarithm), arranged so that the
 branch extends to the right.
 Consider starting just below the real axis, and winding around in a right-hande
d fashion around the point 
\begin_inset Formula $z=1$
\end_inset

, and finishing just above the real axis.
 There is no obstruction at 
\begin_inset Formula $z=1$
\end_inset

, and so this loop can be shrunk to a very short line segment.
 None-the-less, the short line segment crosses the cut, and its effect is
 to move to a different sheet.
 It is for this reason that one has 
\begin_inset Formula $m_{1}\cdot q=q+1$
\end_inset

.
 A different set of group generators will be defined below, that do capture
 the idea that winding around 
\begin_inset Formula $z=1$
\end_inset

 should have no effect on 
\begin_inset Formula $q$
\end_inset

.
\end_layout

\begin_layout Standard
One can now consider the task of more complex paths from sheet to sheet.
 Passing twice around the 
\begin_inset Formula $z=1$
\end_inset

 branch, one has 
\end_layout

\begin_layout Standard
\begin_inset Formula \[
m_{1}^{2}\cdot\mbox{Li}_{s}\left(z\right)=m_{1}\cdot\left[\mbox{Li}_{s}\left(z\right)-\Delta_{1}\right]=\mbox{Li}_{s}\left(z\right)-\Delta_{1}-\Delta_{2}\]

\end_inset

 Repeating this gluing 
\begin_inset Formula $n$
\end_inset

 times, so that each time, one pastes the sheets so that crossing the 
\begin_inset Formula $z>1$
\end_inset

 cut is smooth and differentiable, gives 
\begin_inset Formula \begin{eqnarray*}
m_{1}^{n}\cdot\mbox{Li}_{s}\left(z\right) & = & \mbox{Li}_{s}\left(z\right)-\sum_{k=1}^{n}\Delta_{k}\\
 & = & \mbox{Li}_{s}\left(z\right)-e^{i\pi s/2}\frac{\left(2\pi\right)^{s}}{\Gamma(s)}\sum_{k=1}^{n}\frac{1}{\left(k-1+q\right)^{1-s}}\\
 & = & \mbox{Li}_{s}\left(z\right)-e^{i\pi s/2}\frac{\left(2\pi\right)^{s}}{\Gamma(s)}\left[\zeta\left(1-s,\frac{\ln z}{2\pi i}\right)-\zeta\left(1-s,n+\frac{\ln z}{2\pi i}\right)\right]\end{eqnarray*}

\end_inset

 which is recognizable from the initial considerations.
 
\end_layout

\begin_layout Standard
To capture the idea of there being no obstruction at 
\begin_inset Formula $z=1$
\end_inset

 for the logarithm, one may define a group element 
\begin_inset Formula $g_{1}=m_{1}m_{0}^{-1}$
\end_inset

, so that one has 
\begin_inset Formula $g_{1}\cdot\ln z=\ln z$
\end_inset

.
 Then, define 
\begin_inset Formula $g_{0}=m_{0}$
\end_inset

.
 In terms of these generators, one has the relations 
\begin_inset Formula \begin{eqnarray*}
g_{0}\cdot q & = & q+1\\
g_{1}\cdot q & = & q\\
g_{0}\cdot\mbox{Li}_{s}\left(z\right) & = & \mbox{Li}_{s}\left(z\right)\\
g_{1}\cdot\mbox{Li}_{s}\left(z\right) & = & \mbox{Li}_{s}\left(z\right)-\Delta_{1}\\
g_{0}\cdot\Delta_{N} & = & \Delta_{N+1}\quad\mbox{ for }N>0\\
g_{1}\cdot\Delta_{N} & = & \Delta_{N}\end{eqnarray*}

\end_inset

 To complete the picture, one needs the action of 
\begin_inset Formula $g_{0}$
\end_inset

 on 
\begin_inset Formula $\Delta_{-1}$
\end_inset

, or equivalently 
\begin_inset Formula $g_{0}^{-1}$
\end_inset

 on 
\begin_inset Formula $\Delta_{1}$
\end_inset

.
 There is some ambiguity, and thus, room for confusion, as the term 
\begin_inset Formula $(-1)^{s}$
\end_inset

 arises, which may be taken as 
\begin_inset Formula $e^{i\pi s}$
\end_inset

 or as 
\begin_inset Formula $e^{-i\pi s}$
\end_inset

, with the last two inequivalent for non-integer 
\begin_inset Formula $s$
\end_inset

.
 The resolution lies in considering the joining of sheets across the cut
 that runs between 
\begin_inset Formula $0<\Re z<1$
\end_inset

.
 Visually, the cut can be clearly seen in figure (
\begin_inset LatexCommand ref
reference "cap:N=-1 Lower-sheet"

\end_inset

).
 Consider now the task of gluing sheets across this cut.
 For a point 
\begin_inset Formula $z$
\end_inset

 just above the line connecting 
\begin_inset Formula $z=0$
\end_inset

 and 
\begin_inset Formula $z=1$
\end_inset

, one has 
\begin_inset Formula $q=\epsilon+iv$
\end_inset

 for some small, positive 
\begin_inset Formula $\epsilon$
\end_inset

 and some general, positive 
\begin_inset Formula $v$
\end_inset

.
 Just below this line, one has 
\begin_inset Formula $q=1-\epsilon+iv$
\end_inset

.
 That is, 
\begin_inset Formula $q$
\end_inset

 differs by 1, of course.
 This cut cannot be glued to the polylog, of course; it must be glued to
 another sheet of the logarithm.
 The correct gluing, for 
\begin_inset Formula $z=x$
\end_inset

 real, 
\begin_inset Formula $0<x<1$
\end_inset

, is given by 
\begin_inset Formula \[
\lim_{\epsilon\to0}\left[\Delta_{1}(x+i\epsilon)+e^{i2\pi s}\Delta_{-1}(x-i\epsilon)\right]=0\]

\end_inset

 That is, 
\begin_inset Formula \[
g_{0}\cdot\Delta_{-1}=-e^{-i2\pi s}\Delta_{1}\]

\end_inset

 This somewhat strange form is nothing more than an accounting trick; it
 is the result of providing a definition of 
\begin_inset Formula $\Delta_{-N}$
\end_inset

 that had a 
\begin_inset Quotes eld
\end_inset

natural
\begin_inset Quotes erd
\end_inset

 normalization, avoiding a minus sign.
 The price of that definition is this glitch.
 In all other respects, the homotopy proceeds as expected, so that, for
 example, 
\begin_inset Formula \[
g_{0}\cdot\Delta_{-N}=\Delta_{-N+1}\]

\end_inset

 for 
\begin_inset Formula $N>1$
\end_inset

.
 
\end_layout

\begin_layout Standard
The free combinations of powers of the two operators 
\begin_inset Formula $g_{0}$
\end_inset

 and 
\begin_inset Formula $g_{1}$
\end_inset

 (or 
\begin_inset Formula $m_{0}$
\end_inset

 and 
\begin_inset Formula $m_{1}$
\end_inset

) generate a group, the monodromy group of the polylogarithm.
 For 
\begin_inset Formula $s=m$
\end_inset

 a positive integer, the monodromy group has a finite-dimensional representation
 of dimension 
\begin_inset Formula $m+1$
\end_inset

.
 Well-known is the case for 
\begin_inset Formula $s=2$
\end_inset

, the dilogarithm, where the representation forms the discrete Heisenberg
 group.
 This may be seen as follows.
 For 
\begin_inset Formula $s=2,$
\end_inset

 one has 
\begin_inset Formula \[
\Delta_{n}=2\pi i\left(\ln z+(n-1)2\pi i\right)\]

\end_inset

 Repeated applications of 
\begin_inset Formula $g_{0}$
\end_inset

 and 
\begin_inset Formula $g_{1}$
\end_inset

 result in a linear combinations of 
\begin_inset Formula $\mbox{Li}_{2}\left(z\right)$
\end_inset

, 
\begin_inset Formula $\ln z$
\end_inset

 and 1; no terms of any other type appear.
 One may take these three elements as the basis of a three-dimensional vector
 space.
 Writing the basis as column vectors, the representation is 
\begin_inset Formula \begin{eqnarray*}
4\pi^{2}\mapsto e_{1} & = & \left[\begin{array}{c}
1\\
0\\
0\end{array}\right]\\
-2\pi i\ln z\mapsto e_{2} & = & \left[\begin{array}{c}
0\\
1\\
0\end{array}\right]\\
\mbox{Li}_{2}\left(z\right)\mapsto e_{3} & = & \left[\begin{array}{c}
0\\
0\\
1\end{array}\right]\end{eqnarray*}

\end_inset

 so that the action may be represented as 
\begin_inset Formula \[
g_{1}=\left[\begin{array}{ccc}
1 & 0 & 0\\
0 & 1 & 1\\
0 & 0 & 1\end{array}\right]\quad\mbox{ and }\quad g_{0}=\left[\begin{array}{ccc}
1 & 1 & 0\\
0 & 1 & 0\\
0 & 0 & 1\end{array}\right]\]

\end_inset

 These two matrices may be seen to be the generators of the discrete Heisenberg
 group 
\begin_inset Formula $\mathcal{H}_{3}(\mathbb{Z})$
\end_inset

.
 The general group element of the discrete Heisenberg group is 
\begin_inset Formula \[
\left[\begin{array}{ccc}
1 & a & b\\
0 & 1 & c\\
0 & 0 & 1\end{array}\right]\]

\end_inset

 for integers 
\begin_inset Formula $a,b,c$
\end_inset

.
 By convention, one writes 
\begin_inset Formula $x$
\end_inset

 for 
\begin_inset Formula $g_{0}$
\end_inset

 and 
\begin_inset Formula $y$
\end_inset

 for 
\begin_inset Formula $g_{1}$
\end_inset

, and defines a new element 
\begin_inset Formula $z$
\end_inset

 (having no relation at all to the argument 
\begin_inset Formula $z$
\end_inset

 of the dilogarithm) as the commutator 
\begin_inset Formula $z=xyx^{-1}y^{-1}$
\end_inset

, so that 
\begin_inset Formula \[
z=\left[\begin{array}{ccc}
1 & 0 & 1\\
0 & 1 & 0\\
0 & 0 & 1\end{array}\right]\]

\end_inset

 The element 
\begin_inset Formula $z$
\end_inset

 is in the center, so that it commutes with 
\begin_inset Formula $x$
\end_inset

 and 
\begin_inset Formula $y$
\end_inset

, so 
\begin_inset Formula $zx=xz$
\end_inset

 and 
\begin_inset Formula $zy=yz$
\end_inset

.
 These relations may be taken as giving the group presentation, so that
 
\begin_inset Formula \[
\mathcal{H}_{3}(\mathbb{Z})=\left\langle (x,y)\,\vert\; z=xyx^{-1}y^{-1},\; zx=xz,\; zy=yz\right\rangle \]

\end_inset

 Curiously, one should note that the discrete Heisenberg group has an alternate
 presentation that is reminiscent of the braid group.
 This is perhaps not a complete surprise, as a monodromy can be generally
 understood to be a subgroup of the braid group or mapping class group of
 the punctured disk.
 The mapping class group permutes the punctures of the disk in a continuous
 fashion, so that the result is an intertwining of strands.
 For a disk with two punctures, the braid group is 
\begin_inset Formula $B_{3}$
\end_inset

 consists of three strands.
 In this case, two of the strands can be visualized as two parallel lines,
 each representing one of the two branch points of the polylogarithm.
 The third strand is the monodromy path, which weaves about the two straight
 lines, but must always return to the middle.
 Now, the braid group 
\begin_inset Formula $B_{3}$
\end_inset

 has two group generators, denoted 
\begin_inset Formula $\sigma_{1}$
\end_inset

 and 
\begin_inset Formula $\sigma_{2}$
\end_inset

 by convention, which denote a single twist of the left or right pair of
 strands of the braid.
 To weave the middle strands of the monodromy about the two branch points,
 one identifies 
\begin_inset Formula $g_{0}\to\sigma_{1}^{2}$
\end_inset

 and 
\begin_inset Formula $g_{1}\to\sigma_{2}^{2}$
\end_inset

.
 At this point, ignoring the polylog, and limiting ones attention to the
 universal covering space for the homotopy group over two branch points,
 one very simply has that 
\begin_inset Formula $g_{0}$
\end_inset

 and 
\begin_inset Formula $g_{1}$
\end_inset

 are the generators of the free group in two letters.
 Now for the curious resemblance.
 The braid group 
\begin_inset Formula $B_{3}$
\end_inset

 has the group presentation 
\begin_inset Formula $\sigma_{1}\sigma_{2}\sigma_{1}=\sigma_{2}\sigma_{1}\sigma_{2}$
\end_inset

.
 The discrete Heisenberg group has the remarkably similar identity 
\begin_inset Formula $xyyx=yxxy$
\end_inset

.
\end_layout

\begin_layout Standard
For 
\begin_inset Formula $s=3$
\end_inset

, one may write 
\begin_inset Formula \[
g_{0}=\left[\begin{array}{cccc}
1 & 1 & 1 & 0\\
0 & 1 & 2 & 0\\
0 & 0 & 1 & 0\\
0 & 0 & 0 & 1\end{array}\right]\quad\mbox{ and }\quad g_{1}=\left[\begin{array}{cccc}
1 & 0 & 0 & 0\\
0 & 1 & 0 & 0\\
0 & 0 & 1 & 1\\
0 & 0 & 0 & 1\end{array}\right]\]

\end_inset

 for the basis 
\begin_inset Formula \begin{eqnarray*}
4\pi^{3}i\mapsto e_{1} & = & \left[\begin{array}{c}
1\\
0\\
0\\
0\end{array}\right]\\
2\pi^{2}\ln z\mapsto e_{2} & = & \left[\begin{array}{c}
0\\
1\\
0\\
0\end{array}\right]\\
-\pi i\left(\ln z\right)^{2}\mapsto e_{3} & = & \left[\begin{array}{c}
0\\
0\\
1\\
0\end{array}\right]\\
\mbox{Li}_{3}\left(z\right)\mapsto e_{4} & = & \left[\begin{array}{c}
0\\
0\\
0\\
1\end{array}\right]\end{eqnarray*}

\end_inset

The generated group is not the four-dimensional Heisenberg group, as there
 simply aren't enough generators for that.
 Its not a representation of the three-dimensional Heisenberg group, as
 the commutator 
\begin_inset Formula $w=g_{0}g_{1}g_{0}^{-1}g_{1}^{-1}$
\end_inset

 is not in the center, since 
\begin_inset Formula $wg_{0}\ne g_{0}w$
\end_inset

.
 However, one does have 
\begin_inset Formula $wg_{1}=g_{1}w$
\end_inset

, and from this one may deduce that the monodromy group has the presentation
 
\begin_inset Formula \begin{equation}
M=\langle g_{0},g_{1}\,\vert\, g_{1}g_{0}g_{1}^{-1}g_{0}^{-1}=g_{0}g_{1}^{-1}g_{0}^{-1}g_{1}\rangle\label{eq:polylog monodromy}\end{equation}

\end_inset

 In any case, the group is solvable and thus thin.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Standard
\begin_inset Caption

\begin_layout Standard
Polylogarithm Monodromy
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename monodromy.eps
	width 100text%

\end_inset


\end_layout

\begin_layout Standard
A graph of the polylogarithm monodromy, given by equation (
\begin_inset LatexCommand ref
reference "eq:polylog monodromy"

\end_inset

).
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The Heisenberg group may be regained as the quotient group 
\begin_inset Formula $\mathcal{H}_{3}(\mathbb{Z})=M/\left\langle w\right\rangle $
\end_inset

 where 
\begin_inset Formula $\left\langle w\right\rangle $
\end_inset

 is the conjugate closure of 
\begin_inset Formula $w$
\end_inset

: 
\begin_inset Formula \[
\left\langle w\right\rangle =\left\{ gwg^{-1}\,\vert\, g\in M\right\} \]

\end_inset

 The conjugate closure is, of course, a normal subgroup of 
\begin_inset Formula $M$
\end_inset

.
 Since 
\begin_inset Formula $g_{1}$
\end_inset

 already commuted with 
\begin_inset Formula $w$
\end_inset

, what the quotient group construction does is to impose 
\begin_inset Formula $\left\langle w\right\rangle g_{0}=g_{0}\left\langle w\right\rangle $
\end_inset

, which shows up on the cosets as the other, 
\begin_inset Quotes eld
\end_inset

missing
\begin_inset Quotes erd
\end_inset

 relationship needed to get the Heisenberg group.
 It is thus that the presentation of the Heisenberg group is regained.
 The general form of an element 
\begin_inset Formula $h\in\left\langle w\right\rangle $
\end_inset

 may be taken to be 
\begin_inset Formula \[
h=g_{0}^{-n}wg_{0}^{n}=\left[\begin{array}{cccc}
1 & 0 & 0 & 2n+1\\
0 & 1 & 0 & -2\\
0 & 0 & 1 & 0\\
0 & 0 & 0 & 1\end{array}\right]\]

\end_inset

 for integer 
\begin_inset Formula $n$
\end_inset

.
 Thus, it is clear that 
\begin_inset Formula $\left\langle w\right\rangle $
\end_inset

 is abelian, and that 
\begin_inset Formula $\left\langle w\right\rangle \cong\mathbb{Z}$
\end_inset

.
\end_layout

\begin_layout Standard
For general integer 
\begin_inset Formula $s=m$
\end_inset

, the monodromy group is always unipotent, and thus a nilpotent group.
 The generators take the form 
\begin_inset Formula \[
g_{0}=\left[\begin{array}{cc}
C & \begin{array}{c}
0\\
\vdots\\
0\end{array}\\
0\;\cdots\;0 & 1\end{array}\right]\quad\mbox{ and }\quad g_{1}=\left[\begin{array}{ccccc}
1 & 0 & \cdots &  & 0\\
0 & 1 &  &  & \vdots\\
\vdots &  & \ddots & 0 & 0\\
 &  & 0 & 1 & 1\\
0 & \cdots & 0 & 0 & 1\end{array}\right]\]

\end_inset

 where 
\begin_inset Formula $C$
\end_inset

 are the binomial coefficients written in an upper-triangular fashion (thus,
 for example, for 
\begin_inset Formula $m=4$
\end_inset

, one adds a column of 
\begin_inset Formula $(1,3,3,1)$
\end_inset

 and, for 
\begin_inset Formula $m=5$
\end_inset

, another column 
\begin_inset Formula $(1,4,6,4,1)$
\end_inset

, 
\emph on
etc
\emph default
.).
 This form is determined by taking as the basis vectors the monomials appearing
 in the expansion of 
\begin_inset Formula $\left(\ln z+2\pi i\right)^{m}$
\end_inset

 (whence the binomial coefficients), and normalizing with a factor of 
\begin_inset Formula $2\pi i/\Gamma(m)$
\end_inset

.
 The generated monodromy group is isomorphic to the above 
\begin_inset Formula $s=3$
\end_inset

 case, as it has the same presentation.
 The element 
\begin_inset Formula $w=g_{0}g_{1}g_{0}^{-1}g_{1}^{-1}$
\end_inset

 commutes with 
\begin_inset Formula $g_{1}$
\end_inset

, just as before; but 
\begin_inset Formula $g_{0}w\ne wg_{0}$
\end_inset

.
 Thus, the conjugate closure 
\begin_inset Formula $\left\langle w\right\rangle $
\end_inset

 is again a one-dimensional abelian group, that is, 
\begin_inset Formula $\left\langle w\right\rangle \cong\mathbb{Z}$
\end_inset

, and the resulting quotient group is again the Heisenberg group.
\begin_inset Note Note
status collapsed

\begin_layout Standard
Note that the existence of polylogarithm ladders seems to be equivalent
 to the statement that products of monodromy groups can be factored in interesti
ng and unusual ways.
 XXX Expand on this remark.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
For 
\begin_inset Formula $s$
\end_inset

 not an integer, the action of 
\begin_inset Formula $g_{0}$
\end_inset

 does not close, and the general vector-space representation is infinite
 dimensional.
 The action of the 
\begin_inset Formula $g_{0}$
\end_inset

 monodromy can be understood to be the shift operator on an infinite-dimensional
 vector space, whose basis vectors may be taken to be 
\begin_inset Formula $\Delta_{N}$
\end_inset

; the operator 
\begin_inset Formula $g_{1}$
\end_inset

 acts to inject into this shift space.
 Defining 
\begin_inset Formula $w$
\end_inset

 as before, it is not hard to determine that 
\begin_inset Formula $w\cdot\Delta_{N}=\Delta_{N}$
\end_inset

 and that 
\begin_inset Formula $w\cdot\mbox{Li}_{s}\left(z\right)=\mbox{Li}_{s}\left(z\right)+\Delta_{1}-\Delta_{2}$
\end_inset

.
 Remarkably, the same commutation relation holds as before, in that 
\begin_inset Formula $g_{1}w\cdot\mbox{Li}_{s}\left(z\right)=wg_{1}\cdot\mbox{Li}_{s}\left(z\right)=\mbox{Li}_{s}\left(z\right)-\Delta_{2}$
\end_inset

.
 This, together with the more trivial result 
\begin_inset Formula $g_{1}w\cdot\Delta_{N}=wg_{1}\cdot\Delta_{N}=\Delta_{N}$
\end_inset

 shows that the infinite-dimensional vector space representation of the
 monodromy has the same presentation as the finite-dimensional case.
 Thus, one concludes that, for all complex values of 
\begin_inset Formula $s\ne2$
\end_inset

, the monodromy of the polylogarithm is given by equation (
\begin_inset LatexCommand ref
reference "eq:polylog monodromy"

\end_inset

).
 
\end_layout

\begin_layout Standard
The analog of the Dirichlet 
\begin_inset Formula $L$
\end_inset

-functions are functions of the form 
\begin_inset Formula \[
p^{-s}\sum_{m=1}^{p-1}\chi(m)\,\mbox{Li}_{s}\left(ze^{2\pi im/p}\right)\]

\end_inset

 where 
\begin_inset Formula $\chi(m)$
\end_inset

 is a primitive character modulo 
\begin_inset Formula $p$
\end_inset

.
 These functions have the strange property of having branch points at 
\begin_inset Formula $e^{2\pi im/p}$
\end_inset

 whenever 
\begin_inset Formula $\chi(m)$
\end_inset

 is not zero.
 The resulting monodromy groups have a more complex structure as well.
\end_layout

\begin_layout Section
The 
\begin_inset Quotes eld
\end_inset

Periodic
\begin_inset Quotes erd
\end_inset

 Zeta Function 
\end_layout

\begin_layout Standard
The ability to compute the polylogarithm allows one to visualize some of
 the interesting sums that occur in number theory.
 One such example is the so-called 
\begin_inset Quotes eld
\end_inset

periodic zeta function
\begin_inset Quotes erd
\end_inset

, defined by Apostol
\begin_inset LatexCommand cite
after "Thm 12.6"
key "Apo76"

\end_inset

 as 
\begin_inset Formula \begin{equation}
F(q;s)=\sum_{n=1}^{\infty}\frac{e^{i2\pi nq}}{n^{s}}\label{eq:periodic zeta}\end{equation}

\end_inset

 Clearly, one has 
\begin_inset Formula $F(q,s)=\mbox{Li}_{s}\left(e^{2\pi iq}\right)$
\end_inset

.
 The periodic zeta function occurs when one attempts to state a reflection
 formula for the Hurwitz zeta function, as 
\begin_inset Formula \begin{equation}
\zeta(1-s,q)=\frac{\Gamma(s)}{(2\pi)^{s}}\left[e^{-i\pi s/2}F(q;s)+e^{i\pi s/2}F(1-q;s)\right]\label{eq:Hurwitz reflection}\end{equation}

\end_inset

 What makes the periodic zeta function interesting is that 
\emph on
it is not actually periodic
\emph default
.
 That one might think it is seems obvious from the definition (
\begin_inset LatexCommand ref
reference "eq:periodic zeta"

\end_inset

): the direct substitution of 
\begin_inset Formula $q\to q+1$
\end_inset

 gives the false suggestion of periodicity in 
\begin_inset Formula $q$
\end_inset

.
 This is false because, in fact, 
\begin_inset Formula $\mbox{Li}_{s}\left(z\right)$
\end_inset

 has a branch point at 
\begin_inset Formula $z=1$
\end_inset

.
 The 
\begin_inset Quotes eld
\end_inset

periodic
\begin_inset Quotes erd
\end_inset

 zeta function is multi-sheeted, and, attempting to trace a continuous path
 from 
\begin_inset Formula $q\to q+1$
\end_inset

, while keeping 
\begin_inset Formula $q$
\end_inset

 real carries one through the branch-point, and from one sheet to the next.
 This is illustrated graphically, in figure (
\begin_inset LatexCommand ref
reference "cap:Periodic-zeta-function"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Standard
\begin_inset Caption

\begin_layout Standard
\begin_inset LatexCommand label
name "cap:Periodic-zeta-function"

\end_inset

Periodic zeta function
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename periodic-xsection.png
	width 100text%
	special bb=0 0 640 480

\end_inset


\end_layout

\begin_layout Standard
This graph shows the real and imaginary parts of the periodic zeta function
 
\begin_inset Formula \[
F(q,s)=\mbox{Li}_{s}\left(e^{2\pi iq}\right)\]

\end_inset

 for 
\begin_inset Formula $s=\frac{1}{2}+i25$
\end_inset

.
 This value of 
\begin_inset Formula $s$
\end_inset

 is close to a zero of the Riemann zeta function, at 
\begin_inset Formula $s=\frac{1}{2}+i25.01085758014\ldots$
\end_inset

 Thus, both the real and imaginary parts approach zero at 
\begin_inset Formula $q=1$
\end_inset

, as well as at 
\begin_inset Formula $q=\frac{1}{2}$
\end_inset

.
 The increasing oscillations as 
\begin_inset Formula $q\to0$
\end_inset

 are due to the contribution of the very first term of the Hurwitz zeta:
 that is, these oscillations are nothing other than that of 
\begin_inset Formula $q^{-s}=e^{i25\log q}/\sqrt{q}$
\end_inset

.
 Subtracting these away is the same as analytically continuing to the region
 
\begin_inset Formula $q>1$
\end_inset

, and matches the coarser set of oscillations, which are given by 
\begin_inset Formula $(1+q)^{-s}=e^{i25\log(1+q)}/\sqrt{1+q}$
\end_inset


\end_layout

\begin_layout Standard
Noteworthy is that the presumed 
\begin_inset Quotes eld
\end_inset

periodicity
\begin_inset Quotes erd
\end_inset

 in 
\begin_inset Formula $q$
\end_inset

 is very misleading: the image suggests an essential singularity at 
\begin_inset Formula $q=0$
\end_inset

, and continuing, logarithmically slower oscillatory behavior for the analytic
 continuation to the region where 
\begin_inset Formula $q>1$
\end_inset

.
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
The figure (
\begin_inset LatexCommand ref
reference "cap:Periodic-zeta-function"

\end_inset

) shows an oscillatory behavior that clearly diverges as 
\begin_inset Formula $q\to0$
\end_inset

.
 This oscillation is can be simply explained.
 Substituting 
\begin_inset Formula $s=\frac{1}{2}+i\tau$
\end_inset

 into equation (
\begin_inset LatexCommand ref
reference "eq:Hurwitz reflection"

\end_inset

) gives 
\begin_inset Formula \[
\zeta\left(\frac{1}{2}-i\tau,\, q\right)=\frac{e^{-i\pi/4}e^{-i\tau\log2\pi}e^{i\phi}}{\sqrt{2\cosh\tau\pi}}\left[e^{\pi\tau/2}F(q;s)+ie^{-\pi\tau/2}F(1-q;s)\right]\]

\end_inset

 after the substitution of 
\begin_inset Formula \[
\Gamma\left(\frac{1}{2}+i\tau\right)=\frac{\sqrt{\pi}e^{i\phi}}{\sqrt{\cosh\tau\pi}}\]

\end_inset

 where 
\begin_inset Formula $\phi$
\end_inset

 is a purely real phase that can be expressed as a somewhat complicated
 sum
\begin_inset LatexCommand cite
after "eqn 6.1.27"
key "A&S"

\end_inset

.
 For reasonably large, positive 
\begin_inset Formula $\tau$
\end_inset

, such as 
\begin_inset Formula $\tau=25$
\end_inset

 in the picture, one may ignore the second term, so that the whole expression
 simplifies to 
\begin_inset Formula \[
F\left(q;\frac{1}{2}+i\tau\right)=\exp\, i\left(\frac{\pi}{4}-\phi+\tau\log2\pi\right)\;\zeta\left(\frac{1}{2}-i\tau,\, q\right)+\mathcal{O}\left(C^{-\tau}\right)\]

\end_inset

 for some real constant 
\begin_inset Formula $C>0$
\end_inset

.
 Then, as 
\begin_inset Formula $q\to0$
\end_inset

, the leading contribution to the Hurwitz zeta comes from the 
\begin_inset Formula $n=0$
\end_inset

 term in equation (
\begin_inset LatexCommand ref
reference "eq:Hurwitz zeta"

\end_inset

): that is, 
\begin_inset Formula $q^{-s}=e^{i\tau\log q}/\sqrt{q}$
\end_inset

, so that 
\begin_inset Formula \begin{equation}
F\left(q;\frac{1}{2}+i\tau\right)\approx\frac{e^{i\tau\log q}e^{i\psi}}{\sqrt{q}}\;\mbox{ as }q\to0\label{eq:F-approx}\end{equation}

\end_inset

 for some fixed, real phase 
\begin_inset Formula $\psi$
\end_inset

 that is independent of 
\begin_inset Formula $q$
\end_inset

.
 As is eminently clear from both the picture (
\begin_inset LatexCommand ref
reference "cap:Periodic-zeta-function"

\end_inset

), and from the approximation (
\begin_inset LatexCommand ref
reference "eq:F-approx"

\end_inset

), the limit of 
\begin_inset Formula $q\to0$
\end_inset

 of 
\begin_inset Formula $F(q,s)$
\end_inset

 cannot be taken: this is the branch-point of 
\begin_inset Formula $\mbox{Li}_{s}\left(z\right)$
\end_inset

 at 
\begin_inset Formula $z=1$
\end_inset

.
\end_layout

\begin_layout Standard
Curiously, the limit 
\begin_inset Formula $q\to1$
\end_inset

 does exist, and one has 
\begin_inset Formula $F(1,s)=\zeta(s)$
\end_inset

 the Riemann zeta function.
 The approximation (
\begin_inset LatexCommand ref
reference "eq:F-approx"

\end_inset

) hints at how to move through the branch point, from one sheet to the next:
 (
\begin_inset LatexCommand ref
reference "eq:F-approx"

\end_inset

) is the discontinuity between sheets.
 That is, one has, for large, positive 
\begin_inset Formula $\tau$
\end_inset


\begin_inset Formula \[
F\left(q+1;\,\frac{1}{2}+i\tau\right)\approx F\left(q,\,\frac{1}{2}+i\tau\right)-\frac{e^{i\tau\log q}e^{i\psi}}{\sqrt{q}}\]

\end_inset

 as the formula that approximates the movement from one sheet to the next.
 In essence, this shows that the 
\begin_inset Quotes eld
\end_inset

periodic
\begin_inset Quotes erd
\end_inset

 zeta function is not at all periodic: 
\begin_inset Formula $F(q+1;s)\ne F(q;s)$
\end_inset

 whenever 
\begin_inset Formula $\Re s\le1$
\end_inset

.
 
\end_layout

\begin_layout Standard
The complete relationship between the Hurwitz zeta and the periodic zeta
 is rather subtle.
 For example, if instead one considers large 
\emph on
negative
\emph default
 
\begin_inset Formula $\tau$
\end_inset

, and graphs the periodic zeta, one obtains what is essentially the left-right
 reversed image of (
\begin_inset LatexCommand ref
reference "cap:Periodic-zeta-function"

\end_inset

), with oscillations approaching a singularity at 
\begin_inset Formula $q\to1$
\end_inset

.
 One may easily 
\emph on
numerically
\emph default
 verify that these oscillations are precisely of the form 
\begin_inset Formula $(1-q)^{-s}$
\end_inset

.
 From this, one may deduce that the correct form of the reflection formula
 is 
\begin_inset Formula \begin{equation}
F(q,1-s)=\frac{\Gamma(s)}{(2\pi)^{s}}\left[e^{i\pi s/2}\zeta(s,q)+e^{-i\pi s/2}\zeta(s,1-q)\right]\label{eq:periodic reflection}\end{equation}

\end_inset

 which captures the oscillatory behavior at 
\begin_inset Formula $q\to0$
\end_inset

 for large positive 
\begin_inset Formula $\tau$
\end_inset

 and the oscillations at 
\begin_inset Formula $q\to1$
\end_inset

 for large negative 
\begin_inset Formula $\tau$
\end_inset

.
 
\end_layout

\begin_layout Standard
The constraint of keeping 
\begin_inset Formula $q$
\end_inset

 real causes integer values of 
\begin_inset Formula $q$
\end_inset

 to correspond precisely to the branch point of the polylogarithm.
 This makes reasoning about the continuity of the periodic zeta at integral
 values of 
\begin_inset Formula $q$
\end_inset

 rather turbid.
 Since the Riemann zeta function lies precisely at the branch point, this
 seems to also make it difficult to gain new insight into the Riemann zeta
 in this way.
\end_layout

\begin_layout Section
Conclusion
\end_layout

\begin_layout Standard
Both the Borwein and the Euler-Maclaurin algorithms appears to offer a stable
 and fast way of computing the Hurwitz zeta function for general complex
 
\begin_inset Formula $s$
\end_inset

 and real 
\begin_inset Formula $q$
\end_inset

, and the polylogarithm for general complex 
\begin_inset Formula $s$
\end_inset

 and 
\begin_inset Formula $z$
\end_inset

.
 The Euler-Maclaurin algorithm offers superior performance for the Hurwitz
 zeta.
 An actual implementation using a variable-precision library shows that
 all of the algorithms are quite tractable.
 
\end_layout

\begin_layout Standard
An unexplored area is the optimal implementation of the algorithms using
 standard IEEE double-precision floating-point mathematics.
 Preliminary work shows that some of the intermediate terms are just large
 enough so that rounding error may be of concern; the region of high-precision
 convergence has not been characterized.
 The propagation of rounding errors through the algorithm has not been character
ized; it may be possible to re-arrange terms to minimize the propagation
 of errors.
 Such a characterization is necessary before reliable double-precision code
 can be created.
 By contrast, such considerations can be swept under the rug when employing
 arbitrary-precision arithmetic.
\end_layout

\begin_layout Standard
For the Borwein algorithm, evaluating the bounds (
\begin_inset LatexCommand ref
reference "eq:error-bound-positive"

\end_inset

) and (
\begin_inset LatexCommand ref
reference "eq:error-bound-negative"

\end_inset

), so as to obtain an order estimate, is non-trivial, and can account for
 a significant amount of compute time.
 A speedier heuristic is desirable.
 By contrast, the Euler-Maclaurin algorithm seems to have a very simple
 heuristic that is quite adequate for general-purpose applications.
 In either case, it would be desirable to have a more refined analysis and
 presentation of the heuristics.
\end_layout

\begin_layout Standard
It may be possible to find even more rapidly converging algorithms, by generaliz
ing some of the results from Cohen 
\emph on
et al
\emph default
.
 
\begin_inset LatexCommand cite
key "Coh00"

\end_inset

, or by appealing to the general theory of Pad√© approximants.
 Both approaches seem promising, although that of Pad√© approximants may
 yield a more general theory.
\end_layout

\begin_layout Standard
The polylogarithm and Hurwitz zeta functions are both special cases of the
 Lerch transcendental 
\begin_inset Formula \[
\sum_{n=0}^{\infty}\frac{z^{n}}{(n+q)^{s}}\]

\end_inset

 It should be possible to extend the techniques in this paper to provide
 a rapid, globally convergent algorithm for the Lerch transcendental, thus
 enabling a deeper numerical exploration of its peculiarities.
 
\end_layout

\begin_layout Standard
This paper concludes with the application of the algorithm to render some
 pretty images.
\end_layout

\begin_layout Standard
\begin_inset LatexCommand bibtex
options "amsplain"
bibfiles "/home/linas/src/fractal/paper/fractal"

\end_inset


\end_layout

\begin_layout Section*
\start_of_appendix
Appendix: Some Pretty Pictures
\end_layout

\begin_layout Standard
Below follow some interesting pictures of the polylogarithm and the Hurwitz
 zeta function for values of 
\begin_inset Formula $s$
\end_inset

 on the critical line 
\begin_inset Formula $s=1/2+i\tau$
\end_inset

.
 They are shown here, as they are not commonly known.
 Each figure represents hours of computation on modern computers.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Standard
\begin_inset Caption

\begin_layout Standard
The Periodic Zeta
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename periodic-50-hires.png
	width 100text%
	special bb=0 0 600 600

\end_inset


\end_layout

\begin_layout Standard
This image illustrates the so-called 
\begin_inset Quotes eld
\end_inset

periodic zeta function
\begin_inset Quotes erd
\end_inset

 
\begin_inset Formula \[
F(q;s)=\mbox{Li}_{s}\left(e^{2\pi iq}\right)=\sum_{n=1}^{\infty}\frac{\exp(2i\pi nq)}{n^{s}}\]

\end_inset

 Graphed is the magnitude of 
\begin_inset Formula $F(q;s)$
\end_inset

, with a color scale such that zero is shown as black, one is a shade of
 greenish-blue, and two is yellow, and larger values as orange-red.
 Along the horizontal axis runs 
\begin_inset Formula $q$
\end_inset

, taken to be real, from 
\begin_inset Formula $q=0$
\end_inset

 on the left to 
\begin_inset Formula $q=1$
\end_inset

 on the right.
 Then, writing 
\begin_inset Formula $s=\frac{1}{2}+i\tau$
\end_inset

, the value of 
\begin_inset Formula $\tau$
\end_inset

 is varied along the vertical axis, running from 
\begin_inset Formula $\tau=0$
\end_inset

 at the bottom of the image, to 
\begin_inset Formula $\tau=50$
\end_inset

 at the top of the image.
 The non-trivial zeroes of the Riemann zeta function 
\begin_inset Formula $\zeta(s)=F(1,s)$
\end_inset

 are located where the blue lines intersect the right edge of the image.
 From the bottom, the first three zeroes are at 
\begin_inset Formula $s=0.5+i14.13\cdots,\,0.5+i21.02\cdots,\,0.5+i25.01\cdots$
\end_inset

.
 Due to the relation to the Dirichlet eta function, the zeros also materialize
 at the same values of 
\begin_inset Formula $s$
\end_inset

, but on the 
\begin_inset Formula $q=1/2$
\end_inset

 line.
\end_layout

\begin_layout Standard
Remarkably, the blue streaks seem to be roughly parabolic, but are interrupted
 by nearly straight 
\begin_inset Quotes eld
\end_inset

erasures
\begin_inset Quotes erd
\end_inset

.
 The pattern is reminiscent of graphs of the strong-field Stark effect (need
 ref).
 In the Stark effect, eigenvalues are given by the characteristic values
 of the Mathieu functions.
 These cross over one another in a curious fashion; see for example, figure
 20.1 in Abramowitz & Stegun.
 
\end_layout

\begin_layout Standard
The precise form of the parabolic blue streaks are due to a term of the
 form 
\begin_inset Formula $q^{-s}$
\end_inset

, as given by equation (
\begin_inset LatexCommand ref
reference "eq:F-approx"

\end_inset

).
 These may be subtracted, as illustrated in the next image.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Standard
generated with generate/hurwitz.C conversion with takelog, renorm 0.24 2
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Standard
\begin_inset Caption

\begin_layout Standard
Hurwitz zeta, with leading term subtracted
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename hurwitz-non-leading.png
	width 100text%
	special bb=0 0 600 600

\end_inset


\end_layout

\begin_layout Standard
This image shows the magnitude of 
\begin_inset Formula \[
\zeta(s,q+1)=\zeta(s,q)-q^{-s}\]

\end_inset

 for the range of 
\begin_inset Formula $0\le q\le1$
\end_inset

along the horizontal axis, and 
\begin_inset Formula $0\le\tau\le50$
\end_inset

 along the vertical axis, just as in the previous image; the same coloration
 scheme is used as well.
 This essentially corresponds to the previous picture, with the leading
 divergence subtracted; for large positive 
\begin_inset Formula $\tau$
\end_inset

, the magnitude of the periodic zeta and the Hurwitz zeta differ by an exponenti
ally small amount.
 A careful comparison of this picture to the previous now shows that the
 
\begin_inset Quotes eld
\end_inset

erasures
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

streaks
\begin_inset Quotes erd
\end_inset

 in the previous image correspond exactly to the dark parts of this image.
 Again, a cris-cross lattice pattern can be seen.
 The dominant streaks in this picture are presumably due to the 
\begin_inset Formula $(1+q)^{-s}$
\end_inset

 term.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Standard
\begin_inset Caption

\begin_layout Standard
Extended view of Hurwitz zeta
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename hurwitz-extended-hires.png
	width 100text%
	special bb= 0 0  600 600

\end_inset


\end_layout

\begin_layout Standard
This figure shows a view of the magnitude 
\begin_inset Formula $\left|\zeta(s,q)\right|$
\end_inset

 of the Hurwitz zeta over an extended range, together with a rescaling of
 coordinates in an attempt to straighten out the striations.
 The value of 
\begin_inset Formula $q$
\end_inset

 ranges from 0 to 
\begin_inset Formula $2\sqrt{2}\approx2.8$
\end_inset

 along the horizontal axis, although it is scaled as 
\begin_inset Formula $q^{3/2}$
\end_inset

 along this axis.
 This rescaling essentially turns the parabolic striations into straight,
 radial lines emanating from the origin at the lower left.
 This image also re-scales the 
\begin_inset Formula $\tau$
\end_inset

 coordinate, in an attempt to turn the radial striations into horizontals.
\end_layout

\begin_layout Standard
The value of 
\begin_inset Formula $q=1$
\end_inset

 is a vertical line running exactly down the middle of the image; the non-trivia
l Riemann zeroes are visibly stacked up on this line.
 The value of 
\begin_inset Formula $\tau$
\end_inset

 runs from 0 to 100 on this vertical line.
 On other verticals, 
\begin_inset Formula $\tau$
\end_inset

 has been rescaled by 
\begin_inset Formula $q^{1/2}$
\end_inset

, so that 
\begin_inset Formula $\tau$
\end_inset

 runs from 0 to 141 on the right hand side of the image, while being essentially
 held at zero along the left edge of the image.
\end_layout

\begin_layout Standard
The increasing complexity of the chain-link pattern is apparent as one moves
 up the imaginary axis.
 Equally apparent is that the maximum range of excursion of the magnitude
 changes only slowly over the range of the image: as the pattern increases
 in complexity, it does not wash out, but has a distinct binary on/off character.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Standard
\begin_inset Caption

\begin_layout Standard
\begin_inset LatexCommand label
name "cap:Polylogarithm-phase-plot"

\end_inset

Polylogarithm phase plot
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename poly-phase.png
	width 100text%
	special bb=0 0 600 600

\end_inset


\end_layout

\begin_layout Standard
This image shows a phase plot for the polylogarithm, on the complex 
\begin_inset Formula $z$
\end_inset

-plane, for 
\begin_inset Formula $s=0.5+i80$
\end_inset

.
 The color scheme is such that black represents the phase 
\begin_inset Formula $\arg\mbox{Li}_{s}\left(z\right)=-\pi$
\end_inset

, red represents the value of 
\begin_inset Formula $+\pi$
\end_inset

, and green a phase of zero.
 Points where the phase wraps around the full color range are zeros.
 Thus, each of the 
\begin_inset Quotes eld
\end_inset

fingers
\begin_inset Quotes erd
\end_inset

 in this image terminates on a zero.
 Most of these zeros are close to, but usually not quite on the circle 
\begin_inset Formula $\left|z\right|=1$
\end_inset

.
 The lone zero near the center of the image corresponds to the zero at 
\begin_inset Formula $z=0$
\end_inset

.
 The slight cusp at the right side of the image corresponds to 
\begin_inset Formula $z=1$
\end_inset

.
 The outer boundary of the image, adjoining to the solid green area, represents
 the limit of convergence for the combination of the Borwein algorithm and
 the duplication formula; one can enlarge the region of convergence slightly,
 but not much, but using polynomial approximations of higher order.
 The boundary is easily crossed by applying the inversion formula, as the
 later images show.
 The image is offset somewhat, rather than being centered on 
\begin_inset Formula $z=0$
\end_inset

, because most of the convergent region is to the left of the imaginary
 axis.
\end_layout

\begin_layout Standard
Note the other lone zero floating along inside of the 
\begin_inset Formula $\left|z\right|<1$
\end_inset

 disk.
 If this picture were animated as 
\begin_inset Formula $\tau$
\end_inset

 increased from 0 in the positive direction, then the zero fingers can be
 see be seen as marching across in a counter-clockwise fashion, starting
 at 
\begin_inset Formula $z=1$
\end_inset

and proceeding around.
 Most zeros pass to another sheet upon crossing 
\begin_inset Formula $z=1$
\end_inset

, after making a full revolution; others spiral around a second time on
 this sheet, such as the lone zero up top.
 An animated movie of this image, showing the spiraling, can be seen at
 http://www.linas.org/art-gallery/polylog/polylog.html
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Standard
generated with fractal/generate/polylog.C
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Standard
\begin_inset Caption

\begin_layout Standard
\begin_inset LatexCommand label
name "cap:Polylog-whole-plane"

\end_inset

Polylog whole plane
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename polylog-0-sheet.png
	width 100text%
	special bb=0 0 600 600

\end_inset

 
\end_layout

\begin_layout Standard
This image illustrates the results of combining the Borwein algorithm together
 with the inversion and duplication formulas.
 The image shows the complex 
\begin_inset Formula $z$
\end_inset

-plane, is centered on 
\begin_inset Formula $z=0,$
\end_inset

 and runs from -3.5 to +3.5, left to right, top to bottom.
 The value of 
\begin_inset Formula $s$
\end_inset

 is fixed at 
\begin_inset Formula $s=0.5+15i$
\end_inset

 for the whole picture.
 The color scheme is the same as for the previous picture.
 
\end_layout

\begin_layout Standard
Besides the zero at 
\begin_inset Formula $z=0$
\end_inset

 at the center of the picture, another zero is visible to the left, and
 slightly down.
 This zero is an 
\begin_inset Quotes eld
\end_inset

ex-Riemann zero
\begin_inset Quotes erd
\end_inset

, in that, if instead one had created the image for 
\begin_inset Formula $s=0.5+i14.1347\cdots$
\end_inset

, then this point would have been located exactly at 
\begin_inset Formula $z=-1$
\end_inset

.
 As it happens, this point has now rotated to slightly below 
\begin_inset Formula $z=-1$
\end_inset

.
 The zeroes above and to the right of the origin are Riemann zeroes to be:
 as 
\begin_inset Formula $\tau$
\end_inset

 increases, each will in turn rotate counterclockwise to assume the position
 at 
\begin_inset Formula $z=-1$
\end_inset

.
 
\end_layout

\begin_layout Standard
The concentric shells are centered on the point 
\begin_inset Formula $z=1$
\end_inset

.
 The branch cut can be seen extending to the right from from 
\begin_inset Formula $z=1$
\end_inset

, on the positive real axis.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Standard
\begin_inset Caption

\begin_layout Standard
Polylogarithm off the critical axis
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename polylog-1.2-14.png
	width 100text%
	special bb=0 0 600 600

\end_inset


\end_layout

\begin_layout Standard
This figure shows the polylogarithm in the complex 
\begin_inset Formula $z$
\end_inset

-plane, at fixed 
\begin_inset Formula $s=\sigma+i\tau=1.2+i14$
\end_inset

.
 It is superficially similar to the previous image, with two notable differences.
 Visible just under the cut, on the right, is a zero.
 If 
\begin_inset Formula $\sigma$
\end_inset

 were smaller, this zero would move to the left; at 
\begin_inset Formula $\sigma=0.5$
\end_inset

, it would be very near to the branch point at 
\begin_inset Formula $z=1$
\end_inset

.
 As 
\begin_inset Formula $\tau$
\end_inset

 gets larger, this point moves up, crossing the branch cut and moving onto
 the next sheet.
 Of course, if instead one had 
\begin_inset Formula $\sigma+i\tau=0.5+i14.13\ldots$
\end_inset

, this zero would be located precisely at 
\begin_inset Formula $z=1$
\end_inset

.
 Thus, this figure illustrates what a Riemann zero looks like when it is
 not on the critical strip.
\end_layout

\begin_layout Standard
As 
\begin_inset Formula $\tau$
\end_inset

 increases, the remaining zeroes circle around in a widening spiral: thus,
 the zero at the far left of the image is not near 
\begin_inset Formula $z=-1$
\end_inset

, but is to the left of there (and thus is not going to be a zero of the
 Dirichlet eta function).
 If instead one had 
\begin_inset Formula $\sigma$
\end_inset

 with a value of less than 0.5, the zeroes would spiral around in an ever-tighten
ing spiral, and would never hit the branch cut or cross over.
 The Riemann hypothesis is essentially that these zeroes are impacting exactly
 at the branch point; a violation of RH would be a pair of zeroes that failed
 to hit the branch point, instead passing to the left and right of the branch
 point.
 This figure suggests that RH holds: the zeroes are clearly lined up in
 single file; it is hard to imagine how this single file might break ranks
 into a pair of zeros that simultaneously passed near the branch point.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Standard
\begin_inset Caption

\begin_layout Standard
\begin_inset LatexCommand label
name "cap:N=+1 Upper-sheet"

\end_inset

Upper sheet of the polylogarithm
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename polylog-p1-sheet.png
	width 100text%
	special bb=0 0 600 600

\end_inset


\end_layout

\begin_layout Standard
This figure shows the 
\begin_inset Formula $g_{1}\mbox{Li}_{s}(z)=\mbox{Li}_{s}(z)-\Delta_{1}$
\end_inset

 sheet of the polylogarithm on the complex 
\begin_inset Formula $z$
\end_inset

-plane, obtained by circling the branch-point at 
\begin_inset Formula $z=1$
\end_inset

 in the right-handed direction.
 Two zeroes are visible: one at 
\begin_inset Formula $z=0$
\end_inset

, and the other an 
\begin_inset Quotes eld
\end_inset

ex-Riemann zero
\begin_inset Quotes erd
\end_inset

, located not far from 
\begin_inset Formula $z=1$
\end_inset

, a bit above the real axis.
 For this image, 
\begin_inset Formula $s$
\end_inset

 is held constant, at 
\begin_inset Formula $s=0.5+i15$
\end_inset

; the Riemann zeta function has its first non-trivial zero at 
\begin_inset Formula $s=0.5+i14.13\ldots$
\end_inset

.
 At that value, the above zero would have been located precisely at 
\begin_inset Formula $z=1$
\end_inset

, on the branch point of the polylogarithm.
 As 
\begin_inset Formula $\tau$
\end_inset

 increases, the Riemann zeroes pass precisely through this branch point,
 leaving the first sheet and moving to this one.
 
\end_layout

\begin_layout Standard
Indeed, the Riemann hypothesis can be taken as being equivalent to the statement
 that the Riemann zeroes always pass through the branch point in moving
 from one sheet to another.
 Taking 
\begin_inset Formula $s=\sigma+i\tau$
\end_inset

, if 
\begin_inset Formula $\sigma$
\end_inset

 is held constant at 
\begin_inset Formula $\sigma<1/2$
\end_inset

 while 
\begin_inset Formula $\tau$
\end_inset

 is increased, the polylogarithm zeroes never pass through the branch cut,
 and stay on the main sheet; whereas for 
\begin_inset Formula $\sigma>1/2$
\end_inset

, they do pass through the branch cut, but not at the branch point.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Standard
\begin_inset Caption

\begin_layout Standard
\begin_inset LatexCommand label
name "cap:N=-1 Lower-sheet"

\end_inset

Lower sheet of the polylogarithm
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename polylog-m1-sheet.png
	width 100text%
	special bb=0 0 600 600

\end_inset


\end_layout

\begin_layout Standard
This figure shows the 
\begin_inset Formula $g_{1}^{-1}\mbox{Li}_{s}(z)=\mbox{Li}_{s}(z)-\Delta_{-1}$
\end_inset

 sheet of the polylogarithm on the complex 
\begin_inset Formula $z$
\end_inset

-plane, obtained by going around the branch-point at 
\begin_inset Formula $z=1$
\end_inset

 in the left-handed (clockwise) direction.
 The concentric curves are centered on 
\begin_inset Formula $z=1$
\end_inset

, and whose form is essentially that of 
\begin_inset Formula $(1-q)^{1-s}$
\end_inset

.
 The vertex of the black triangle approaches 
\begin_inset Formula $z=0$
\end_inset

.
 By visual inspection, it is clear how to glue this sheet to the principal
 sheet shown in figure (
\begin_inset LatexCommand ref
reference "cap:Polylog-whole-plane"

\end_inset

).
 After this gluing, a cut remains between the points 
\begin_inset Formula $z=0$
\end_inset

 and 
\begin_inset Formula $z=1$
\end_inset

.
 This cut may be glued to the sheet that results by winding around the branch
 at 
\begin_inset Formula $z=0$
\end_inset

 in a clockwise manner.
 The result is shown in the next figure.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Standard
\begin_inset Caption

\begin_layout Standard
More polylogarithm sheets
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename polylog-m1-sheet.png
	lyxscale 25
	width 33text%
	special bb=0 0 600 600

\end_inset


\begin_inset Graphics
	filename polylog,-0,-2-sheet.png
	lyxscale 25
	width 33text%
	special bb=0 0 600 600

\end_inset


\begin_inset Graphics
	filename polylog,-0,-3-sheet.png
	lyxscale 25
	width 33text%
	special bb=0 0 600 600

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename polylog,1,1-sheet.png
	lyxscale 25
	width 33text%
	special bb=0 0 600 600

\end_inset


\begin_inset Graphics
	filename polylog,1,-2-sheet.png
	lyxscale 25
	width 33text%
	special bb=0 0 600 600

\end_inset


\begin_inset Graphics
	filename polylog,1,-3-sheet.png
	lyxscale 25
	width 33text%
	special bb=0 0 600 600

\end_inset


\end_layout

\begin_layout Standard
Top row: shows the result of winding around 
\begin_inset Formula $z=1$
\end_inset

, one, two and three times in a left-handed fashion.
 The cuts to the right of 
\begin_inset Formula $z=$
\end_inset

1 join together smoothly from image to image.
 Using the monodromy group notation, these are the 
\begin_inset Formula $g_{1}^{-1}$
\end_inset

, the 
\begin_inset Formula $g_{1}^{-1}g_{0}^{-1}g_{1}^{-1}$
\end_inset

, and the 
\begin_inset Formula $g_{1}^{-1}g_{0}^{-1}g_{1}^{-1}g_{0}^{-1}g_{1}^{-1}$
\end_inset

 sheets.
\end_layout

\begin_layout Standard
Second row: Result of winding left-handed around 
\begin_inset Formula $z=1$
\end_inset

, followed by winding around 
\begin_inset Formula $z=0$
\end_inset

 once.
 The cut 
\begin_inset Formula $0<z<1$
\end_inset

 joins smoothly to the images in the row above.
 The three images appear to be visually indistinguishable; but in fact they
 are not the same.
 Using the monodromy group notation, these are the 
\begin_inset Formula $g_{0}g_{1}^{-1}$
\end_inset

, the 
\begin_inset Formula $g_{0}g_{1}^{-1}g_{0}^{-1}g_{1}^{-1}$
\end_inset

, and the 
\begin_inset Formula $g_{0}g_{1}^{-1}g_{0}^{-1}g_{1}^{-1}g_{0}^{-1}g_{1}^{-1}$
\end_inset

 sheets.
 
\end_layout

\end_inset


\end_layout

\end_body
\end_document
