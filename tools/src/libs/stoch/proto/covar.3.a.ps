%!
% Xgraph postscript output
% Rick Spickelmier and David Harrison
% University of California, Berkeley
%
% Scaling information
%
% Change these if you would like to change the centering
% of the plot in either dimension
/X-CENTER-PLOT 1 def
/Y-CENTER-PLOT 1 def
%
% Page size computation
clippath pathbbox
/page-height exch def
/page-width exch def
pop pop
% Determine whether rotation is required
538.583 page-width gt
{ % Rotation required
   90 rotate
   0 page-width neg translate
   % Handle centering
   Y-CENTER-PLOT 1 eq { % Center in y
      page-height 538.583 sub 2 div
   } { % Don't center in y
      0
   } ifelse
   X-CENTER-PLOT 1 eq { % Center in x
      page-width 537.687 sub 2 div
   } { % Don't center in x
      0
   } ifelse
   translate
} { % No rotation - just handle centering
   X-CENTER-PLOT 1 eq { % Center in x
      page-width 538.583 sub 2 div
   } { % Don't center in x
      0
   } ifelse
   Y-CENTER-PLOT 1 eq { % Center in y
      page-height 537.687 sub 2 div
   } { % Don't center in y
      0
   } ifelse
   translate
} ifelse
% Set the scale
0.06 0.06 scale
% Font Handling Functions
%
% Function giving y-offset to center of font
% Assumes font is set and uses numbers to gauge center
%
/choose-font	% stack: fontsize fontname => ---
{
   findfont 
   exch scalefont 
   setfont
   newpath
   0 0 moveto (0) true charpath flattenpath pathbbox
   /top exch def pop
   /bottom exch def pop
   bottom top bottom top add 2 div
   /center-font-val exch def 
   /upper-font-val exch def 
   /lower-font-val exch def
} def
%
% Justfication offset routines
%
/center-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop 2 div sub exch
} def
%
/left-x-just	% stack: (string) x y => (string) newx y
{ 
} def
%
/right-x-just	% stack: (string) x y => (string) newx y
{
   exch 2 index stringwidth pop sub exch
} def
%
/center-y-just	% stack: (string) x y => (string) x newy
{
   center-font-val sub
} def
%
/lower-y-just	% stack: (string) x y => (string) x newy
{
   lower-font-val sub
} def
%
/upper-y-just	% stack: (string) x y => (string) x newy
{
   upper-font-val sub
} def
%
% Shows a string on the page subject to justification
%   
/just-string	% stack: (string) x y just => ---
{
   dup 0 eq { pop center-x-just center-y-just 		} if
   dup 1 eq { pop left-x-just center-y-just		} if
   dup 2 eq { pop left-x-just upper-y-just	 	} if
   dup 3 eq { pop center-x-just upper-y-just 		} if
   dup 4 eq { pop right-x-just upper-y-just	 	} if
   dup 5 eq { pop right-x-just center-y-just 		} if
   dup 6 eq { pop right-x-just lower-y-just	 	} if
   dup 7 eq { pop center-x-just lower-y-just  		} if
   dup 8 eq { pop left-x-just lower-y-just	 	} if
   moveto show
} def
%
% Marker definitions
/mark0 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath fill} def
/mark1 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto
size size add 0 rlineto 0 size size add rlineto
0 size size add sub 0 rlineto closepath stroke} def
/mark2 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc stroke} def
/mark3 {/size exch def /y exch def /x exch def
newpath x size sub y size sub moveto x size add y size add lineto
x size sub y size add moveto x size add y size sub lineto stroke} def
/mark4 {/size exch def /y exch def /x exch def
newpath x size sub y moveto x y size add lineto
x size add y lineto x y size sub lineto
closepath stroke} def
/mark5 {/size exch def /y exch def /x exch def
x y size mark1
newpath x size sub y moveto size size add 0 rlineto stroke} def
/mark6 {/size exch def /y exch def /x exch def
newpath x y moveto x y size 0 360 arc fill} def
/mark7 {/size exch def /y exch def /x exch def
newpath x y moveto x size sub y size sub lineto
x size add y size sub lineto closepath fill
newpath x y moveto x size add y size add lineto
x size sub y size add lineto closepath fill} def
%
% Main body begins here
%
300 /Times-Bold choose-font
(H=0.3 AutoCovariance) 4488 8841 3 just-string
200 /Times-Roman choose-font
(f) 8206 8089 2 just-string
14 setlinewidth
[] 0 setdash
newpath
  8206 8121 moveto
  8316 8121 lineto
stroke
(CoV (X(t1), X(t2)) x 10) 2620 8381 5 just-string
(-3) 2620 8381 8 just-string
((t1-t2)) 8886 380 5 just-string
(20.00) 860 682 5 just-string
(25.00) 860 1466 5 just-string
(30.00) 860 2249 5 just-string
(35.00) 860 3033 5 just-string
(40.00) 860 3816 5 just-string
(45.00) 860 4600 5 just-string
(50.00) 860 5384 5 just-string
(55.00) 860 6167 5 just-string
(60.00) 860 6951 5 just-string
(65.00) 860 7734 5 just-string
(0.00) 1513 90 7 just-string
(200.00) 2976 90 7 just-string
(400.00) 4440 90 7 just-string
(600.00) 5903 90 7 just-string
(800.00) 7367 90 7 just-string
[] 0 setdash
2 setlinewidth
newpath
  950 682 moveto
  8116 682 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 1466 moveto
  8116 1466 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 2249 moveto
  8116 2249 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 3033 moveto
  8116 3033 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 3816 moveto
  8116 3816 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 4600 moveto
  8116 4600 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 5384 moveto
  8116 5384 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 6167 moveto
  8116 6167 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 6951 moveto
  8116 6951 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  950 7734 moveto
  8116 7734 lineto
stroke
[] 0 setdash
8 setlinewidth
newpath
  1513 8091 moveto
  1513 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  2976 8091 moveto
  2976 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  4440 8091 moveto
  4440 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  5903 8091 moveto
  5903 380 lineto
stroke
[] 0 setdash
2 setlinewidth
newpath
  7367 8091 moveto
  7367 380 lineto
stroke
14 setlinewidth
newpath
  1604 8091 moveto
  1710 7502 lineto
  1908 6851 lineto
  2105 6403 lineto
  2310 6029 lineto
  2508 5763 lineto
  2705 5569 lineto
  2910 5377 lineto
  3108 5103 lineto
  3305 4785 lineto
  3510 4590 lineto
  3708 4355 lineto
  3906 4062 lineto
  4110 3765 lineto
  4308 3463 lineto
  4506 3201 lineto
  4703 2951 lineto
  4908 2730 lineto
  5106 2492 lineto
  5303 2226 lineto
  5508 2023 lineto
  5706 1955 lineto
  5903 1867 lineto
  6108 1806 lineto
  6306 1715 lineto
  6503 1523 lineto
  6708 1358 lineto
  6906 1105 lineto
  7103 936 lineto
  7301 805 lineto
  7506 713 lineto
  7703 617 lineto
  7901 528 lineto
  8106 417 lineto
  8116 410 lineto
stroke
showpage
